!function(I){var Q={};function C(g){if(Q[g])return Q[g].exports;var F=Q[g]={i:g,l:!1,exports:{}};return I[g].call(F.exports,F,F.exports,C),F.l=!0,F.exports}C.m=I,C.c=Q,C.d=function(I,Q,g){C.o(I,Q)||Object.defineProperty(I,Q,{enumerable:!0,get:g})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,Q){if(1&Q&&(I=C(I)),8&Q)return I;if(4&Q&&"object"==typeof I&&I&&I.__esModule)return I;var g=Object.create(null);if(C.r(g),Object.defineProperty(g,"default",{enumerable:!0,value:I}),2&Q&&"string"!=typeof I)for(var F in I)C.d(g,F,function(Q){return I[Q]}.bind(null,F));return g},C.n=function(I){var Q=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(Q,"a",Q),Q},C.o=function(I,Q){return Object.prototype.hasOwnProperty.call(I,Q)},C.p="",C(C.s=9)}([function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "885afa097b98821279ea8aa3c68cc293.gif";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9pY29ucy1hbGwuZ2lmPzA4ZmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLHFCQUF1QiIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiODg1YWZhMDk3Yjk4ODIxMjc5ZWE4YWEzYzY4Y2MyOTMuZ2lmXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "6ffe01bf317ac098a88868d5036cc5f8.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9pY29ucy5wbmc/OWU5ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI2ZmZlMDFiZjMxN2FjMDk4YTg4ODY4ZDUwMzZjYzVmOC5wbmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "d6ed19f7eb5d55fc824c588465cf2647.gif";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9pY29ucy5naWY/OTQ4NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJkNmVkMTlmN2ViNWQ1NWZjODI0YzU4ODQ2NWNmMjY0Ny5naWZcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(10);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanM/YWI1YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLElBQXFDO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLEVBQStCO0FBQzFELENBQUMsTUFBTSxFQUVOIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "c58df79dc817794353a65858035b71b6.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy90YW5ncmFtLWNvbG9ycGlja2VyLnBuZz8zODUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixxQkFBdUIiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImM1OGRmNzlkYzgxNzc5NDM1M2E2NTg1ODAzNWI3MWI2LnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){"use strict";eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcz8zMjBjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdCQUFnQixzQkFBc0I7QUFDdEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLG9CQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n")},function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn "@media " + item[2] + "{" + content + "}";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === "string")\n\t\t\tmodules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === "number")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || \'\';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === \'function\') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn \'/*# sourceURL=\' + cssMapping.sourceRoot + source + \' */\'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n\t}\n\n\treturn [content].join(\'\\n\');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = \'sourceMappingURL=data:application/json;charset=utf-8;base64,\' + base64;\n\n\treturn \'/*# \' + data + \' */\';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MjM1MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxjQUFjOztBQUVsRTtBQUNBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "c78d50851eeb7922d57ef3281f676dd1.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy93b3JkcGFzdGUucG5nP2VlY2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLHFCQUF1QiIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYzc4ZDUwODUxZWViNzkyMmQ1N2VmMzI4MWY2NzZkZDEucG5nXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve "head" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }\n                // }\n                if (typeof target === \'function\') {\n                        return target();\n                }\n                if (typeof memo[target] === "undefined") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(31);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === "object" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = "head";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === "top") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === "bottom") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === "object" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + " " + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement("style");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement("link");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\toptions.attrs.rel = "stylesheet";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don\'t add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute("media", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn\'t defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanM/Njg0NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxFQUFROztBQUU5QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsaUJBQWlCLG1CQUFtQjtBQUNwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsc0JBQXNCO0FBQ3ZDOztBQUVBO0FBQ0EsbUJBQW1CLDJCQUEyQjs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQiwyQkFBMkI7QUFDNUM7QUFDQTs7QUFFQSxRQUFRLHVCQUF1QjtBQUMvQjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTs7QUFFQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxnQkFBZ0IsaUJBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjOztBQUVkLGtEQUFrRCxzQkFBc0I7QUFDeEU7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RDs7QUFFQSw2QkFBNkIsbUJBQW1COztBQUVoRDs7QUFFQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xufTtcblxudmFyIGdldEVsZW1lbnQgPSAoZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vID0ge307XG5cblx0cmV0dXJuIGZ1bmN0aW9uKHRhcmdldCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0KTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Ly8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcblx0XHRcdFx0XHQvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG5cdFx0XHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3RhcmdldF1cblx0fTtcbn0pKCk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvICsgXCIgXCIgKyBvcHRpb25zLmluc2VydEF0LmJlZm9yZSk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXHRvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXG5cdGFkZEF0dHJzKGxpbmssIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayk7XG5cblx0cmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJzIChlbCwgYXR0cnMpIHtcblx0T2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKTtcblxuXHQgICAgaWYgKHJlc3VsdCkge1xuXHQgICAgXHQvLyBJZiB0cmFuc2Zvcm0gcmV0dXJucyBhIHZhbHVlLCB1c2UgdGhhdCBpbnN0ZWFkIG9mIHRoZSBvcmlnaW5hbCBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIHJ1bm5pbmcgcnVudGltZSB0cmFuc2Zvcm1hdGlvbnMgb24gdGhlIGNzcy5cblx0ICAgIFx0b2JqLmNzcyA9IHJlc3VsdDtcblx0ICAgIH0gZWxzZSB7XG5cdCAgICBcdC8vIElmIHRoZSB0cmFuc2Zvcm0gZnVuY3Rpb24gcmV0dXJucyBhIGZhbHN5IHZhbHVlLCBkb24ndCBhZGQgdGhpcyBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIGNvbmRpdGlvbmFsIGxvYWRpbmcgb2YgY3NzXG5cdCAgICBcdHJldHVybiBmdW5jdGlvbigpIHtcblx0ICAgIFx0XHQvLyBub29wXG5cdCAgICBcdH07XG5cdCAgICB9XG5cdH1cblxuXHRpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcblx0XHR2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcblxuXHRcdHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuXG5cdFx0dXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG5cdFx0cmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcblxuXHR9IGVsc2UgaWYgKFxuXHRcdG9iai5zb3VyY2VNYXAgJiZcblx0XHR0eXBlb2YgVVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLmNyZWF0ZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5yZXZva2VPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBCbG9iID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiXG5cdCkge1xuXHRcdHN0eWxlID0gY3JlYXRlTGlua0VsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gdXBkYXRlTGluay5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXG5cdFx0XHRpZihzdHlsZS5ocmVmKSBVUkwucmV2b2tlT2JqZWN0VVJMKHN0eWxlLmhyZWYpO1xuXHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXHRcdH07XG5cdH1cblxuXHR1cGRhdGUob2JqKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUgKG5ld09iaikge1xuXHRcdGlmIChuZXdPYmopIHtcblx0XHRcdGlmIChcblx0XHRcdFx0bmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJlxuXHRcdFx0XHRuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJlxuXHRcdFx0XHRuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR1cGRhdGUob2JqID0gbmV3T2JqKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVtb3ZlKCk7XG5cdFx0fVxuXHR9O1xufVxuXG52YXIgcmVwbGFjZVRleHQgPSAoZnVuY3Rpb24gKCkge1xuXHR2YXIgdGV4dFN0b3JlID0gW107XG5cblx0cmV0dXJuIGZ1bmN0aW9uIChpbmRleCwgcmVwbGFjZW1lbnQpIHtcblx0XHR0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG5cblx0XHRyZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcblx0fTtcbn0pKCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcgKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcblx0dmFyIGNzcyA9IHJlbW92ZSA/IFwiXCIgOiBvYmouY3NzO1xuXG5cdGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG5cdH0gZWxzZSB7XG5cdFx0dmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuXHRcdHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuXHRcdGlmIChjaGlsZE5vZGVzW2luZGV4XSkgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG5cdFx0XHRzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyAoc3R5bGUsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuXG5cdGlmKG1lZGlhKSB7XG5cdFx0c3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpXG5cdH1cblxuXHRpZihzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuXHR9IGVsc2Uge1xuXHRcdHdoaWxlKHN0eWxlLmZpcnN0Q2hpbGQpIHtcblx0XHRcdHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuXHRcdH1cblxuXHRcdHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUxpbmsgKGxpbmssIG9wdGlvbnMsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cblx0Lypcblx0XHRJZiBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgaXNuJ3QgZGVmaW5lZCwgYnV0IHNvdXJjZW1hcHMgYXJlIGVuYWJsZWRcblx0XHRhbmQgdGhlcmUgaXMgbm8gcHVibGljUGF0aCBkZWZpbmVkIHRoZW4gbGV0cyB0dXJuIGNvbnZlcnRUb0Fic29sdXRlVXJsc1xuXHRcdG9uIGJ5IGRlZmF1bHQuICBPdGhlcndpc2UgZGVmYXVsdCB0byB0aGUgY29udmVydFRvQWJzb2x1dGVVcmxzIG9wdGlvblxuXHRcdGRpcmVjdGx5XG5cdCovXG5cdHZhciBhdXRvRml4VXJscyA9IG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzID09PSB1bmRlZmluZWQgJiYgc291cmNlTWFwO1xuXG5cdGlmIChvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyB8fCBhdXRvRml4VXJscykge1xuXHRcdGNzcyA9IGZpeFVybHMoY3NzKTtcblx0fVxuXG5cdGlmIChzb3VyY2VNYXApIHtcblx0XHQvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjYwMzg3NVxuXHRcdGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpICsgXCIgKi9cIjtcblx0fVxuXG5cdHZhciBibG9iID0gbmV3IEJsb2IoW2Nzc10sIHsgdHlwZTogXCJ0ZXh0L2Nzc1wiIH0pO1xuXG5cdHZhciBvbGRTcmMgPSBsaW5rLmhyZWY7XG5cblx0bGluay5ocmVmID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcblxuXHRpZihvbGRTcmMpIFVSTC5yZXZva2VPYmplY3RVUkwob2xkU3JjKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _react = __webpack_require__(3);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(11);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _Editor = __webpack_require__(15);\n\nvar _Editor2 = _interopRequireDefault(_Editor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_reactDom2.default.render(_react2.default.createElement(_Editor2.default, { id: 'content', height: '200' }), document.getElementById('root'));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbWFpbi5qcz9mMTYxIl0sIm5hbWVzIjpbIlJlYWN0RE9NIiwicmVuZGVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBQSxtQkFBU0MsTUFBVCxDQUNJLDhCQUFDLGdCQUFELElBQVEsSUFBRyxTQUFYLEVBQXFCLFFBQU8sS0FBNUIsR0FESixFQUVJQyxTQUFTQyxjQUFULENBQXdCLE1BQXhCLENBRkoiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBFZGl0b3IgZnJvbSAnLi9FZGl0b3IuanN4JztcblxuUmVhY3RET00ucmVuZGVyKFxuICAgIDxFZGl0b3IgaWQ9XCJjb250ZW50XCIgaGVpZ2h0PVwiMjAwXCIvPixcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpXG4gICk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n")},function(module,exports,__webpack_require__){"use strict";eval('/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar l=__webpack_require__(5),n="function"===typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.forward_ref"):60112,y=n?Symbol.for("react.suspense"):60113,z=n?Symbol.for("react.memo"):60115,A=n?Symbol.for("react.lazy"):\n60116,B="function"===typeof Symbol&&Symbol.iterator;function C(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,"setState")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,""===b?"."+U(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||"object"!==typeof a?f=null:(f=B&&a[B]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if("object"===d)throw c=""+a,Error(C(31,"[object Object]"===c?"object with keys {"+Object.keys(a).join(", ")+"}":c,""));return g}function V(a,b,c){return null==a?0:T(a,"",b,c)}function U(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(P,"$&/")+"/")+c)),e.push(a))}function X(a,b,c,e,d){var g="";null!=c&&(g=(""+c).replace(P,"$&/")+"/");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version="16.14.0";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzP2JlMjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYSxNQUFNLG1CQUFPLENBQUMsQ0FBZTtBQUMxQyxvREFBb0QsY0FBYyx5RUFBeUUsbUJBQW1CLG1EQUFtRCxtQ0FBbUM7QUFDcFAsT0FBTyxxQkFBcUIsU0FBUyxnQ0FBZ0MsaUNBQWlDLDhCQUE4QixNQUFNLGtCQUFrQixhQUFhLGVBQWUsWUFBWSxrQkFBa0IsZ0NBQWdDLG1DQUFtQywwRUFBMEUsbURBQW1ELG9DQUFvQztBQUMxYixjQUFjLHdCQUF3QixrQkFBa0IsYUFBYSxlQUFlLFlBQVksa0JBQWtCLHdCQUF3QixnQkFBZ0IsaUJBQWlCLDBCQUEwQixPQUFPLGFBQWEsc0NBQXNDO0FBQy9QLGtCQUFrQixVQUFVLGVBQWUsNEhBQTRILHlCQUF5QixzQkFBc0IsYUFBYSx1QkFBdUIsSUFBSSx3QkFBd0IsYUFBYSw0RUFBNEUsT0FBTztBQUN0WCxnQkFBZ0IsT0FBTyxzRUFBc0UsY0FBYyxvREFBb0QsbUJBQW1CLE9BQU8sbUJBQW1CLDZDQUE2QyxZQUFZLEVBQUUsa0JBQWtCLG9CQUFvQixhQUFhLGNBQWMsV0FBVyxjQUFjLFNBQVMsWUFBWSxVQUFVLFNBQVMsT0FBTztBQUNoWixjQUFjLGNBQWMsaUJBQWlCLFlBQVksZUFBZSxVQUFVO0FBQ2xGLG9CQUFvQixlQUFlLHlDQUF5QyxTQUFTLGlCQUFpQixlQUFlLGlDQUFpQyxNQUFNLGlDQUFpQyxvQkFBb0IseUNBQXlDLElBQUksbUJBQW1CLGdDQUFnQyxXQUFXLEtBQUssT0FBTyxlQUFlLGNBQWM7QUFDclcsRUFBRSxtQkFBbUIsc0NBQXNDLHNGQUFzRiw4QkFBOEIsU0FBUyxTQUFTLGtCQUFrQiw2QkFBNkIsZ0JBQWdCLDhFQUE4RSxnQkFBZ0I7QUFDOVYsbUJBQW1CLDZCQUE2QixxQ0FBcUMscUNBQXFDLFNBQVMsd0dBQXdHLHNCQUFzQixTQUFTLHlDQUF5QyxhQUFhLFVBQVUsS0FBSyxPQUFPLGNBQWMsYUFBYSxnQkFBZ0IsZ0NBQWdDO0FBQ2phLFFBQVEsa0RBQWtELGNBQWMsMkNBQTJDLFdBQVcsV0FBVyxrQkFBa0Isb0JBQW9CLG9CQUFvQixTQUFTLGdCQUFnQixTQUFTLHlCQUF5QixvQkFBb0IsbUJBQW1CLFNBQVMsS0FBSyxtQkFBbUIsc0JBQXNCLFlBQVksT0FBTyxxQkFBcUIsU0FBUyx1QkFBdUIsU0FBUyxFQUFFLFNBQVMsa0JBQWtCLDZCQUE2QjtBQUN2ZSxvQkFBb0IsbUJBQW1CLG1CQUFtQix3QkFBd0IscUJBQXFCLG1CQUFtQjtBQUMxSCxxQ0FBcUMsOENBQThDLFVBQVUscUNBQXFDLFlBQVksc0NBQXNDLDZCQUE2Qix5REFBeUQseUZBQXlGLHlCQUF5QixzQkFBc0IsYUFBYSxXQUFXLFlBQVksSUFBSSx3QkFBd0IsYUFBYSxPQUFPO0FBQ3RlLCtCQUErQixvQ0FBb0MscUJBQXFCLEdBQUcsZ0hBQWdILFlBQVksdUJBQXVCLHFCQUFxQix3QkFBd0Isa0NBQWtDLHFCQUFxQixTQUFTLFVBQVUsNkJBQTZCLE9BQU8sZUFBZSwrQkFBK0IsT0FBTyxzQkFBc0I7QUFDcGQseUJBQXlCLE9BQU8sNkNBQTZDLDJCQUEyQixPQUFPLDhDQUE4QyxrQ0FBa0MsNkJBQTZCLGlDQUFpQyw0QkFBNEIsbUNBQW1DLGdDQUFnQywyQkFBMkIsNENBQTRDO0FBQ25hLHNDQUFzQyxpQ0FBaUMsOEJBQThCLHlCQUF5QixtQ0FBbUMsOEJBQThCLDJCQUEyQixzQkFBc0IsNkJBQTZCLHdCQUF3QiIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTQuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xNC4wXCI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {}\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(12);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzPzhiYzgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sS0FBcUMsRUFBRSxFQVMxQztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksSUFBcUM7QUFDekM7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsRUFBbUM7QUFDOUQsQ0FBQyxNQUFNLEVBRU4iLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){"use strict";eval('/** @license React v16.14.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(3),n=__webpack_require__(5),r=__webpack_require__(13);function u(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(u(227));\nfunction ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;\nfunction oa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};\nfunction ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}\nfunction ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),za=null,Aa=null,Ba=null;\nfunction Ca(a){if(a=ma(a)){if("function"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}\nfunction Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};\nfunction Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}\nfunction Ta(a,b,c,d){if(null===b||"undefined"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};\n"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});\n["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});\n["checked","multiple","muted","selected"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});["capture","download"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});["cols","rows","size","span"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});["rowSpan","start"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}\n"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Ua,\nVa);C[b]=new v(b,1,!1,a,null,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1)});["tabIndex","crossOrigin"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});\nC.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0);["src","href","action","formAction"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty("ReactCurrentDispatcher")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty("ReactCurrentBatchConfig")||(Wa.ReactCurrentBatchConfig={suspense:null});\nfunction Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar Ya=/^(.*)[\\\\\\/]/,E="function"===typeof Symbol&&Symbol.for,Za=E?Symbol.for("react.element"):60103,$a=E?Symbol.for("react.portal"):60106,ab=E?Symbol.for("react.fragment"):60107,bb=E?Symbol.for("react.strict_mode"):60108,cb=E?Symbol.for("react.profiler"):60114,db=E?Symbol.for("react.provider"):60109,eb=E?Symbol.for("react.context"):60110,fb=E?Symbol.for("react.concurrent_mode"):60111,gb=E?Symbol.for("react.forward_ref"):60112,hb=E?Symbol.for("react.suspense"):60113,ib=E?Symbol.for("react.suspense_list"):\n60120,jb=E?Symbol.for("react.memo"):60115,kb=E?Symbol.for("react.lazy"):60116,lb=E?Symbol.for("react.block"):60121,mb="function"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||"object"!==typeof a)return null;a=mb&&a[mb]||a["@@iterator"];return"function"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}\nfunction pb(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ab:return"Fragment";case $a:return"Portal";case cb:return"Profiler";case bb:return"StrictMode";case hb:return"Suspense";case ib:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case eb:return"Context.Consumer";case db:return"Context.Provider";case gb:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+")":\n"ForwardRef");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Ya,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}\nfunction rb(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function sb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}\nfunction tb(a){var b=sb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=sb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Ab(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,"checked",b,!1)}\nfunction Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?Db(a,b.type,c):b.hasOwnProperty("defaultValue")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Eb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}\nfunction Db(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function Fb(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}\nfunction Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:rb(c)}}\nfunction Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var Mb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};\nfunction Nb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ob(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Nb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}\nvar Pb,Qb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||"innerHTML"in a)a.innerHTML=b;else{Pb=Pb||document.createElement("div");Pb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Tb={animationend:Sb("Animation","AnimationEnd"),animationiteration:Sb("Animation","AnimationIteration"),animationstart:Sb("Animation","AnimationStart"),transitionend:Sb("Transition","TransitionEnd")},Ub={},Vb={};\nya&&(Vb=document.createElement("div").style,"AnimationEvent"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),"TransitionEvent"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}\nvar Xb=Wb("animationend"),Yb=Wb("animationiteration"),Zb=Wb("animationstart"),$b=Wb("transitionend"),ac="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bc=new ("function"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}\nfunction dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}\nfunction gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;\nfunction lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}\nfunction nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}\nfunction rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}\nfunction sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=\nic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case "scroll":vc(b,"scroll",!0);break;case "focus":case "blur":vc(b,"focus",!0);vc(b,"blur",!0);c.set("blur",null);c.set("focus",null);break;case "cancel":case "close":oc(a)&&vc(b,a,!0);break;case "invalid":case "submit":case "reset":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}\nvar wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ic="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");\nfunction Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}\nfunction Lc(a,b){switch(a){case "focus":case "blur":Bc=null;break;case "dragenter":case "dragleave":Cc=null;break;case "mouseover":case "mouseout":Dc=null;break;case "pointerover":case "pointerout":Ec.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}\nfunction Oc(a,b,c,d,e){switch(b){case "focus":return Bc=Mc(Bc,a,b,c,d,e),!0;case "dragenter":return Cc=Mc(Cc,a,b,c,d,e),!0;case "mouseover":return Dc=Mc(Dc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}\nfunction Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}\nfunction Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}\nvar Wc={},Yc=new Map,Zc=new Map,$c=["abort","abort",Xb,"animationEnd",Yb,"animationIteration",Zb,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking",\n"seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",$b,"transitionEnd","waiting","waiting"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f="on"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+"Capture"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}\nad("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0);\nad("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);ad($c,2);for(var bd="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);\nvar dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}\nfunction id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}\nfunction Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}\nvar jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=["Webkit","ms","Moz","O"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(""+b).trim():b+"px"}\nfunction md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=ld(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,""));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(u(62,""));}}\nfunction pd(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}\nfunction td(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}\nfunction wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}\nfunction yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}var zd="$",Ad="/$",Bd="$?",Cd="$!",Dd=null,Ed=null;function Fd(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}\nfunction Gd(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd="function"===typeof setTimeout?setTimeout:void 0,Id="function"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}\nfunction Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md="__reactInternalInstance$"+Ld,Nd="__reactEventHandlers$"+Ld,Od="__reactContainere$"+Ld;\nfunction tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}\nfunction Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==typeof c)throw Error(u(231,\nb,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],"captured",a);for(b=0;b<c.length;b++)Td(c[b],"bubbled",a)}}\nfunction Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;\nfunction ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e="value"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}\nfunction G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}\nn(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nG.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&"CompositionEvent"in window,ke=null;ya&&"documentMode"in document&&(ke=document.documentMode);\nvar le=ya&&"TextEvent"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",\ncaptured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},pe=!1;\nfunction qe(a,b){switch(a){case "keyup":return-1!==ie.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function re(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var se=!1;function te(a,b){switch(a){case "compositionend":return re(b);case "keypress":if(32!==b.which)return null;pe=!0;return ne;case "textInput":return a=b.data,a===ne&&pe?null:a;default:return null}}\nfunction ue(a,b){if(se)return"compositionend"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return me&&"ko"!==b.locale?null:b.data;default:return null}}\nvar ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case "compositionstart":var f=oe.compositionStart;break b;case "compositionend":f=oe.compositionEnd;break b;case "compositionupdate":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):"keydown"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&"ko"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd="value"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,\nb,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!we[a.type]:"textarea"===b?!0:!1}\nvar ye={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type="change";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if("change"===a)return b}var Fe=!1;ya&&(Fe=oc("input")&&(!document.documentMode||9<document.documentMode));\nfunction Ge(){Ae&&(Ae.detachEvent("onpropertychange",He),Be=Ae=null)}function He(a){if("value"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){"focus"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent("onpropertychange",He)):"blur"===a&&Ge()}function Je(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return De(Be)}function Ke(a,b){if("click"===a)return De(b)}function Le(a,b){if("input"===a||"change"===a)return De(b)}\nvar Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&"input"===f.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Db(e,"number",e.value)}},Ne=G.extend({view:null,detail:null}),\nOe={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}\nvar Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?"mousemove"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;\nvar b=Se;Se=a.screenY;return Ue?"mousemove"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",\ndependencies:["pointerout","pointerover"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f="mouseover"===a||"pointerover"===a,g="mouseout"===a||"pointerout"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if("mouseout"===a||"mouseover"===\na){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p="mouse"}else if("pointerout"===a||"pointerover"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p="pointer";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+"leave";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+"enter";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;\nk=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],"bubbled",l);for(p=d.length;0<p--;)Vd(d[p],"captured",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e="function"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;\nfunction bf(a,b){if($e(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}\nvar cf=ya&&"documentMode"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},ef=null,ff=null,gf=null,hf=!1;\nfunction jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;"selectionStart"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type="select",a.target=ef,Xd(a),a)}\nvar kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case "focus":if(xe(e)||"true"===e.contentEditable)ef=e,ff=b,gf=null;break;case "blur":gf=ff=ef=null;break;case "mousedown":hf=!0;break;case "contextmenu":case "mouseup":case "dragend":return hf=!1,jf(c,d);case "selectionchange":if(cf)break;\ncase "keydown":case "keyup":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar pf={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",\n116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=of(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?qf[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return"keypress"===\na.type?of(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?of(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in\na?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case "keypress":if(0===of(c))return null;case "keydown":case "keyup":a=rf;break;case "blur":case "focus":a=nf;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=\nVe;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=sf;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case "scroll":a=Ne;break;case "wheel":a=vf;break;case "copy":case "cut":case "paste":a=mf;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=\nWe;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}\nfunction I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}\nfunction Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||"Unknown",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}\nfunction Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}\nvar If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};\nfunction ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}\nfunction fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}\nfunction og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}\nfunction sg(a,b){if(mg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}\nfunction vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}\nfunction zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=\nca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if("function"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g="function"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&\n(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}\nfunction Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if("function"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}\nvar Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;\nc=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}\nfunction Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;"object"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Mg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}\nfunction Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||\n(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;\nfunction Pg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}\nfunction Qg(a,b){if("textarea"!==a.type)throw Error(u(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,""));}\nfunction Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Tg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||\nnb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=\na.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&\nm&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if("function"!==typeof k)throw Error(u(150));h=k.call(h);\nif(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==\nq.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,\nk.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=\nd.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||"Component"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};\nfunction ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};\nfunction hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}\nvar jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}\nfunction oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}\nfunction th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction vh(a,b){return"function"===typeof b?b(a):b}\nfunction wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&\n(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction yh(a){var b=th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}\nfunction Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}\nfunction Hh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}\nfunction zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,\nd)}}\nvar sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,\nb];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=\nc}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=\nwh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,\nb,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}\nfunction Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}\nfunction Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}\nfunction ai(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}\nfunction fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;p||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&\n"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===\ntypeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p="function"===typeof m||"function"===\ntypeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,l),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):\n("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}\nfunction gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}\nvar ii={dehydrated:null,retryTime:0};\nfunction ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=\nb;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=\nc}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}\nfunction ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case "together":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;\nni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};\npi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case "input":f=zb(g,f);d=zb(g,d);a=[];break;case "option":f=Gb(g,f);d=Gb(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=Ib(g,f);d=Ib(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if("style"===\nh)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]="");else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if("style"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]="");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),\nc[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else"dangerouslySetInnerHTML"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):"children"===h?g===l||"string"!==typeof l&&"number"!==typeof l||(a=a||[]).push(h,""+l):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push("style",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};\nqi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));\nreturn null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case "iframe":case "object":case "embed":F("load",d);break;case "video":case "audio":for(a=0;a<ac.length;a++)F(ac[a],d);break;case "source":F("error",d);break;case "img":case "image":case "link":F("error",d);F("load",d);break;case "form":F("reset",d);F("submit",d);break;case "details":F("toggle",d);break;case "input":Ab(d,f);F("invalid",d);rd(c,"onChange");break;case "select":d._wrapperState=\n{wasMultiple:!!f.multiple};F("invalid",d);rd(c,"onChange");break;case "textarea":Jb(d,f),F("invalid",d),rd(c,"onChange")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(a=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(a=["children",""+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case "input":xb(d);Eb(d,f,!0);break;case "textarea":xb(d);Lb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&\n(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?"script"===e?(a=g.createElement("div"),a.innerHTML="<script>\\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),"select"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case "iframe":case "object":case "embed":F("load",\na);h=d;break;case "video":case "audio":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case "source":F("error",a);h=d;break;case "img":case "image":case "link":F("error",a);F("load",a);h=d;break;case "form":F("reset",a);F("submit",a);h=d;break;case "details":F("toggle",a);h=d;break;case "input":Ab(a,d);h=zb(a,d);F("invalid",a);rd(c,"onChange");break;case "option":h=Gb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F("invalid",a);rd(c,"onChange");break;case "textarea":Jb(a,\nd);h=Ib(a,d);F("invalid",a);rd(c,"onChange");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];"style"===f?md(a,l):"dangerouslySetInnerHTML"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):"children"===f?"string"===typeof l?("textarea"!==e||""!==l)&&Rb(a,l):"number"===typeof l&&Rb(a,""+l):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case "input":xb(a);Eb(a,d,!1);\nbreak;case "textarea":xb(a);Lb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+rb(d.value));break;case "select":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(u(166));\nc=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=\ne,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&\n64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,\ne.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&"hidden"===d.tailMode&&!f.alternate)return b=\nb.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,\nb.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}\nvar Bi="function"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}\nfunction Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}\nfunction Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}\nfunction Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;\ncase 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}\nfunction Ki(a,b,c){"function"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;"function"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}\nfunction Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}\nfunction Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}\nfunction Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}\nfunction Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=\nf,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}\nfunction Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;"input"===a&&"radio"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];"style"===g?md(c,h):"dangerouslySetInnerHTML"===g?Qb(c,h):"children"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case "input":Cb(c,d);break;\ncase "textarea":Kb(c,d);break;case "select":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?\nd=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null,f.style.display=ld("display",e));else if(6===a.tag)a.stateNode.nodeValue=d?"":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=\nf;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nvar Wi="function"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}\nfunction $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}\nvar bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}\nfunction Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}\nfunction Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}\nfunction xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}\nfunction zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}\nfunction Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=\nb;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}\nfunction Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;\nc===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=\nd;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=\nHd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}\nfunction yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}\nfunction Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}\nfunction Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}\nfunction Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&"object"===typeof h&&"function"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=\nnull,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;\nbreak a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+qb(g))}S!==\njj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&("function"===typeof w.getDerivedStateFromError||null!==ub&&"function"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}\nfunction Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}\nfunction Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==\na.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}\nfunction Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=\nd-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if("selectionStart"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,\nm=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=\nnull;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,"");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=\n-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),"selectionStart"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&\n(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,\ntop:w.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}"function"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=\nnull;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;"function"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}\nfunction Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}\nfunction Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}\nfunction Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;\nRj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;\nif(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,\nb,d,a,e,c);b.effectTag|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=\nnull,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);\ncase 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:\nnull,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,\nb,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==\nk){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=\ng}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,\nb,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}\nfunction Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}\nfunction bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if("function"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}\nfunction Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,\nfirstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Ug(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bi(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case db:g=\n10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,""));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}\nfunction Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}\nfunction Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}\nfunction yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}\nfunction bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===\nd?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}\nfunction fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};\nfunction gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}\nfunction ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}\nwc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};\nza=function(a,b,c){switch(b){case "input":Cb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+\'][type="radio"]\');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case "textarea":Kb(a,c);break;case "select":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;\nGa=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};\n(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:"16.14.0",\nrendererPackageName:"react-dom"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if("function"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};\nexports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};\nexports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version="16.14.0";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(14);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzPzQwMjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxJQUFxQztBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyxFQUFtQztBQUM5RCxDQUFDLE1BQU0sRUFFTiIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n")},function(module,exports,__webpack_require__){"use strict";eval('/** @license React v0.19.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar f,g,h,k,l;\nif("undefined"===typeof window||"function"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\ny=window.setTimeout,z=window.clearTimeout;if("undefined"!==typeof console){var A=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");"function"!==typeof A&&console.error("This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===\ntypeof w&&"function"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=\nfunction(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}\nfunction M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;\nfunction V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}\nfunction X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}\nfunction Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};\nexports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if("object"===typeof c&&null!==c){var e=c.delay;e="number"===typeof e&&0<e?d+e:d;c="number"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};\nexports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(3);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ueditor = __webpack_require__(16);\n\nvar _ueditor2 = _interopRequireDefault(_ueditor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Editor = function (_Component) {\n  _inherits(Editor, _Component);\n\n  function Editor(props) {\n    _classCallCheck(this, Editor);\n\n    var _this = _possibleConstructorReturn(this, (Editor.__proto__ || Object.getPrototypeOf(Editor)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Editor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initEditor();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // 组件卸载后，清除放入库的id\n      _ueditor2.default.delEditor(this.props.id);\n    }\n  }, {\n    key: 'initEditor',\n    value: function initEditor() {\n      var _props = this.props,\n          id = _props.id,\n          config = _props.config;\n\n      var ueEditor = _ueditor2.default.getEditor(this.props.id, config);\n      var self = this;\n\n      ueEditor.ready(function (ueditor) {\n        if (!ueditor) {\n          _ueditor2.default.delEditor(id);\n          self.initEditor();\n        }\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', { id: this.props.id, name: 'content', type: 'text/plain' });\n    }\n  }]);\n\n  return Editor;\n}(_react.Component);\n\nexports.default = Editor;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvRWRpdG9yLmpzeD81NGM2Il0sIm5hbWVzIjpbIkVkaXRvciIsInByb3BzIiwic3RhdGUiLCJpbml0RWRpdG9yIiwiVUUiLCJkZWxFZGl0b3IiLCJpZCIsImNvbmZpZyIsInVlRWRpdG9yIiwiZ2V0RWRpdG9yIiwic2VsZiIsInJlYWR5IiwidWVkaXRvciIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7SUFDTUEsTTs7O0FBRUEsa0JBQVlDLEtBQVosRUFBa0I7QUFBQTs7QUFBQSxnSEFDVkEsS0FEVTs7QUFFaEIsVUFBS0MsS0FBTCxHQUFhLEVBQWI7QUFGZ0I7QUFJakI7Ozs7d0NBRWtCO0FBQ2pCLFdBQUtDLFVBQUw7QUFDRDs7OzJDQUVzQjtBQUNyQjtBQUNBQyx3QkFBR0MsU0FBSCxDQUFhLEtBQUtKLEtBQUwsQ0FBV0ssRUFBeEI7QUFDRDs7O2lDQUVZO0FBQUEsbUJBQ1ksS0FBS0wsS0FEakI7QUFBQSxVQUNISyxFQURHLFVBQ0hBLEVBREc7QUFBQSxVQUNDQyxNQURELFVBQ0NBLE1BREQ7O0FBRVgsVUFBTUMsV0FBV0osa0JBQUdLLFNBQUgsQ0FBYSxLQUFLUixLQUFMLENBQVdLLEVBQXhCLEVBQTRCQyxNQUE1QixDQUFqQjtBQUNBLFVBQU1HLE9BQU8sSUFBYjs7QUFFQUYsZUFBU0csS0FBVCxDQUFlLFVBQUNDLE9BQUQsRUFBYTtBQUMxQixZQUFJLENBQUNBLE9BQUwsRUFBYztBQUNaUiw0QkFBR0MsU0FBSCxDQUFhQyxFQUFiO0FBQ0FJLGVBQUtQLFVBQUw7QUFDRDtBQUNGLE9BTEQ7QUFNRDs7OzZCQUVPO0FBQ04sYUFDRSx1Q0FBSyxJQUFJLEtBQUtGLEtBQUwsQ0FBV0ssRUFBcEIsRUFBd0IsTUFBSyxTQUE3QixFQUF1QyxNQUFLLFlBQTVDLEdBREY7QUFHRDs7OztFQWxDY08sZ0I7O2tCQXFDTmIsTSIsImZpbGUiOiIxNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVUUgZnJvbSAnLi4vdWVkaXRvci91ZWRpdG9yLmFsbCc7XG5jbGFzcyBFZGl0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIFxuICAgICAgY29uc3RydWN0b3IocHJvcHMpe1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgXG4gICAgICBjb21wb25lbnREaWRNb3VudCgpe1xuICAgICAgICB0aGlzLmluaXRFZGl0b3IoKVxuICAgICAgfVxuICAgIFxuICAgICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIC8vIOe7hOS7tuWNuOi9veWQju+8jOa4hemZpOaUvuWFpeW6k+eahGlkXG4gICAgICAgIFVFLmRlbEVkaXRvcih0aGlzLnByb3BzLmlkKTtcbiAgICAgIH1cbiAgICBcbiAgICAgIGluaXRFZGl0b3IoKSB7XG4gICAgICAgIGNvbnN0IHsgaWQsIGNvbmZpZyB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgdWVFZGl0b3IgPSBVRS5nZXRFZGl0b3IodGhpcy5wcm9wcy5pZCwgY29uZmlnKTtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgXG4gICAgICAgIHVlRWRpdG9yLnJlYWR5KCh1ZWRpdG9yKSA9PiB7XG4gICAgICAgICAgaWYgKCF1ZWRpdG9yKSB7XG4gICAgICAgICAgICBVRS5kZWxFZGl0b3IoaWQpO1xuICAgICAgICAgICAgc2VsZi5pbml0RWRpdG9yKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIFxuICAgICAgcmVuZGVyKCl7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGRpdiBpZD17dGhpcy5wcm9wcy5pZH0gbmFtZT1cImNvbnRlbnRcIiB0eXBlPVwidGV4dC9wbGFpblwiPjwvZGl2PlxuICAgICAgICApXG4gICAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEVkaXRvcjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){"use strict";eval('Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/*!\n * ueditor\n * version: 2.0.0\n * build: Mon Apr 30 2018 14:54:50 GMT+0800 (CST)\n */var _zhCn=__webpack_require__(17);var _zhCn2=_interopRequireDefault(_zhCn);var _ueditor=__webpack_require__(18);var _ueditor2=_interopRequireDefault(_ueditor);__webpack_require__(19);__webpack_require__(32);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// (function(){\n// editor.js\n// UEDITOR_CONFIG = window.UEDITOR_CONFIG || {};\nvar baidu=window.baidu||{};window.baidu=baidu;window.UE=baidu.editor=window.UE||{};UE.plugins={};UE.commands={};UE.instants={};UE.I18N={};UE.I18N[\'zh-cn\']=_zhCn2.default;UE._customizeUI={};UE.version="1.5.0";var dom=UE.dom={};// core/browser.js\n/**\n * 浏览器判断模块\n * @file\n * @module UE.browser\n * @since 1.2.6.1\n *//**\n * 提供浏览器检测的模块\n * @unfile\n * @module UE.browser\n */var browser=UE.browser=function(){var agent=navigator.userAgent.toLowerCase(),opera=window.opera,browser={/**\n         * @property {boolean} ie 检测当前浏览器是否为IE\n         * @example\n         * ```javascript\n         * if ( UE.browser.ie ) {\n         *     console.log( \'当前浏览器是IE\' );\n         * }\n         * ```\n         */ie:/(msie\\s|trident.*rv:)([\\w.]+)/i.test(agent),/**\n         * @property {boolean} opera 检测当前浏览器是否为Opera\n         * @example\n         * ```javascript\n         * if ( UE.browser.opera ) {\n         *     console.log( \'当前浏览器是Opera\' );\n         * }\n         * ```\n         */opera:!!opera&&opera.version,/**\n         * @property {boolean} webkit 检测当前浏览器是否是webkit内核的浏览器\n         * @example\n         * ```javascript\n         * if ( UE.browser.webkit ) {\n         *     console.log( \'当前浏览器是webkit内核浏览器\' );\n         * }\n         * ```\n         */webkit:agent.indexOf(" applewebkit/")>-1,/**\n         * @property {boolean} mac 检测当前浏览器是否是运行在mac平台下\n         * @example\n         * ```javascript\n         * if ( UE.browser.mac ) {\n         *     console.log( \'当前浏览器运行在mac平台下\' );\n         * }\n         * ```\n         */mac:agent.indexOf("macintosh")>-1,/**\n         * @property {boolean} quirks 检测当前浏览器是否处于“怪异模式”下\n         * @example\n         * ```javascript\n         * if ( UE.browser.quirks ) {\n         *     console.log( \'当前浏览器运行处于“怪异模式”\' );\n         * }\n         * ```\n         */quirks:document.compatMode=="BackCompat"};/**\n    * @property {boolean} gecko 检测当前浏览器内核是否是gecko内核\n    * @example\n    * ```javascript\n    * if ( UE.browser.gecko ) {\n    *     console.log( \'当前浏览器内核是gecko内核\' );\n    * }\n    * ```\n    */browser.gecko=navigator.product=="Gecko"&&!browser.webkit&&!browser.opera&&!browser.ie;var version=0;// Internet Explorer 6.0+\nif(browser.ie){var v1=agent.match(/(?:msie\\s([\\w.]+))/);var v2=agent.match(/(?:trident.*rv:([\\w.]+))/);if(v1&&v2&&v1[1]&&v2[1]){version=Math.max(v1[1]*1,v2[1]*1);}else if(v1&&v1[1]){version=v1[1]*1;}else if(v2&&v2[1]){version=v2[1]*1;}else{version=0;}browser.ie11Compat=document.documentMode==11;/**\n         * @property { boolean } ie9Compat 检测浏览器模式是否为 IE9 兼容模式\n         * @warning 如果浏览器不是IE， 则该值为undefined\n         * @example\n         * ```javascript\n         * if ( UE.browser.ie9Compat ) {\n         *     console.log( \'当前浏览器运行在IE9兼容模式下\' );\n         * }\n         * ```\n         */browser.ie9Compat=document.documentMode==9;/**\n         * @property { boolean } ie8 检测浏览器是否是IE8浏览器\n         * @warning 如果浏览器不是IE， 则该值为undefined\n         * @example\n         * ```javascript\n         * if ( UE.browser.ie8 ) {\n         *     console.log( \'当前浏览器是IE8浏览器\' );\n         * }\n         * ```\n         */browser.ie8=!!document.documentMode;/**\n         * @property { boolean } ie8Compat 检测浏览器模式是否为 IE8 兼容模式\n         * @warning 如果浏览器不是IE， 则该值为undefined\n         * @example\n         * ```javascript\n         * if ( UE.browser.ie8Compat ) {\n         *     console.log( \'当前浏览器运行在IE8兼容模式下\' );\n         * }\n         * ```\n         */browser.ie8Compat=document.documentMode==8;/**\n         * @property { boolean } ie7Compat 检测浏览器模式是否为 IE7 兼容模式\n         * @warning 如果浏览器不是IE， 则该值为undefined\n         * @example\n         * ```javascript\n         * if ( UE.browser.ie7Compat ) {\n         *     console.log( \'当前浏览器运行在IE7兼容模式下\' );\n         * }\n         * ```\n         */browser.ie7Compat=version==7&&!document.documentMode||document.documentMode==7;/**\n         * @property { boolean } ie6Compat 检测浏览器模式是否为 IE6 模式 或者怪异模式\n         * @warning 如果浏览器不是IE， 则该值为undefined\n         * @example\n         * ```javascript\n         * if ( UE.browser.ie6Compat ) {\n         *     console.log( \'当前浏览器运行在IE6模式或者怪异模式下\' );\n         * }\n         * ```\n         */browser.ie6Compat=version<7||browser.quirks;browser.ie9above=version>8;browser.ie9below=version<9;browser.ie11above=version>10;browser.ie11below=version<11;}// Gecko.\nif(browser.gecko){var geckoRelease=agent.match(/rv:([\\d\\.]+)/);if(geckoRelease){geckoRelease=geckoRelease[1].split(".");version=geckoRelease[0]*10000+(geckoRelease[1]||0)*100+(geckoRelease[2]||0)*1;}}/**\n     * @property { Number } chrome 检测当前浏览器是否为Chrome, 如果是，则返回Chrome的大版本号\n     * @warning 如果浏览器不是chrome， 则该值为undefined\n     * @example\n     * ```javascript\n     * if ( UE.browser.chrome ) {\n     *     console.log( \'当前浏览器是Chrome\' );\n     * }\n     * ```\n     */if(/chrome\\/(\\d+\\.\\d)/i.test(agent)){browser.chrome=+RegExp["\\x241"];}/**\n     * @property { Number } safari 检测当前浏览器是否为Safari, 如果是，则返回Safari的大版本号\n     * @warning 如果浏览器不是safari， 则该值为undefined\n     * @example\n     * ```javascript\n     * if ( UE.browser.safari ) {\n     *     console.log( \'当前浏览器是Safari\' );\n     * }\n     * ```\n     */if(/(\\d+\\.\\d)?(?:\\.\\d)?\\s+safari\\/?(\\d+\\.\\d+)?/i.test(agent)&&!/chrome/i.test(agent)){browser.safari=+(RegExp["\\x241"]||RegExp["\\x242"]);}// Opera 9.50+\nif(browser.opera)version=parseFloat(opera.version());// WebKit 522+ (Safari 3+)\nif(browser.webkit)version=parseFloat(agent.match(/ applewebkit\\/(\\d+)/)[1]);/**\n     * @property { Number } version 检测当前浏览器版本号\n     * @remind\n     * <ul>\n     *     <li>IE系列返回值为5,6,7,8,9,10等</li>\n     *     <li>gecko系列会返回10900，158900等</li>\n     *     <li>webkit系列会返回其build号 (如 522等)</li>\n     * </ul>\n     * @example\n     * ```javascript\n     * console.log( \'当前浏览器版本号是： \' + UE.browser.version );\n     * ```\n     */browser.version=version;/**\n     * @property { boolean } isCompatible 检测当前浏览器是否能够与UEditor良好兼容\n     * @example\n     * ```javascript\n     * if ( UE.browser.isCompatible ) {\n     *     console.log( \'浏览器与UEditor能够良好兼容\' );\n     * }\n     * ```\n     */browser.isCompatible=!browser.mobile&&(browser.ie&&version>=6||browser.gecko&&version>=10801||browser.opera&&version>=9.5||browser.air&&version>=1||browser.webkit&&version>=522||false);return browser;}();//快捷方式\nvar ie=browser.ie,webkit=browser.webkit,gecko=browser.gecko,opera=browser.opera;// core/utils.js\n/**\n * 工具函数包\n * @file\n * @module UE.utils\n * @since 1.2.6.1\n *//**\n * UEditor封装使用的静态工具函数\n * @module UE.utils\n * @unfile\n */var utils=UE.utils={/**\n     * 用给定的迭代器遍历对象\n     * @method each\n     * @param { Object } obj 需要遍历的对象\n     * @param { Function } iterator 迭代器， 该方法接受两个参数， 第一个参数是当前所处理的value， 第二个参数是当前遍历对象的key\n     * @example\n     * ```javascript\n     * var demoObj = {\n     *     key1: 1,\n     *     key2: 2\n     * };\n     *\n     * //output: key1: 1, key2: 2\n     * UE.utils.each( demoObj, funciton ( value, key ) {\n     *\n     *     console.log( key + ":" + value );\n     *\n     * } );\n     * ```\n     *//**\n     * 用给定的迭代器遍历数组或类数组对象\n     * @method each\n     * @param { Array } array 需要遍历的数组或者类数组\n     * @param { Function } iterator 迭代器， 该方法接受两个参数， 第一个参数是当前所处理的value， 第二个参数是当前遍历对象的key\n     * @example\n     * ```javascript\n     * var divs = document.getElmentByTagNames( "div" );\n     *\n     * //output: 0: DIV, 1: DIV ...\n     * UE.utils.each( divs, funciton ( value, key ) {\n     *\n     *     console.log( key + ":" + value.tagName );\n     *\n     * } );\n     * ```\n     */each:function each(obj,iterator,context){if(obj==null)return;if(obj.length===+obj.length){for(var i=0,l=obj.length;i<l;i++){if(iterator.call(context,obj[i],i,obj)===false)return false;}}else{for(var key in obj){if(obj.hasOwnProperty(key)){if(iterator.call(context,obj[key],key,obj)===false)return false;}}}},/**\n     * 以给定对象作为原型创建一个新对象\n     * @method makeInstance\n     * @param { Object } protoObject 该对象将作为新创建对象的原型\n     * @return { Object } 新的对象， 该对象的原型是给定的protoObject对象\n     * @example\n     * ```javascript\n     *\n     * var protoObject = { sayHello: function () { console.log(\'Hello UEditor!\'); } };\n     *\n     * var newObject = UE.utils.makeInstance( protoObject );\n     * //output: Hello UEditor!\n     * newObject.sayHello();\n     * ```\n     */makeInstance:function makeInstance(obj){var noop=new Function();noop.prototype=obj;obj=new noop();noop.prototype=null;return obj;},/**\n     * 将source对象中的属性扩展到target对象上\n     * @method extend\n     * @remind 该方法将强制把source对象上的属性复制到target对象上\n     * @see UE.utils.extend(Object,Object,Boolean)\n     * @param { Object } target 目标对象， 新的属性将附加到该对象上\n     * @param { Object } source 源对象， 该对象的属性会被附加到target对象上\n     * @return { Object } 返回target对象\n     * @example\n     * ```javascript\n     *\n     * var target = { name: \'target\', sex: 1 },\n     *      source = { name: \'source\', age: 17 };\n     *\n     * UE.utils.extend( target, source );\n     *\n     * //output: { name: \'source\', sex: 1, age: 17 }\n     * console.log( target );\n     *\n     * ```\n     *//**\n     * 将source对象中的属性扩展到target对象上， 根据指定的isKeepTarget值决定是否保留目标对象中与\n     * 源对象属性名相同的属性值。\n     * @method extend\n     * @param { Object } target 目标对象， 新的属性将附加到该对象上\n     * @param { Object } source 源对象， 该对象的属性会被附加到target对象上\n     * @param { Boolean } isKeepTarget 是否保留目标对象中与源对象中属性名相同的属性\n     * @return { Object } 返回target对象\n     * @example\n     * ```javascript\n     *\n     * var target = { name: \'target\', sex: 1 },\n     *      source = { name: \'source\', age: 17 };\n     *\n     * UE.utils.extend( target, source, true );\n     *\n     * //output: { name: \'target\', sex: 1, age: 17 }\n     * console.log( target );\n     *\n     * ```\n     */extend:function extend(t,s,b){if(s){for(var k in s){if(!b||!t.hasOwnProperty(k)){t[k]=s[k];}}}return t;},/**\n     * 将给定的多个对象的属性复制到目标对象target上\n     * @method extend2\n     * @remind 该方法将强制把源对象上的属性复制到target对象上\n     * @remind 该方法支持两个及以上的参数， 从第二个参数开始， 其属性都会被复制到第一个参数上。 如果遇到同名的属性，\n     *          将会覆盖掉之前的值。\n     * @param { Object } target 目标对象， 新的属性将附加到该对象上\n     * @param { Object... } source 源对象， 支持多个对象， 该对象的属性会被附加到target对象上\n     * @return { Object } 返回target对象\n     * @example\n     * ```javascript\n     *\n     * var target = {},\n     *     source1 = { name: \'source\', age: 17 },\n     *     source2 = { title: \'dev\' };\n     *\n     * UE.utils.extend2( target, source1, source2 );\n     *\n     * //output: { name: \'source\', age: 17, title: \'dev\' }\n     * console.log( target );\n     *\n     * ```\n     */extend2:function extend2(t){var a=arguments;for(var i=1;i<a.length;i++){var x=a[i];for(var k in x){if(!t.hasOwnProperty(k)){t[k]=x[k];}}}return t;},/**\n     * 模拟继承机制， 使得subClass继承自superClass\n     * @method inherits\n     * @param { Object } subClass 子类对象\n     * @param { Object } superClass 超类对象\n     * @warning 该方法只能让subClass继承超类的原型， subClass对象自身的属性和方法不会被继承\n     * @return { Object } 继承superClass后的子类对象\n     * @example\n     * ```javascript\n     * function SuperClass(){\n     *     this.name = "小李";\n     * }\n     *\n     * SuperClass.prototype = {\n     *     hello:function(str){\n     *         console.log(this.name + str);\n     *     }\n     * }\n     *\n     * function SubClass(){\n     *     this.name = "小张";\n     * }\n     *\n     * UE.utils.inherits(SubClass,SuperClass);\n     *\n     * var sub = new SubClass();\n     * //output: \'小张早上好!\n     * sub.hello("早上好!");\n     * ```\n     */inherits:function inherits(subClass,superClass){var oldP=subClass.prototype,newP=utils.makeInstance(superClass.prototype);utils.extend(newP,oldP,true);subClass.prototype=newP;return newP.constructor=subClass;},/**\n     * 用指定的context对象作为函数fn的上下文\n     * @method bind\n     * @param { Function } fn 需要绑定上下文的函数对象\n     * @param { Object } content 函数fn新的上下文对象\n     * @return { Function } 一个新的函数， 该函数作为原始函数fn的代理， 将完成fn的上下文调换工作。\n     * @example\n     * ```javascript\n     *\n     * var name = \'window\',\n     *     newTest = null;\n     *\n     * function test () {\n     *     console.log( this.name );\n     * }\n     *\n     * newTest = UE.utils.bind( test, { name: \'object\' } );\n     *\n     * //output: object\n     * newTest();\n     *\n     * //output: window\n     * test();\n     *\n     * ```\n     */bind:function bind(fn,context){return function(){return fn.apply(context,arguments);};},/**\n     * 创建延迟指定时间后执行的函数fn\n     * @method defer\n     * @param { Function } fn 需要延迟执行的函数对象\n     * @param { int } delay 延迟的时间， 单位是毫秒\n     * @warning 该方法的时间控制是不精确的，仅仅只能保证函数的执行是在给定的时间之后，\n     *           而不能保证刚好到达延迟时间时执行。\n     * @return { Function } 目标函数fn的代理函数， 只有执行该函数才能起到延时效果\n     * @example\n     * ```javascript\n     * var start = 0;\n     *\n     * function test(){\n     *     console.log( new Date() - start );\n     * }\n     *\n     * var testDefer = UE.utils.defer( test, 1000 );\n     * //\n     * start = new Date();\n     * //output: (大约在1000毫秒之后输出) 1000\n     * testDefer();\n     * ```\n     *//**\n     * 创建延迟指定时间后执行的函数fn, 如果在延迟时间内再次执行该方法， 将会根据指定的exclusion的值，\n     * 决定是否取消前一次函数的执行， 如果exclusion的值为true， 则取消执行，反之，将继续执行前一个方法。\n     * @method defer\n     * @param { Function } fn 需要延迟执行的函数对象\n     * @param { int } delay 延迟的时间， 单位是毫秒\n     * @param { Boolean } exclusion 如果在延迟时间内再次执行该函数，该值将决定是否取消执行前一次函数的执行，\n     *                     值为true表示取消执行， 反之则将在执行前一次函数之后才执行本次函数调用。\n     * @warning 该方法的时间控制是不精确的，仅仅只能保证函数的执行是在给定的时间之后，\n     *           而不能保证刚好到达延迟时间时执行。\n     * @return { Function } 目标函数fn的代理函数， 只有执行该函数才能起到延时效果\n     * @example\n     * ```javascript\n     *\n     * function test(){\n     *     console.log(1);\n     * }\n     *\n     * var testDefer = UE.utils.defer( test, 1000, true );\n     *\n     * //output: (两次调用仅有一次输出) 1\n     * testDefer();\n     * testDefer();\n     * ```\n     */defer:function defer(fn,delay,exclusion){var timerID;return function(){if(exclusion){clearTimeout(timerID);}timerID=setTimeout(fn,delay);};},/**\n     * 获取元素item在数组array中首次出现的位置, 如果未找到item， 则返回-1\n     * @method indexOf\n     * @remind 该方法的匹配过程使用的是恒等“===”\n     * @param { Array } array 需要查找的数组对象\n     * @param { * } item 需要在目标数组中查找的值\n     * @return { int } 返回item在目标数组array中首次出现的位置， 如果在数组中未找到item， 则返回-1\n     * @example\n     * ```javascript\n     * var item = 1,\n     *     arr = [ 3, 4, 6, 8, 1, 1, 2 ];\n     *\n     * //output: 4\n     * console.log( UE.utils.indexOf( arr, item ) );\n     * ```\n     *//**\n     * 获取元素item数组array中首次出现的位置, 如果未找到item， 则返回-1。通过start的值可以指定搜索的起始位置。\n     * @method indexOf\n     * @remind 该方法的匹配过程使用的是恒等“===”\n     * @param { Array } array 需要查找的数组对象\n     * @param { * } item 需要在目标数组中查找的值\n     * @param { int } start 搜索的起始位置\n     * @return { int } 返回item在目标数组array中的start位置之后首次出现的位置， 如果在数组中未找到item， 则返回-1\n     * @example\n     * ```javascript\n     * var item = 1,\n     *     arr = [ 3, 4, 6, 8, 1, 2, 8, 3, 2, 1, 1, 4 ];\n     *\n     * //output: 9\n     * console.log( UE.utils.indexOf( arr, item, 5 ) );\n     * ```\n     */indexOf:function indexOf(array,item,start){var index=-1;start=this.isNumber(start)?start:0;this.each(array,function(v,i){if(i>=start&&v===item){index=i;return false;}});return index;},/**\n     * 移除数组array中所有的元素item\n     * @method removeItem\n     * @param { Array } array 要移除元素的目标数组\n     * @param { * } item 将要被移除的元素\n     * @remind 该方法的匹配过程使用的是恒等“===”\n     * @example\n     * ```javascript\n     * var arr = [ 4, 5, 7, 1, 3, 4, 6 ];\n     *\n     * UE.utils.removeItem( arr, 4 );\n     * //output: [ 5, 7, 1, 3, 6 ]\n     * console.log( arr );\n     *\n     * ```\n     */removeItem:function removeItem(array,item){for(var i=0,l=array.length;i<l;i++){if(array[i]===item){array.splice(i,1);i--;}}},/**\n     * 删除字符串str的首尾空格\n     * @method trim\n     * @param { String } str 需要删除首尾空格的字符串\n     * @return { String } 删除了首尾的空格后的字符串\n     * @example\n     * ```javascript\n     *\n     * var str = " UEdtior ";\n     *\n     * //output: 9\n     * console.log( str.length );\n     *\n     * //output: 7\n     * console.log( UE.utils.trim( " UEdtior " ).length );\n     *\n     * //output: 9\n     * console.log( str.length );\n     *\n     *  ```\n     */trim:function trim(str){return str.replace(/(^[ \\t\\n\\r]+)|([ \\t\\n\\r]+$)/g,"");},/**\n     * 将字符串str以\',\'分隔成数组后，将该数组转换成哈希对象， 其生成的hash对象的key为数组中的元素， value为1\n     * @method listToMap\n     * @warning 该方法在生成的hash对象中，会为每一个key同时生成一个另一个全大写的key。\n     * @param { String } str 该字符串将被以\',\'分割为数组， 然后进行转化\n     * @return { Object } 转化之后的hash对象\n     * @example\n     * ```javascript\n     *\n     * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}\n     * console.log( UE.utils.listToMap( \'UEdtior,Hello\' ) );\n     *\n     * ```\n     *//**\n     * 将字符串数组转换成哈希对象， 其生成的hash对象的key为数组中的元素， value为1\n     * @method listToMap\n     * @warning 该方法在生成的hash对象中，会为每一个key同时生成一个另一个全大写的key。\n     * @param { Array } arr 字符串数组\n     * @return { Object } 转化之后的hash对象\n     * @example\n     * ```javascript\n     *\n     * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}\n     * console.log( UE.utils.listToMap( [ \'UEdtior\', \'Hello\' ] ) );\n     *\n     * ```\n     */listToMap:function listToMap(list){if(!list)return{};list=utils.isArray(list)?list:list.split(",");for(var i=0,ci,obj={};ci=list[i++];){obj[ci.toUpperCase()]=obj[ci]=1;}return obj;},/**\n     * 将str中的html符号转义,将转义“\'，&，<，"，>，”，“”七个字符\n     * @method unhtml\n     * @param { String } str 需要转义的字符串\n     * @return { String } 转义后的字符串\n     * @example\n     * ```javascript\n     * var html = \'<body>&</body>\';\n     *\n     * //output: &lt;body&gt;&amp;&lt;/body&gt;\n     * console.log( UE.utils.unhtml( html ) );\n     *\n     * ```\n     */unhtml:function unhtml(str,reg){return str?str.replace(reg||/[&<">\'](?:(amp|lt|ldquo|rdquo|quot|gt|#39|nbsp|#\\d+);)?/g,function(a,b){if(b){return a;}else{return{"<":"&lt;","&":"&amp;",\'"\':"&quot;","“":"&ldquo;","”":"&rdquo;",">":"&gt;","\'":"&#39;"}[a];}}):"";},/**\n     * 将str中的转义字符还原成html字符\n     * @see UE.utils.unhtml(String);\n     * @method html\n     * @param { String } str 需要逆转义的字符串\n     * @return { String } 逆转义后的字符串\n     * @example\n     * ```javascript\n     *\n     * var str = \'&lt;body&gt;&amp;&lt;/body&gt;\';\n     *\n     * //output: <body>&</body>\n     * console.log( UE.utils.html( str ) );\n     *\n     * ```\n     */html:function html(str){return str?str.replace(/&((g|l|quo|ldquo|rdquo)t|amp|#39|nbsp);/g,function(m){return{"&lt;":"<","&amp;":"&","&quot;":\'"\',"&ldquo;":"“","&rdquo;":"”","&gt;":">","&#39;":"\'","&nbsp;":" "}[m];}):"";},/**\n     * 将css样式转换为驼峰的形式\n     * @method cssStyleToDomStyle\n     * @param { String } cssName 需要转换的css样式名\n     * @return { String } 转换成驼峰形式后的css样式名\n     * @example\n     * ```javascript\n     *\n     * var str = \'border-top\';\n     *\n     * //output: borderTop\n     * console.log( UE.utils.cssStyleToDomStyle( str ) );\n     *\n     * ```\n     */cssStyleToDomStyle:function(){var test=document.createElement("div").style,cache={float:test.cssFloat!=undefined?"cssFloat":test.styleFloat!=undefined?"styleFloat":"float"};return function(cssName){return cache[cssName]||(cache[cssName]=cssName.toLowerCase().replace(/-./g,function(match){return match.charAt(1).toUpperCase();}));};}(),/**\n     * 动态加载文件到doc中\n     * @method loadFile\n     * @param { DomDocument } document 需要加载资源文件的文档对象\n     * @param { Object } options 加载资源文件的属性集合， 取值请参考代码示例\n     * @example\n     * ```javascript\n     *\n     * UE.utils.loadFile( document, {\n     *     src:"test.js",\n     *     tag:"script",\n     *     type:"text/javascript",\n     *     defer:"defer"\n     * } );\n     *\n     * ```\n     *//**\n     * 动态加载文件到doc中，加载成功后执行的回调函数fn\n     * @method loadFile\n     * @param { DomDocument } document 需要加载资源文件的文档对象\n     * @param { Object } options 加载资源文件的属性集合， 该集合支持的值是script标签和style标签支持的所有属性。\n     * @param { Function } fn 资源文件加载成功之后执行的回调\n     * @warning 对于在同一个文档中多次加载同一URL的文件， 该方法会在第一次加载之后缓存该请求，\n     *           在此之后的所有同一URL的请求， 将会直接触发回调。\n     * @example\n     * ```javascript\n     *\n     * UE.utils.loadFile( document, {\n     *     src:"test.js",\n     *     tag:"script",\n     *     type:"text/javascript",\n     *     defer:"defer"\n     * }, function () {\n     *     console.log(\'加载成功\');\n     * } );\n     *\n     * ```\n     */loadFile:function(){var tmpList=[];function getItem(doc,obj){try{for(var i=0,ci;ci=tmpList[i++];){if(ci.doc===doc&&ci.url==(obj.src||obj.href)){return ci;}}}catch(e){return null;}}return function(doc,obj,fn){var item=getItem(doc,obj);if(item){if(item.ready){fn&&fn();}else{item.funs.push(fn);}return;}tmpList.push({doc:doc,url:obj.src||obj.href,funs:[fn]});if(!doc.body){var html=[];for(var p in obj){if(p=="tag")continue;html.push(p+\'="\'+obj[p]+\'"\');}doc.write("<"+obj.tag+" "+html.join(" ")+" ></"+obj.tag+">");return;}if(obj.id&&doc.getElementById(obj.id)){return;}var element=doc.createElement(obj.tag);delete obj.tag;for(var p in obj){element.setAttribute(p,obj[p]);}element.onload=element.onreadystatechange=function(){if(!this.readyState||/loaded|complete/.test(this.readyState)){item=getItem(doc,obj);if(item.funs.length>0){item.ready=1;for(var fi;fi=item.funs.pop();){fi();}}element.onload=element.onreadystatechange=null;}};element.onerror=function(){throw Error("The load "+(obj.href||obj.src)+" fails,check the url settings of file ueditor.config.js ");};doc.getElementsByTagName("head")[0].appendChild(element);};}(),/**\n     * 判断obj对象是否为空\n     * @method isEmptyObject\n     * @param { * } obj 需要判断的对象\n     * @remind 如果判断的对象是NULL， 将直接返回true， 如果是数组且为空， 返回true， 如果是字符串， 且字符串为空，\n     *          返回true， 如果是普通对象， 且该对象没有任何实例属性， 返回true\n     * @return { Boolean } 对象是否为空\n     * @example\n     * ```javascript\n     *\n     * //output: true\n     * console.log( UE.utils.isEmptyObject( {} ) );\n     *\n     * //output: true\n     * console.log( UE.utils.isEmptyObject( [] ) );\n     *\n     * //output: true\n     * console.log( UE.utils.isEmptyObject( "" ) );\n     *\n     * //output: false\n     * console.log( UE.utils.isEmptyObject( { key: 1 } ) );\n     *\n     * //output: false\n     * console.log( UE.utils.isEmptyObject( [1] ) );\n     *\n     * //output: false\n     * console.log( UE.utils.isEmptyObject( "1" ) );\n     *\n     * ```\n     */isEmptyObject:function isEmptyObject(obj){if(obj==null)return true;if(this.isArray(obj)||this.isString(obj))return obj.length===0;for(var key in obj){if(obj.hasOwnProperty(key))return false;}return true;},/**\n     * 把rgb格式的颜色值转换成16进制格式\n     * @method fixColor\n     * @param { String } rgb格式的颜色值\n     * @param { String }\n     * @example\n     * rgb(255,255,255)  => "#ffffff"\n     */fixColor:function fixColor(name,value){if(/color/i.test(name)&&/rgba?/.test(value)){var array=value.split(",");if(array.length>3)return"";value="#";for(var i=0,color;color=array[i++];){color=parseInt(color.replace(/[^\\d]/gi,""),10).toString(16);value+=color.length==1?"0"+color:color;}value=value.toUpperCase();}return value;},/**\n     * 只针对border,padding,margin做了处理，因为性能问题\n     * @public\n     * @function\n     * @param {String}    val style字符串\n     */optCss:function optCss(val){var padding,margin,border;val=val.replace(/(padding|margin|border)\\-([^:]+):([^;]+);?/gi,function(str,key,name,val){if(val.split(" ").length==1){switch(key){case"padding":!padding&&(padding={});padding[name]=val;return"";case"margin":!margin&&(margin={});margin[name]=val;return"";case"border":return val=="initial"?"":str;}}return str;});function opt(obj,name){if(!obj){return"";}var t=obj.top,b=obj.bottom,l=obj.left,r=obj.right,val="";if(!t||!l||!b||!r){for(var p in obj){val+=";"+name+"-"+p+":"+obj[p]+";";}}else{val+=";"+name+":"+(t==b&&b==l&&l==r?t:t==b&&l==r?t+" "+l:l==r?t+" "+l+" "+b:t+" "+r+" "+b+" "+l)+";";}return val;}val+=opt(padding,"padding")+opt(margin,"margin");return val.replace(/^[ \\n\\r\\t;]*|[ \\n\\r\\t]*$/,"").replace(/;([ \\n\\r\\t]+)|\\1;/g,";").replace(/(&((l|g)t|quot|#39))?;{2,}/g,function(a,b){return b?b+";;":";";});},/**\n     * 克隆对象\n     * @method clone\n     * @param { Object } source 源对象\n     * @return { Object } source的一个副本\n     *//**\n     * 深度克隆对象，将source的属性克隆到target对象， 会覆盖target重名的属性。\n     * @method clone\n     * @param { Object } source 源对象\n     * @param { Object } target 目标对象\n     * @return { Object } 附加了source对象所有属性的target对象\n     */clone:function clone(source,target){var tmp;target=target||{};for(var i in source){if(source.hasOwnProperty(i)){tmp=source[i];if((typeof tmp===\'undefined\'?\'undefined\':_typeof(tmp))=="object"){target[i]=utils.isArray(tmp)?[]:{};utils.clone(source[i],target[i]);}else{target[i]=tmp;}}}return target;},/**\n     * 把cm／pt为单位的值转换为px为单位的值\n     * @method transUnitToPx\n     * @param { String } 待转换的带单位的字符串\n     * @return { String } 转换为px为计量单位的值的字符串\n     * @example\n     * ```javascript\n     *\n     * //output: 500px\n     * console.log( UE.utils.transUnitToPx( \'20cm\' ) );\n     *\n     * //output: 27px\n     * console.log( UE.utils.transUnitToPx( \'20pt\' ) );\n     *\n     * ```\n     */transUnitToPx:function transUnitToPx(val){if(!/(pt|cm)/.test(val)){return val;}var unit;val.replace(/([\\d.]+)(\\w+)/,function(str,v,u){val=v;unit=u;});switch(unit){case"cm":val=parseFloat(val)*25;break;case"pt":val=Math.round(parseFloat(val)*96/72);}return val+(val?"px":"");},/**\n     * 在dom树ready之后执行给定的回调函数\n     * @method domReady\n     * @remind 如果在执行该方法的时候， dom树已经ready， 那么回调函数将立刻执行\n     * @param { Function } fn dom树ready之后的回调函数\n     * @example\n     * ```javascript\n     *\n     * UE.utils.domReady( function () {\n     *\n     *     console.log(\'123\');\n     *\n     * } );\n     *\n     * ```\n     */domReady:function(){var fnArr=[];function doReady(doc){//确保onready只执行一次\ndoc.isReady=true;for(var ci;ci=fnArr.pop();ci()){}}return function(onready,win){win=win||window;var doc=win.document;onready&&fnArr.push(onready);if(doc.readyState==="complete"){doReady(doc);}else{doc.isReady&&doReady(doc);if(browser.ie&&browser.version!=11){(function(){if(doc.isReady)return;try{doc.documentElement.doScroll("left");}catch(error){setTimeout(arguments.callee,0);return;}doReady(doc);})();win.attachEvent("onload",function(){doReady(doc);});}else{doc.addEventListener("DOMContentLoaded",function(){doc.removeEventListener("DOMContentLoaded",arguments.callee,false);doReady(doc);},false);win.addEventListener("load",function(){doReady(doc);},false);}}};}(),/**\n     * 动态添加css样式\n     * @method cssRule\n     * @param { String } 节点名称\n     * @grammar UE.utils.cssRule(\'添加的样式的节点名称\',[\'样式\'，\'放到哪个document上\'])\n     * @grammar UE.utils.cssRule(\'body\',\'body{background:#ccc}\') => null  //给body添加背景颜色\n     * @grammar UE.utils.cssRule(\'body\') =>样式的字符串  //取得key值为body的样式的内容,如果没有找到key值先关的样式将返回空，例如刚才那个背景颜色，将返回 body{background:#ccc}\n     * @grammar UE.utils.cssRule(\'body\',document) => 返回指定key的样式，并且指定是哪个document\n     * @grammar UE.utils.cssRule(\'body\',\'\') =>null //清空给定的key值的背景颜色\n     */cssRule:browser.ie&&browser.version!=11?function(key,style,doc){var indexList,index;if(style===undefined||style&&style.nodeType&&style.nodeType==9){//获取样式\ndoc=style&&style.nodeType&&style.nodeType==9?style:doc||document;indexList=doc.indexList||(doc.indexList={});index=indexList[key];if(index!==undefined){return doc.styleSheets[index].cssText;}return undefined;}doc=doc||document;indexList=doc.indexList||(doc.indexList={});index=indexList[key];//清除样式\nif(style===""){if(index!==undefined){doc.styleSheets[index].cssText="";delete indexList[key];return true;}return false;}//添加样式\nif(index!==undefined){sheetStyle=doc.styleSheets[index];}else{sheetStyle=doc.createStyleSheet("",index=doc.styleSheets.length);indexList[key]=index;}sheetStyle.cssText=style;}:function(key,style,doc){var head,node;if(style===undefined||style&&style.nodeType&&style.nodeType==9){//获取样式\ndoc=style&&style.nodeType&&style.nodeType==9?style:doc||document;node=doc.getElementById(key);return node?node.innerHTML:undefined;}doc=doc||document;node=doc.getElementById(key);//清除样式\nif(style===""){if(node){node.parentNode.removeChild(node);return true;}return false;}//添加样式\nif(node){node.innerHTML=style;}else{node=doc.createElement("style");node.id=key;node.innerHTML=style;doc.getElementsByTagName("head")[0].appendChild(node);}},sort:function sort(array,compareFn){compareFn=compareFn||function(item1,item2){return item1.localeCompare(item2);};for(var i=0,len=array.length;i<len;i++){for(var j=i,length=array.length;j<length;j++){if(compareFn(array[i],array[j])>0){var t=array[i];array[i]=array[j];array[j]=t;}}}return array;},serializeParam:function serializeParam(json){var strArr=[];for(var i in json){//忽略默认的几个参数\nif(i=="method"||i=="timeout"||i=="async")continue;//传递过来的对象和函数不在提交之列\nif(!(_typeof(json[i]).toLowerCase()=="function"||_typeof(json[i]).toLowerCase()=="object")){strArr.push(encodeURIComponent(i)+"="+encodeURIComponent(json[i]));}else if(utils.isArray(json[i])){//支持传数组内容\nfor(var j=0;j<json[i].length;j++){strArr.push(encodeURIComponent(i)+"[]="+encodeURIComponent(json[i][j]));}}}return strArr.join("&");},formatUrl:function formatUrl(url){var u=url.replace(/&&/g,"&");u=u.replace(/\\?&/g,"?");u=u.replace(/&$/g,"");u=u.replace(/&#/g,"#");u=u.replace(/&+/g,"&");return u;},isCrossDomainUrl:function isCrossDomainUrl(url){var a=document.createElement("a");a.href=url;if(browser.ie){a.href=a.href;}return!(a.protocol==location.protocol&&a.hostname==location.hostname&&(a.port==location.port||a.port=="80"&&location.port==""||a.port==""&&location.port=="80"));},clearEmptyAttrs:function clearEmptyAttrs(obj){for(var p in obj){if(obj[p]===""){delete obj[p];}}return obj;},str2json:function str2json(s){if(!utils.isString(s))return null;if(window.JSON){return JSON.parse(s);}else{return new Function("return "+utils.trim(s||""))();}},json2str:function(){if(window.JSON){return JSON.stringify;}else{var encodeString=function encodeString(source){if(/["\\\\\\x00-\\x1f]/.test(source)){source=source.replace(/["\\\\\\x00-\\x1f]/g,function(match){var c=escapeMap[match];if(c){return c;}c=match.charCodeAt();return\'\\\\u00\'+Math.floor(c/16).toString(16)+(c%16).toString(16);});}return\'"\'+source+\'"\';};var encodeArray=function encodeArray(source){var result=["["],l=source.length,preComma,i,item;for(i=0;i<l;i++){item=source[i];switch(typeof item===\'undefined\'?\'undefined\':_typeof(item)){case"undefined":case"function":case"unknown":break;default:if(preComma){result.push(",");}result.push(utils.json2str(item));preComma=1;}}result.push("]");return result.join("");};var pad=function pad(source){return source<10?"0"+source:source;};var encodeDate=function encodeDate(source){return\'"\'+source.getFullYear()+"-"+pad(source.getMonth()+1)+"-"+pad(source.getDate())+"T"+pad(source.getHours())+":"+pad(source.getMinutes())+":"+pad(source.getSeconds())+\'"\';};var escapeMap={"\\b":"\\\\b","\\t":"\\\\t","\\n":"\\\\n","\\f":"\\\\f","\\r":"\\\\r",\'"\':\'\\\\"\',"\\\\":"\\\\\\\\"};return function(value){switch(typeof value===\'undefined\'?\'undefined\':_typeof(value)){case"undefined":return"undefined";case"number":return isFinite(value)?String(value):"null";case"string":return encodeString(value);case"boolean":return String(value);default:if(value===null){return"null";}else if(utils.isArray(value)){return encodeArray(value);}else if(utils.isDate(value)){return encodeDate(value);}else{var result=["{"],encode=utils.json2str,preComma,item;for(var key in value){if(Object.prototype.hasOwnProperty.call(value,key)){item=value[key];switch(typeof item===\'undefined\'?\'undefined\':_typeof(item)){case"undefined":case"unknown":case"function":break;default:if(preComma){result.push(",");}preComma=1;result.push(encode(key)+":"+encode(item));}}}result.push("}");return result.join("");}}};}}()};/**\n * 判断给定的对象是否是字符串\n * @method isString\n * @param { * } object 需要判断的对象\n * @return { Boolean } 给定的对象是否是字符串\n *//**\n * 判断给定的对象是否是数组\n * @method isArray\n * @param { * } object 需要判断的对象\n * @return { Boolean } 给定的对象是否是数组\n *//**\n * 判断给定的对象是否是一个Function\n * @method isFunction\n * @param { * } object 需要判断的对象\n * @return { Boolean } 给定的对象是否是Function\n *//**\n * 判断给定的对象是否是Number\n * @method isNumber\n * @param { * } object 需要判断的对象\n * @return { Boolean } 给定的对象是否是Number\n *//**\n * 判断给定的对象是否是一个正则表达式\n * @method isRegExp\n * @param { * } object 需要判断的对象\n * @return { Boolean } 给定的对象是否是正则表达式\n *//**\n * 判断给定的对象是否是一个普通对象\n * @method isObject\n * @param { * } object 需要判断的对象\n * @return { Boolean } 给定的对象是否是普通对象\n */utils.each(["String","Function","Array","Number","RegExp","Object","Date"],function(v){UE.utils["is"+v]=function(obj){return Object.prototype.toString.apply(obj)=="[object "+v+"]";};});// core/EventBase.js\n/**\n * UE采用的事件基类\n * @file\n * @module UE\n * @class EventBase\n * @since 1.2.6.1\n *//**\n * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n * @unfile\n * @module UE\n *//**\n * UE采用的事件基类，继承此类的对应类将获取addListener,removeListener,fireEvent方法。\n * 在UE中，Editor以及所有ui实例都继承了该类，故可以在对应的ui对象以及editor对象上使用上述方法。\n * @unfile\n * @module UE\n * @class EventBase\n *//**\n * 通过此构造器，子类可以继承EventBase获取事件监听的方法\n * @constructor\n * @example\n * ```javascript\n * UE.EventBase.call(editor);\n * ```\n */var EventBase=UE.EventBase=function(){};EventBase.prototype={/**\n     * 注册事件监听器\n     * @method addListener\n     * @param { String } types 监听的事件名称，同时监听多个事件使用空格分隔\n     * @param { Function } fn 监听的事件被触发时，会执行该回调函数\n     * @waining 事件被触发时，监听的函数假如返回的值恒等于true，回调函数的队列中后面的函数将不执行\n     * @example\n     * ```javascript\n     * editor.addListener(\'selectionchange\',function(){\n     *      console.log("选区已经变化！");\n     * })\n     * editor.addListener(\'beforegetcontent aftergetcontent\',function(type){\n     *         if(type == \'beforegetcontent\'){\n     *             //do something\n     *         }else{\n     *             //do something\n     *         }\n     *         console.log(this.getContent) // this是注册的事件的编辑器实例\n     * })\n     * ```\n     * @see UE.EventBase:fireEvent(String)\n     */addListener:function addListener(types,listener){types=utils.trim(types).split(/\\s+/);for(var i=0,ti;ti=types[i++];){getListener(this,ti,true).push(listener);}},on:function on(types,listener){return this.addListener(types,listener);},off:function off(types,listener){return this.removeListener(types,listener);},trigger:function trigger(){return this.fireEvent.apply(this,arguments);},/**\n     * 移除事件监听器\n     * @method removeListener\n     * @param { String } types 移除的事件名称，同时移除多个事件使用空格分隔\n     * @param { Function } fn 移除监听事件的函数引用\n     * @example\n     * ```javascript\n     * //changeCallback为方法体\n     * editor.removeListener("selectionchange",changeCallback);\n     * ```\n     */removeListener:function removeListener(types,listener){types=utils.trim(types).split(/\\s+/);for(var i=0,ti;ti=types[i++];){utils.removeItem(getListener(this,ti)||[],listener);}},/**\n     * 触发事件\n     * @method fireEvent\n     * @param { String } types 触发的事件名称，同时触发多个事件使用空格分隔\n     * @remind 该方法会触发addListener\n     * @return { * } 返回触发事件的队列中，最后执行的回调函数的返回值\n     * @example\n     * ```javascript\n     * editor.fireEvent("selectionchange");\n     * ```\n     *//**\n     * 触发事件\n     * @method fireEvent\n     * @param { String } types 触发的事件名称，同时触发多个事件使用空格分隔\n     * @param { *... } options 可选参数，可以传入一个或多个参数，会传给事件触发的回调函数\n     * @return { * } 返回触发事件的队列中，最后执行的回调函数的返回值\n     * @example\n     * ```javascript\n     *\n     * editor.addListener( "selectionchange", function ( type, arg1, arg2 ) {\n     *\n     *     console.log( arg1 + " " + arg2 );\n     *\n     * } );\n     *\n     * //触发selectionchange事件， 会执行上面的事件监听器\n     * //output: Hello World\n     * editor.fireEvent("selectionchange", "Hello", "World");\n     * ```\n     */fireEvent:function fireEvent(){var types=arguments[0];types=utils.trim(types).split(" ");for(var i=0,ti;ti=types[i++];){var listeners=getListener(this,ti),r,t,k;if(listeners){k=listeners.length;while(k--){if(!listeners[k])continue;t=listeners[k].apply(this,arguments);if(t===true){return t;}if(t!==undefined){r=t;}}}if(t=this["on"+ti.toLowerCase()]){r=t.apply(this,arguments);}}return r;}};/**\n * 获得对象所拥有监听类型的所有监听器\n * @unfile\n * @module UE\n * @since 1.2.6.1\n * @method getListener\n * @public\n * @param { Object } obj  查询监听器的对象\n * @param { String } type 事件类型\n * @param { Boolean } force  为true且当前所有type类型的侦听器不存在时，创建一个空监听器数组\n * @return { Array } 监听器数组\n */function getListener(obj,type,force){var allListeners;type=type.toLowerCase();return(allListeners=obj.__allListeners||force&&(obj.__allListeners={}))&&(allListeners[type]||force&&(allListeners[type]=[]));}// core/dtd.js\n///import editor.js\n///import core/dom/dom.js\n///import core/utils.js\n/**\n * dtd html语义化的体现类\n * @constructor\n * @namespace dtd\n */var dtd=dom.dtd=function(){function _(s){for(var k in s){s[k.toUpperCase()]=s[k];}return s;}var X=utils.extend2;var A=_({isindex:1,fieldset:1}),B=_({input:1,button:1,select:1,textarea:1,label:1}),C=X(_({a:1}),B),D=X({iframe:1},C),E=_({hr:1,ul:1,menu:1,div:1,blockquote:1,noscript:1,table:1,center:1,address:1,dir:1,pre:1,h5:1,dl:1,h4:1,noframes:1,h6:1,ol:1,h1:1,h3:1,h2:1}),F=_({ins:1,del:1,script:1,style:1}),G=X(_({mark:1,b:1,acronym:1,bdo:1,var:1,"#":1,abbr:1,code:1,br:1,i:1,cite:1,kbd:1,u:1,strike:1,s:1,tt:1,strong:1,q:1,samp:1,em:1,dfn:1,span:1}),F),H=X(_({sub:1,img:1,embed:1,object:1,sup:1,basefont:1,map:1,applet:1,font:1,big:1,small:1}),G),I=X(_({p:1}),H),J=X(_({iframe:1}),H,B),K=_({img:1,embed:1,noscript:1,br:1,kbd:1,center:1,button:1,basefont:1,h5:1,h4:1,samp:1,h6:1,ol:1,h1:1,h3:1,h2:1,form:1,font:1,"#":1,select:1,menu:1,ins:1,abbr:1,label:1,code:1,table:1,script:1,cite:1,input:1,iframe:1,strong:1,textarea:1,noframes:1,big:1,small:1,span:1,hr:1,sub:1,bdo:1,var:1,div:1,object:1,sup:1,strike:1,dir:1,map:1,dl:1,applet:1,del:1,isindex:1,fieldset:1,ul:1,b:1,acronym:1,a:1,blockquote:1,i:1,u:1,s:1,tt:1,address:1,q:1,pre:1,p:1,em:1,dfn:1}),L=X(_({a:0}),J),//a不能被切开，所以把他\nM=_({tr:1}),N=_({"#":1}),O=X(_({param:1}),K),P=X(_({form:1}),A,D,E,I),Q=_({li:1,ol:1,ul:1}),R=_({style:1,script:1}),S=_({base:1,link:1,meta:1,title:1}),T=X(S,R),U=_({head:1,body:1}),V=_({html:1});var block=_({address:1,blockquote:1,center:1,dir:1,div:1,dl:1,fieldset:1,form:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,hr:1,isindex:1,menu:1,noframes:1,ol:1,p:1,pre:1,table:1,ul:1}),empty=_({area:1,base:1,basefont:1,br:1,col:1,command:1,dialog:1,embed:1,hr:1,img:1,input:1,isindex:1,keygen:1,link:1,meta:1,param:1,source:1,track:1,wbr:1});return _({// $ 表示自定的属性\n// body外的元素列表.\n$nonBodyContent:X(V,U,S),//块结构元素列表\n$block:block,//内联元素列表\n$inline:L,$inlineWithA:X(_({a:1}),L),$body:X(_({script:1,style:1}),block),$cdata:_({script:1,style:1}),//自闭和元素\n$empty:empty,//不是自闭合，但不能让range选中里边\n$nonChild:_({iframe:1,textarea:1}),//列表元素列表\n$listItem:_({dd:1,dt:1,li:1}),//列表根元素列表\n$list:_({ul:1,ol:1,dl:1}),//不能认为是空的元素\n$isNotEmpty:_({table:1,ul:1,ol:1,dl:1,iframe:1,area:1,base:1,col:1,hr:1,img:1,embed:1,input:1,textarea:1,link:1,meta:1,param:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1}),//如果没有子节点就可以删除的元素列表，像span,a\n$removeEmpty:_({a:1,abbr:1,acronym:1,address:1,b:1,bdo:1,big:1,cite:1,code:1,del:1,dfn:1,em:1,font:1,i:1,ins:1,label:1,kbd:1,q:1,s:1,samp:1,small:1,span:1,strike:1,strong:1,sub:1,sup:1,tt:1,u:1,var:1}),$removeEmptyBlock:_({p:1,div:1}),//在table元素里的元素列表\n$tableContent:_({caption:1,col:1,colgroup:1,tbody:1,td:1,tfoot:1,th:1,thead:1,tr:1,table:1}),//不转换的标签\n$notTransContent:_({pre:1,script:1,style:1,textarea:1}),html:U,head:T,style:N,script:N,body:P,base:{},link:{},meta:{},title:N,col:{},tr:_({td:1,th:1}),img:{},embed:{},colgroup:_({thead:1,col:1,tbody:1,tr:1,tfoot:1}),noscript:P,td:P,br:{},th:P,center:P,kbd:L,button:X(I,E),basefont:{},h5:L,h4:L,samp:L,h6:L,ol:Q,h1:L,h3:L,option:N,h2:L,form:X(A,D,E,I),select:_({optgroup:1,option:1}),font:L,ins:L,menu:Q,abbr:L,label:L,table:_({thead:1,col:1,tbody:1,tr:1,colgroup:1,caption:1,tfoot:1}),code:L,tfoot:M,cite:L,li:P,input:{},iframe:P,strong:L,textarea:N,noframes:P,big:L,small:L,//trace:\nspan:_({"#":1,br:1,b:1,strong:1,u:1,i:1,em:1,sub:1,sup:1,strike:1,span:1}),hr:L,dt:L,sub:L,optgroup:_({option:1}),param:{},bdo:L,var:L,div:P,object:O,sup:L,dd:P,strike:L,area:{},dir:Q,map:X(_({area:1,form:1,p:1}),A,F,E),applet:O,dl:_({dt:1,dd:1}),del:L,isindex:{},fieldset:X(_({legend:1}),K),thead:M,ul:Q,acronym:L,b:L,a:X(_({a:1}),J),blockquote:X(_({td:1,tr:1,tbody:1,li:1}),P),caption:L,i:L,u:L,tbody:M,s:L,address:X(D,I),tt:L,legend:L,q:L,pre:X(G,C),p:X(_({a:1}),L),em:L,dfn:L,mark:L});}();// core/domUtils.js\n/**\n * Dom操作工具包\n * @file\n * @module UE.dom.domUtils\n * @since 1.2.6.1\n *//**\n * Dom操作工具包\n * @unfile\n * @module UE.dom.domUtils\n */function getDomNode(node,start,ltr,startFromChild,fn,guard){var tmpNode=startFromChild&&node[start],parent;!tmpNode&&(tmpNode=node[ltr]);while(!tmpNode&&(parent=(parent||node).parentNode)){if(parent.tagName=="BODY"||guard&&!guard(parent)){return null;}tmpNode=parent[ltr];}if(tmpNode&&fn&&!fn(tmpNode)){return getDomNode(tmpNode,start,ltr,false,fn);}return tmpNode;}var attrFix=ie&&browser.version<9?{tabindex:"tabIndex",readonly:"readOnly",for:"htmlFor",class:"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder"}:{tabindex:"tabIndex",readonly:"readOnly"},styleBlock=utils.listToMap(["-webkit-box","-moz-box","block","list-item","table","table-row-group","table-header-group","table-footer-group","table-row","table-column-group","table-column","table-cell","table-caption"]);var domUtils=dom.domUtils={//节点常量\nNODE_ELEMENT:1,NODE_DOCUMENT:9,NODE_TEXT:3,NODE_COMMENT:8,NODE_DOCUMENT_FRAGMENT:11,//位置关系\nPOSITION_IDENTICAL:0,POSITION_DISCONNECTED:1,POSITION_FOLLOWING:2,POSITION_PRECEDING:4,POSITION_IS_CONTAINED:8,POSITION_CONTAINS:16,//ie6使用其他的会有一段空白出现\nfillChar:ie&&browser.version=="6"?\'\\uFEFF\':\'\\u200B\',//-------------------------Node部分--------------------------------\nkeys:{/*Backspace*/8:1,/*Delete*/46:1,/*Shift*/16:1,/*Ctrl*/17:1,/*Alt*/18:1,37:1,38:1,39:1,40:1,13:1/*enter*/},/**\n     * 获取节点A相对于节点B的位置关系\n     * @method getPosition\n     * @param { Node } nodeA 需要查询位置关系的节点A\n     * @param { Node } nodeB 需要查询位置关系的节点B\n     * @return { Number } 节点A与节点B的关系\n     * @example\n     * ```javascript\n     * //output: 20\n     * var position = UE.dom.domUtils.getPosition( document.documentElement, document.body );\n     *\n     * switch ( position ) {\n     *\n     *      //0\n     *      case UE.dom.domUtils.POSITION_IDENTICAL:\n     *          console.log(\'元素相同\');\n     *          break;\n     *      //1\n     *      case UE.dom.domUtils.POSITION_DISCONNECTED:\n     *          console.log(\'两个节点在不同的文档中\');\n     *          break;\n     *      //2\n     *      case UE.dom.domUtils.POSITION_FOLLOWING:\n     *          console.log(\'节点A在节点B之后\');\n     *          break;\n     *      //4\n     *      case UE.dom.domUtils.POSITION_PRECEDING;\n     *          console.log(\'节点A在节点B之前\');\n     *          break;\n     *      //8\n     *      case UE.dom.domUtils.POSITION_IS_CONTAINED:\n     *          console.log(\'节点A被节点B包含\');\n     *          break;\n     *      case 10:\n     *          console.log(\'节点A被节点B包含且节点A在节点B之后\');\n     *          break;\n     *      //16\n     *      case UE.dom.domUtils.POSITION_CONTAINS:\n     *          console.log(\'节点A包含节点B\');\n     *          break;\n     *      case 20:\n     *          console.log(\'节点A包含节点B且节点A在节点B之前\');\n     *          break;\n     *\n     * }\n     * ```\n     */getPosition:function getPosition(nodeA,nodeB){// 如果两个节点是同一个节点\nif(nodeA===nodeB){// domUtils.POSITION_IDENTICAL\nreturn 0;}var node,parentsA=[nodeA],parentsB=[nodeB];node=nodeA;while(node=node.parentNode){// 如果nodeB是nodeA的祖先节点\nif(node===nodeB){// domUtils.POSITION_IS_CONTAINED + domUtils.POSITION_FOLLOWING\nreturn 10;}parentsA.push(node);}node=nodeB;while(node=node.parentNode){// 如果nodeA是nodeB的祖先节点\nif(node===nodeA){// domUtils.POSITION_CONTAINS + domUtils.POSITION_PRECEDING\nreturn 20;}parentsB.push(node);}parentsA.reverse();parentsB.reverse();if(parentsA[0]!==parentsB[0]){// domUtils.POSITION_DISCONNECTED\nreturn 1;}var i=-1;while(i++,parentsA[i]===parentsB[i]){}nodeA=parentsA[i];nodeB=parentsB[i];while(nodeA=nodeA.nextSibling){if(nodeA===nodeB){// domUtils.POSITION_PRECEDING\nreturn 4;}}// domUtils.POSITION_FOLLOWING\nreturn 2;},/**\n     * 检测节点node在父节点中的索引位置\n     * @method getNodeIndex\n     * @param { Node } node 需要检测的节点对象\n     * @return { Number } 该节点在父节点中的位置\n     * @see UE.dom.domUtils.getNodeIndex(Node,Boolean)\n     *//**\n     * 检测节点node在父节点中的索引位置， 根据给定的mergeTextNode参数决定是否要合并多个连续的文本节点为一个节点\n     * @method getNodeIndex\n     * @param { Node } node 需要检测的节点对象\n     * @param { Boolean } mergeTextNode 是否合并多个连续的文本节点为一个节点\n     * @return { Number } 该节点在父节点中的位置\n     * @example\n     * ```javascript\n     *\n     *      var node = document.createElement("div");\n     *\n     *      node.appendChild( document.createTextNode( "hello" ) );\n     *      node.appendChild( document.createTextNode( "world" ) );\n     *      node.appendChild( node = document.createElement( "div" ) );\n     *\n     *      //output: 2\n     *      console.log( UE.dom.domUtils.getNodeIndex( node ) );\n     *\n     *      //output: 1\n     *      console.log( UE.dom.domUtils.getNodeIndex( node, true ) );\n     *\n     * ```\n     */getNodeIndex:function getNodeIndex(node,ignoreTextNode){var preNode=node,i=0;while(preNode=preNode.previousSibling){if(ignoreTextNode&&preNode.nodeType==3){if(preNode.nodeType!=preNode.nextSibling.nodeType){i++;}continue;}i++;}return i;},/**\n     * 检测节点node是否在给定的document对象上\n     * @method inDoc\n     * @param { Node } node 需要检测的节点对象\n     * @param { DomDocument } doc 需要检测的document对象\n     * @return { Boolean } 该节点node是否在给定的document的dom树上\n     * @example\n     * ```javascript\n     *\n     * var node = document.createElement("div");\n     *\n     * //output: false\n     * console.log( UE.do.domUtils.inDoc( node, document ) );\n     *\n     * document.body.appendChild( node );\n     *\n     * //output: true\n     * console.log( UE.do.domUtils.inDoc( node, document ) );\n     *\n     * ```\n     */inDoc:function inDoc(node,doc){return domUtils.getPosition(node,doc)==10;},/**\n     * 根据给定的过滤规则filterFn， 查找符合该过滤规则的node节点的第一个祖先节点，\n     * 查找的起点是给定node节点的父节点。\n     * @method findParent\n     * @param { Node } node 需要查找的节点\n     * @param { Function } filterFn 自定义的过滤方法。\n     * @warning 查找的终点是到body节点为止\n     * @remind 自定义的过滤方法filterFn接受一个Node对象作为参数， 该对象代表当前执行检测的祖先节点。 如果该\n     *          节点满足过滤条件， 则要求返回true， 这时将直接返回该节点作为findParent()的结果， 否则， 请返回false。\n     * @return { Node | Null } 如果找到符合过滤条件的节点， 就返回该节点， 否则返回NULL\n     * @example\n     * ```javascript\n     * var filterNode = UE.dom.domUtils.findParent( document.body.firstChild, function ( node ) {\n     *\n     *     //由于查找的终点是body节点， 所以永远也不会匹配当前过滤器的条件， 即这里永远会返回false\n     *     return node.tagName === "HTML";\n     *\n     * } );\n     *\n     * //output: true\n     * console.log( filterNode === null );\n     * ```\n     *//**\n     * 根据给定的过滤规则filterFn， 查找符合该过滤规则的node节点的第一个祖先节点，\n     * 如果includeSelf的值为true，则查找的起点是给定的节点node， 否则， 起点是node的父节点\n     * @method findParent\n     * @param { Node } node 需要查找的节点\n     * @param { Function } filterFn 自定义的过滤方法。\n     * @param { Boolean } includeSelf 查找过程是否包含自身\n     * @warning 查找的终点是到body节点为止\n     * @remind 自定义的过滤方法filterFn接受一个Node对象作为参数， 该对象代表当前执行检测的祖先节点。 如果该\n     *          节点满足过滤条件， 则要求返回true， 这时将直接返回该节点作为findParent()的结果， 否则， 请返回false。\n     * @remind 如果includeSelf为true， 则过滤器第一次执行时的参数会是节点本身。\n     *          反之， 过滤器第一次执行时的参数将是该节点的父节点。\n     * @return { Node | Null } 如果找到符合过滤条件的节点， 就返回该节点， 否则返回NULL\n     * @example\n     * ```html\n     * <body>\n     *\n     *      <div id="test">\n     *      </div>\n     *\n     *      <script type="text/javascript">\n     *\n     *          //output: DIV, BODY\n     *          var filterNode = UE.dom.domUtils.findParent( document.getElementById( "test" ), function ( node ) {\n     *\n     *              console.log( node.tagName );\n     *              return false;\n     *\n     *          }, true );\n     *\n     *      <\/script>\n     * </body>\n     * ```\n     */findParent:function findParent(node,filterFn,includeSelf){if(node&&!domUtils.isBody(node)){node=includeSelf?node:node.parentNode;while(node){if(!filterFn||filterFn(node)||domUtils.isBody(node)){return filterFn&&!filterFn(node)&&domUtils.isBody(node)?null:node;}node=node.parentNode;}}return null;},/**\n     * 查找node的节点名为tagName的第一个祖先节点， 查找的起点是node节点的父节点。\n     * @method findParentByTagName\n     * @param { Node } node 需要查找的节点对象\n     * @param { Array } tagNames 需要查找的父节点的名称数组\n     * @warning 查找的终点是到body节点为止\n     * @return { Node | NULL } 如果找到符合条件的节点， 则返回该节点， 否则返回NULL\n     * @example\n     * ```javascript\n     * var node = UE.dom.domUtils.findParentByTagName( document.getElementsByTagName("div")[0], [ "BODY" ] );\n     * //output: BODY\n     * console.log( node.tagName );\n     * ```\n     *//**\n     * 查找node的节点名为tagName的祖先节点， 如果includeSelf的值为true，则查找的起点是给定的节点node，\n     * 否则， 起点是node的父节点。\n     * @method findParentByTagName\n     * @param { Node } node 需要查找的节点对象\n     * @param { Array } tagNames 需要查找的父节点的名称数组\n     * @param { Boolean } includeSelf 查找过程是否包含node节点自身\n     * @warning 查找的终点是到body节点为止\n     * @return { Node | NULL } 如果找到符合条件的节点， 则返回该节点， 否则返回NULL\n     * @example\n     * ```javascript\n     * var queryTarget = document.getElementsByTagName("div")[0];\n     * var node = UE.dom.domUtils.findParentByTagName( queryTarget, [ "DIV" ], true );\n     * //output: true\n     * console.log( queryTarget === node );\n     * ```\n     */findParentByTagName:function findParentByTagName(node,tagNames,includeSelf,excludeFn){tagNames=utils.listToMap(utils.isArray(tagNames)?tagNames:[tagNames]);return domUtils.findParent(node,function(node){return tagNames[node.tagName]&&!(excludeFn&&excludeFn(node));},includeSelf);},/**\n     * 查找节点node的祖先节点集合， 查找的起点是给定节点的父节点，结果集中不包含给定的节点。\n     * @method findParents\n     * @param { Node } node 需要查找的节点对象\n     * @return { Array } 给定节点的祖先节点数组\n     * @grammar UE.dom.domUtils.findParents(node)  => Array  //返回一个祖先节点数组集合，不包含自身\n     * @grammar UE.dom.domUtils.findParents(node,includeSelf)  => Array  //返回一个祖先节点数组集合，includeSelf指定是否包含自身\n     * @grammar UE.dom.domUtils.findParents(node,includeSelf,filterFn)  => Array  //返回一个祖先节点数组集合，filterFn指定过滤条件，返回true的node将被选取\n     * @grammar UE.dom.domUtils.findParents(node,includeSelf,filterFn,closerFirst)  => Array  //返回一个祖先节点数组集合，closerFirst为true的话，node的直接父亲节点是数组的第0个\n     *//**\n     * 查找节点node的祖先节点集合， 如果includeSelf的值为true，\n     * 则返回的结果集中允许出现当前给定的节点， 否则， 该节点不会出现在其结果集中。\n     * @method findParents\n     * @param { Node } node 需要查找的节点对象\n     * @param { Boolean } includeSelf 查找的结果中是否允许包含当前查找的节点对象\n     * @return { Array } 给定节点的祖先节点数组\n     */findParents:function findParents(node,includeSelf,filterFn,closerFirst){var parents=includeSelf&&(filterFn&&filterFn(node)||!filterFn)?[node]:[];while(node=domUtils.findParent(node,filterFn)){parents.push(node);}return closerFirst?parents:parents.reverse();},/**\n     * 在节点node后面插入新节点newNode\n     * @method insertAfter\n     * @param { Node } node 目标节点\n     * @param { Node } newNode 新插入的节点， 该节点将置于目标节点之后\n     * @return { Node } 新插入的节点\n     */insertAfter:function insertAfter(node,newNode){return node.nextSibling?node.parentNode.insertBefore(newNode,node.nextSibling):node.parentNode.appendChild(newNode);},/**\n     * 删除节点node及其下属的所有节点\n     * @method remove\n     * @param { Node } node 需要删除的节点对象\n     * @return { Node } 返回刚删除的节点对象\n     * @example\n     * ```html\n     * <div id="test">\n     *     <div id="child">你好</div>\n     * </div>\n     * <script>\n     *     UE.dom.domUtils.remove( document.body, false );\n     *     //output: false\n     *     console.log( document.getElementById( "child" ) !== null );\n     * <\/script>\n     * ```\n     *//**\n     * 删除节点node，并根据keepChildren的值决定是否保留子节点\n     * @method remove\n     * @param { Node } node 需要删除的节点对象\n     * @param { Boolean } keepChildren 是否需要保留子节点\n     * @return { Node } 返回刚删除的节点对象\n     * @example\n     * ```html\n     * <div id="test">\n     *     <div id="child">你好</div>\n     * </div>\n     * <script>\n     *     UE.dom.domUtils.remove( document.body, true );\n     *     //output: true\n     *     console.log( document.getElementById( "child" ) !== null );\n     * <\/script>\n     * ```\n     */remove:function remove(node,keepChildren){var parent=node.parentNode,child;if(parent){if(keepChildren&&node.hasChildNodes()){while(child=node.firstChild){parent.insertBefore(child,node);}}parent.removeChild(node);}return node;},/**\n     * 取得node节点的下一个兄弟节点， 如果该节点其后没有兄弟节点， 则递归查找其父节点之后的第一个兄弟节点，\n     * 直到找到满足条件的节点或者递归到BODY节点之后才会结束。\n     * @method getNextDomNode\n     * @param { Node } node 需要获取其后的兄弟节点的节点对象\n     * @return { Node | NULL } 如果找满足条件的节点， 则返回该节点， 否则返回NULL\n     * @example\n     * ```html\n     *     <body>\n     *      <div id="test">\n     *          <span></span>\n     *      </div>\n     *      <i>xxx</i>\n     * </body>\n     * <script>\n     *\n     *     //output: i节点\n     *     console.log( UE.dom.domUtils.getNextDomNode( document.getElementById( "test" ) ) );\n     *\n     * <\/script>\n     * ```\n     * @example\n     * ```html\n     * <body>\n     *      <div>\n     *          <span></span>\n     *          <i id="test">xxx</i>\n     *      </div>\n     *      <b>xxx</b>\n     * </body>\n     * <script>\n     *\n     *     //由于id为test的i节点之后没有兄弟节点， 则查找其父节点（div）后面的兄弟节点\n     *     //output: b节点\n     *     console.log( UE.dom.domUtils.getNextDomNode( document.getElementById( "test" ) ) );\n     *\n     * <\/script>\n     * ```\n     *//**\n     * 取得node节点的下一个兄弟节点， 如果startFromChild的值为ture，则先获取其子节点，\n     * 如果有子节点则直接返回第一个子节点；如果没有子节点或者startFromChild的值为false，\n     * 则执行<a href="#UE.dom.domUtils.getNextDomNode(Node)">getNextDomNode(Node node)</a>的查找过程。\n     * @method getNextDomNode\n     * @param { Node } node 需要获取其后的兄弟节点的节点对象\n     * @param { Boolean } startFromChild 查找过程是否从其子节点开始\n     * @return { Node | NULL } 如果找满足条件的节点， 则返回该节点， 否则返回NULL\n     * @see UE.dom.domUtils.getNextDomNode(Node)\n     */getNextDomNode:function getNextDomNode(node,startFromChild,filterFn,guard){return getDomNode(node,"firstChild","nextSibling",startFromChild,filterFn,guard);},getPreDomNode:function getPreDomNode(node,startFromChild,filterFn,guard){return getDomNode(node,"lastChild","previousSibling",startFromChild,filterFn,guard);},/**\n     * 检测节点node是否属是UEditor定义的bookmark节点\n     * @method isBookmarkNode\n     * @private\n     * @param { Node } node 需要检测的节点对象\n     * @return { Boolean } 是否是bookmark节点\n     * @example\n     * ```html\n     * <span id="_baidu_bookmark_1"></span>\n     * <script>\n     *      var bookmarkNode = document.getElementById("_baidu_bookmark_1");\n     *      //output: true\n     *      console.log( UE.dom.domUtils.isBookmarkNode( bookmarkNode ) );\n     * <\/script>\n     * ```\n     */isBookmarkNode:function isBookmarkNode(node){return node.nodeType==1&&node.id&&/^_baidu_bookmark_/i.test(node.id);},/**\n     * 获取节点node所属的window对象\n     * @method  getWindow\n     * @param { Node } node 节点对象\n     * @return { Window } 当前节点所属的window对象\n     * @example\n     * ```javascript\n     * //output: true\n     * console.log( UE.dom.domUtils.getWindow( document.body ) === window );\n     * ```\n     */getWindow:function getWindow(node){var doc=node.ownerDocument||node;return doc.defaultView||doc.parentWindow;},/**\n     * 获取离nodeA与nodeB最近的公共的祖先节点\n     * @method  getCommonAncestor\n     * @param { Node } nodeA 第一个节点\n     * @param { Node } nodeB 第二个节点\n     * @remind 如果给定的两个节点是同一个节点， 将直接返回该节点。\n     * @return { Node | NULL } 如果未找到公共节点， 返回NULL， 否则返回最近的公共祖先节点。\n     * @example\n     * ```javascript\n     * var commonAncestor = UE.dom.domUtils.getCommonAncestor( document.body, document.body.firstChild );\n     * //output: true\n     * console.log( commonAncestor.tagName.toLowerCase() === \'body\' );\n     * ```\n     */getCommonAncestor:function getCommonAncestor(nodeA,nodeB){if(nodeA===nodeB)return nodeA;var parentsA=[nodeA],parentsB=[nodeB],parent=nodeA,i=-1;while(parent=parent.parentNode){if(parent===nodeB){return parent;}parentsA.push(parent);}parent=nodeB;while(parent=parent.parentNode){if(parent===nodeA)return parent;parentsB.push(parent);}parentsA.reverse();parentsB.reverse();while(i++,parentsA[i]===parentsB[i]){}return i==0?null:parentsA[i-1];},/**\n     * 清除node节点左右连续为空的兄弟inline节点\n     * @method clearEmptySibling\n     * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，\n     * 则这些兄弟节点将被删除\n     * @grammar UE.dom.domUtils.clearEmptySibling(node,ignoreNext)  //ignoreNext指定是否忽略右边空节点\n     * @grammar UE.dom.domUtils.clearEmptySibling(node,ignoreNext,ignorePre)  //ignorePre指定是否忽略左边空节点\n     * @example\n     * ```html\n     * <body>\n     *     <div></div>\n     *     <span id="test"></span>\n     *     <i></i>\n     *     <b></b>\n     *     <em>xxx</em>\n     *     <span></span>\n     * </body>\n     * <script>\n     *\n     *      UE.dom.domUtils.clearEmptySibling( document.getElementById( "test" ) );\n     *\n     *      //output: <div></div><span id="test"></span><em>xxx</em><span></span>\n     *      console.log( document.body.innerHTML );\n     *\n     * <\/script>\n     * ```\n     *//**\n     * 清除node节点左右连续为空的兄弟inline节点， 如果ignoreNext的值为true，\n     * 则忽略对右边兄弟节点的操作。\n     * @method clearEmptySibling\n     * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，\n     * @param { Boolean } ignoreNext 是否忽略忽略对右边的兄弟节点的操作\n     * 则这些兄弟节点将被删除\n     * @see UE.dom.domUtils.clearEmptySibling(Node)\n     *//**\n     * 清除node节点左右连续为空的兄弟inline节点， 如果ignoreNext的值为true，\n     * 则忽略对右边兄弟节点的操作， 如果ignorePre的值为true，则忽略对左边兄弟节点的操作。\n     * @method clearEmptySibling\n     * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，\n     * @param { Boolean } ignoreNext 是否忽略忽略对右边的兄弟节点的操作\n     * @param { Boolean } ignorePre 是否忽略忽略对左边的兄弟节点的操作\n     * 则这些兄弟节点将被删除\n     * @see UE.dom.domUtils.clearEmptySibling(Node)\n     */clearEmptySibling:function clearEmptySibling(node,ignoreNext,ignorePre){function clear(next,dir){var tmpNode;while(next&&!domUtils.isBookmarkNode(next)&&(domUtils.isEmptyInlineElement(next)||//这里不能把空格算进来会吧空格干掉，出现文字间的空格丢掉了\n!new RegExp("[^\\t\\n\\r"+domUtils.fillChar+"]").test(next.nodeValue))){tmpNode=next[dir];domUtils.remove(next);next=tmpNode;}}!ignoreNext&&clear(node.nextSibling,"nextSibling");!ignorePre&&clear(node.previousSibling,"previousSibling");},/**\n     * 将一个文本节点textNode拆分成两个文本节点，offset指定拆分位置\n     * @method split\n     * @param { Node } textNode 需要拆分的文本节点对象\n     * @param { int } offset 需要拆分的位置， 位置计算从0开始\n     * @return { Node } 拆分后形成的新节点\n     * @example\n     * ```html\n     * <div id="test">abcdef</div>\n     * <script>\n     *      var newNode = UE.dom.domUtils.split( document.getElementById( "test" ).firstChild, 3 );\n     *      //output: def\n     *      console.log( newNode.nodeValue );\n     * <\/script>\n     * ```\n     */split:function split(node,offset){var doc=node.ownerDocument;if(browser.ie&&offset==node.nodeValue.length){var next=doc.createTextNode("");return domUtils.insertAfter(node,next);}var retval=node.splitText(offset);//ie8下splitText不会跟新childNodes,我们手动触发他的更新\nif(browser.ie8){var tmpNode=doc.createTextNode("");domUtils.insertAfter(retval,tmpNode);domUtils.remove(tmpNode);}return retval;},/**\n     * 检测文本节点textNode是否为空节点（包括空格、换行、占位符等字符）\n     * @method  isWhitespace\n     * @param { Node } node 需要检测的节点对象\n     * @return { Boolean } 检测的节点是否为空\n     * @example\n     * ```html\n     * <div id="test">\n     *\n     * </div>\n     * <script>\n     *      //output: true\n     *      console.log( UE.dom.domUtils.isWhitespace( document.getElementById("test").firstChild ) );\n     * <\/script>\n     * ```\n     */isWhitespace:function isWhitespace(node){return!new RegExp("[^ \\t\\n\\r"+domUtils.fillChar+"]").test(node.nodeValue);},/**\n     * 获取元素element相对于viewport的位置坐标\n     * @method getXY\n     * @param { Node } element 需要计算位置的节点对象\n     * @return { Object } 返回形如{x:left,y:top}的一个key-value映射对象， 其中键x代表水平偏移距离，\n     *                          y代表垂直偏移距离。\n     *\n     * @example\n     * ```javascript\n     * var location = UE.dom.domUtils.getXY( document.getElementById("test") );\n     * //output: test的坐标为: 12, 24\n     * console.log( \'test的坐标为： \', location.x, \',\', location.y );\n     * ```\n     */getXY:function getXY(element){var x=0,y=0;while(element.offsetParent){y+=element.offsetTop;x+=element.offsetLeft;element=element.offsetParent;}return{x:x,y:y};},/**\n     * 为元素element绑定原生DOM事件，type为事件类型，handler为处理函数\n     * @method on\n     * @param { Node } element 需要绑定事件的节点对象\n     * @param { String } type 绑定的事件类型\n     * @param { Function } handler 事件处理器\n     * @example\n     * ```javascript\n     * UE.dom.domUtils.on(document.body,"click",function(e){\n     *     //e为事件对象，this为被点击元素对戏那个\n     * });\n     * ```\n     *//**\n     * 为元素element绑定原生DOM事件，type为事件类型，handler为处理函数\n     * @method on\n     * @param { Node } element 需要绑定事件的节点对象\n     * @param { Array } type 绑定的事件类型数组\n     * @param { Function } handler 事件处理器\n     * @example\n     * ```javascript\n     * UE.dom.domUtils.on(document.body,["click","mousedown"],function(evt){\n     *     //evt为事件对象，this为被点击元素对象\n     * });\n     * ```\n     */on:function on(element,type,handler){var types=utils.isArray(type)?type:utils.trim(type).split(/\\s+/),k=types.length;if(k)while(k--){type=types[k];if(element.addEventListener){element.addEventListener(type,handler,false);}else{if(!handler._d){handler._d={els:[]};}var key=type+handler.toString(),index=utils.indexOf(handler._d.els,element);if(!handler._d[key]||index==-1){if(index==-1){handler._d.els.push(element);}if(!handler._d[key]){handler._d[key]=function(evt){return handler.call(evt.srcElement,evt||window.event);};}element.attachEvent("on"+type,handler._d[key]);}}}element=null;},/**\n     * 解除DOM事件绑定\n     * @method un\n     * @param { Node } element 需要解除事件绑定的节点对象\n     * @param { String } type 需要接触绑定的事件类型\n     * @param { Function } handler 对应的事件处理器\n     * @example\n     * ```javascript\n     * UE.dom.domUtils.un(document.body,"click",function(evt){\n     *     //evt为事件对象，this为被点击元素对象\n     * });\n     * ```\n     *//**\n     * 解除DOM事件绑定\n     * @method un\n     * @param { Node } element 需要解除事件绑定的节点对象\n     * @param { Array } type 需要接触绑定的事件类型数组\n     * @param { Function } handler 对应的事件处理器\n     * @example\n     * ```javascript\n     * UE.dom.domUtils.un(document.body, ["click","mousedown"],function(evt){\n     *     //evt为事件对象，this为被点击元素对象\n     * });\n     * ```\n     */un:function un(element,type,handler){var types=utils.isArray(type)?type:utils.trim(type).split(/\\s+/),k=types.length;if(k)while(k--){type=types[k];if(element.removeEventListener){element.removeEventListener(type,handler,false);}else{var key=type+handler.toString();try{element.detachEvent("on"+type,handler._d?handler._d[key]:handler);}catch(e){}if(handler._d&&handler._d[key]){var index=utils.indexOf(handler._d.els,element);if(index!=-1){handler._d.els.splice(index,1);}handler._d.els.length==0&&delete handler._d[key];}}}},/**\n     * 比较节点nodeA与节点nodeB是否具有相同的标签名、属性名以及属性值\n     * @method  isSameElement\n     * @param { Node } nodeA 需要比较的节点\n     * @param { Node } nodeB 需要比较的节点\n     * @return { Boolean } 两个节点是否具有相同的标签名、属性名以及属性值\n     * @example\n     * ```html\n     * <span style="font-size:12px">ssss</span>\n     * <span style="font-size:12px">bbbbb</span>\n     * <span style="font-size:13px">ssss</span>\n     * <span style="font-size:14px">bbbbb</span>\n     *\n     * <script>\n     *\n     *     var nodes = document.getElementsByTagName( "span" );\n     *\n     *     //output: true\n     *     console.log( UE.dom.domUtils.isSameElement( nodes[0], nodes[1] ) );\n     *\n     *     //output: false\n     *     console.log( UE.dom.domUtils.isSameElement( nodes[2], nodes[3] ) );\n     *\n     * <\/script>\n     * ```\n     */isSameElement:function isSameElement(nodeA,nodeB){if(nodeA.tagName!=nodeB.tagName){return false;}var thisAttrs=nodeA.attributes,otherAttrs=nodeB.attributes;if(!ie&&thisAttrs.length!=otherAttrs.length){return false;}var attrA,attrB,al=0,bl=0;for(var i=0;attrA=thisAttrs[i++];){if(attrA.nodeName=="style"){if(attrA.specified){al++;}if(domUtils.isSameStyle(nodeA,nodeB)){continue;}else{return false;}}if(ie){if(attrA.specified){al++;attrB=otherAttrs.getNamedItem(attrA.nodeName);}else{continue;}}else{attrB=nodeB.attributes[attrA.nodeName];}if(!attrB.specified||attrA.nodeValue!=attrB.nodeValue){return false;}}// 有可能attrB的属性包含了attrA的属性之外还有自己的属性\nif(ie){for(i=0;attrB=otherAttrs[i++];){if(attrB.specified){bl++;}}if(al!=bl){return false;}}return true;},/**\n     * 判断节点nodeA与节点nodeB的元素的style属性是否一致\n     * @method isSameStyle\n     * @param { Node } nodeA 需要比较的节点\n     * @param { Node } nodeB 需要比较的节点\n     * @return { Boolean } 两个节点是否具有相同的style属性值\n     * @example\n     * ```html\n     * <span style="font-size:12px">ssss</span>\n     * <span style="font-size:12px">bbbbb</span>\n     * <span style="font-size:13px">ssss</span>\n     * <span style="font-size:14px">bbbbb</span>\n     *\n     * <script>\n     *\n     *     var nodes = document.getElementsByTagName( "span" );\n     *\n     *     //output: true\n     *     console.log( UE.dom.domUtils.isSameStyle( nodes[0], nodes[1] ) );\n     *\n     *     //output: false\n     *     console.log( UE.dom.domUtils.isSameStyle( nodes[2], nodes[3] ) );\n     *\n     * <\/script>\n     * ```\n     */isSameStyle:function isSameStyle(nodeA,nodeB){var styleA=nodeA.style.cssText.replace(/( ?; ?)/g,";").replace(/( ?: ?)/g,":"),styleB=nodeB.style.cssText.replace(/( ?; ?)/g,";").replace(/( ?: ?)/g,":");if(browser.opera){styleA=nodeA.style;styleB=nodeB.style;if(styleA.length!=styleB.length)return false;for(var p in styleA){if(/^(\\d+|csstext)$/i.test(p)){continue;}if(styleA[p]!=styleB[p]){return false;}}return true;}if(!styleA||!styleB){return styleA==styleB;}styleA=styleA.split(";");styleB=styleB.split(";");if(styleA.length!=styleB.length){return false;}for(var i=0,ci;ci=styleA[i++];){if(utils.indexOf(styleB,ci)==-1){return false;}}return true;},/**\n     * 检查节点node是否为block元素\n     * @method isBlockElm\n     * @param { Node } node 需要检测的节点对象\n     * @return { Boolean } 是否是block元素节点\n     * @warning 该方法的判断规则如下： 如果该元素原本是block元素， 则不论该元素当前的css样式是什么都会返回true；\n     *          否则，检测该元素的css样式， 如果该元素当前是block元素， 则返回true。 其余情况下都返回false。\n     * @example\n     * ```html\n     * <span id="test1" style="display: block"></span>\n     * <span id="test2"></span>\n     * <div id="test3" style="display: inline"></div>\n     *\n     * <script>\n     *\n     *     //output: true\n     *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById("test1") ) );\n     *\n     *     //output: false\n     *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById("test2") ) );\n     *\n     *     //output: true\n     *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById("test3") ) );\n     *\n     * <\/script>\n     * ```\n     */isBlockElm:function isBlockElm(node){return node.nodeType==1&&(dtd.$block[node.tagName]||styleBlock[domUtils.getComputedStyle(node,"display")])&&!dtd.$nonChild[node.tagName];},/**\n     * 检测node节点是否为body节点\n     * @method isBody\n     * @param { Element } node 需要检测的dom元素\n     * @return { Boolean } 给定的元素是否是body元素\n     * @example\n     * ```javascript\n     * //output: true\n     * console.log( UE.dom.domUtils.isBody( document.body ) );\n     * ```\n     */isBody:function isBody(node){return node&&node.nodeType==1&&node.tagName.toLowerCase()=="body";},/**\n     * 以node节点为分界，将该节点的指定祖先节点parent拆分成两个独立的节点，\n     * 拆分形成的两个节点之间是node节点\n     * @method breakParent\n     * @param { Node } node 作为分界的节点对象\n     * @param { Node } parent 该节点必须是node节点的祖先节点， 且是block节点。\n     * @return { Node } 给定的node分界节点\n     * @example\n     * ```javascript\n     *\n     *      var node = document.createElement("span"),\n     *          wrapNode = document.createElement( "div" ),\n     *          parent = document.createElement("p");\n     *\n     *      parent.appendChild( node );\n     *      wrapNode.appendChild( parent );\n     *\n     *      //拆分前\n     *      //output: <p><span></span></p>\n     *      console.log( wrapNode.innerHTML );\n     *\n     *\n     *      UE.dom.domUtils.breakParent( node, parent );\n     *      //拆分后\n     *      //output: <p></p><span></span><p></p>\n     *      console.log( wrapNode.innerHTML );\n     *\n     * ```\n     */breakParent:function breakParent(node,parent){var tmpNode,parentClone=node,clone=node,leftNodes,rightNodes;do{parentClone=parentClone.parentNode;if(leftNodes){tmpNode=parentClone.cloneNode(false);tmpNode.appendChild(leftNodes);leftNodes=tmpNode;tmpNode=parentClone.cloneNode(false);tmpNode.appendChild(rightNodes);rightNodes=tmpNode;}else{leftNodes=parentClone.cloneNode(false);rightNodes=leftNodes.cloneNode(false);}while(tmpNode=clone.previousSibling){leftNodes.insertBefore(tmpNode,leftNodes.firstChild);}while(tmpNode=clone.nextSibling){rightNodes.appendChild(tmpNode);}clone=parentClone;}while(parent!==parentClone);tmpNode=parent.parentNode;tmpNode.insertBefore(leftNodes,parent);tmpNode.insertBefore(rightNodes,parent);tmpNode.insertBefore(node,rightNodes);domUtils.remove(parent);return node;},/**\n     * 检查节点node是否是空inline节点\n     * @method  isEmptyInlineElement\n     * @param { Node } node 需要检测的节点对象\n     * @return { Number }  如果给定的节点是空的inline节点， 则返回1, 否则返回0。\n     * @example\n     * ```html\n     * <b><i></i></b> => 1\n     * <b><i></i><u></u></b> => 1\n     * <b></b> => 1\n     * <b>xx<i></i></b> => 0\n     * ```\n     */isEmptyInlineElement:function isEmptyInlineElement(node){if(node.nodeType!=1||!dtd.$removeEmpty[node.tagName]){return 0;}node=node.firstChild;while(node){//如果是创建的bookmark就跳过\nif(domUtils.isBookmarkNode(node)){return 0;}if(node.nodeType==1&&!domUtils.isEmptyInlineElement(node)||node.nodeType==3&&!domUtils.isWhitespace(node)){return 0;}node=node.nextSibling;}return 1;},/**\n     * 删除node节点下首尾两端的空白文本子节点\n     * @method trimWhiteTextNode\n     * @param { Element } node 需要执行删除操作的元素对象\n     * @example\n     * ```javascript\n     *      var node = document.createElement("div");\n     *\n     *      node.appendChild( document.createTextNode( "" ) );\n     *\n     *      node.appendChild( document.createElement("div") );\n     *\n     *      node.appendChild( document.createTextNode( "" ) );\n     *\n     *      //3\n     *      console.log( node.childNodes.length );\n     *\n     *      UE.dom.domUtils.trimWhiteTextNode( node );\n     *\n     *      //1\n     *      console.log( node.childNodes.length );\n     * ```\n     */trimWhiteTextNode:function trimWhiteTextNode(node){function remove(dir){var child;while((child=node[dir])&&child.nodeType==3&&domUtils.isWhitespace(child)){node.removeChild(child);}}remove("firstChild");remove("lastChild");},/**\n     * 合并node节点下相同的子节点\n     * @name mergeChild\n     * @desc\n     * UE.dom.domUtils.mergeChild(node,tagName) //tagName要合并的子节点的标签\n     * @example\n     * <p><span style="font-size:12px;">xx<span style="font-size:12px;">aa</span>xx</span></p>\n     * ==> UE.dom.domUtils.mergeChild(node,\'span\')\n     * <p><span style="font-size:12px;">xxaaxx</span></p>\n     */mergeChild:function mergeChild(node,tagName,attrs){var list=domUtils.getElementsByTagName(node,node.tagName.toLowerCase());for(var i=0,ci;ci=list[i++];){if(!ci.parentNode||domUtils.isBookmarkNode(ci)){continue;}//span单独处理\nif(ci.tagName.toLowerCase()=="span"){if(node===ci.parentNode){domUtils.trimWhiteTextNode(node);if(node.childNodes.length==1){node.style.cssText=ci.style.cssText+";"+node.style.cssText;domUtils.remove(ci,true);continue;}}ci.style.cssText=node.style.cssText+";"+ci.style.cssText;if(attrs){var style=attrs.style;if(style){style=style.split(";");for(var j=0,s;s=style[j++];){ci.style[utils.cssStyleToDomStyle(s.split(":")[0])]=s.split(":")[1];}}}if(domUtils.isSameStyle(ci,node)){domUtils.remove(ci,true);}continue;}if(domUtils.isSameElement(node,ci)){domUtils.remove(ci,true);}}},/**\n     * 原生方法getElementsByTagName的封装\n     * @method getElementsByTagName\n     * @param { Node } node 目标节点对象\n     * @param { String } tagName 需要查找的节点的tagName， 多个tagName以空格分割\n     * @return { Array } 符合条件的节点集合\n     */getElementsByTagName:function getElementsByTagName(node,name,filter){if(filter&&utils.isString(filter)){var className=filter;filter=function filter(node){return domUtils.hasClass(node,className);};}name=utils.trim(name).replace(/[ ]{2,}/g," ").split(" ");var arr=[];for(var n=0,ni;ni=name[n++];){var list=node.getElementsByTagName(ni);for(var i=0,ci;ci=list[i++];){if(!filter||filter(ci))arr.push(ci);}}return arr;},/**\n     * 将节点node提取到父节点上\n     * @method mergeToParent\n     * @param { Element } node 需要提取的元素对象\n     * @example\n     * ```html\n     * <div id="parent">\n     *     <div id="sub">\n     *         <span id="child"></span>\n     *     </div>\n     * </div>\n     *\n     * <script>\n     *\n     *     var child = document.getElementById( "child" );\n     *\n     *     //output: sub\n     *     console.log( child.parentNode.id );\n     *\n     *     UE.dom.domUtils.mergeToParent( child );\n     *\n     *     //output: parent\n     *     console.log( child.parentNode.id );\n     *\n     * <\/script>\n     * ```\n     */mergeToParent:function mergeToParent(node){var parent=node.parentNode;while(parent&&dtd.$removeEmpty[parent.tagName]){if(parent.tagName==node.tagName||parent.tagName=="A"){//针对a标签单独处理\ndomUtils.trimWhiteTextNode(parent);//span需要特殊处理  不处理这样的情况 <span stlye="color:#fff">xxx<span style="color:#ccc">xxx</span>xxx</span>\nif(parent.tagName=="SPAN"&&!domUtils.isSameStyle(parent,node)||parent.tagName=="A"&&node.tagName=="SPAN"){if(parent.childNodes.length>1||parent!==node.parentNode){node.style.cssText=parent.style.cssText+";"+node.style.cssText;parent=parent.parentNode;continue;}else{parent.style.cssText+=";"+node.style.cssText;//trace:952 a标签要保持下划线\nif(parent.tagName=="A"){parent.style.textDecoration="underline";}}}if(parent.tagName!="A"){parent===node.parentNode&&domUtils.remove(node,true);break;}}parent=parent.parentNode;}},/**\n     * 合并节点node的左右兄弟节点\n     * @method mergeSibling\n     * @param { Element } node 需要合并的目标节点\n     * @example\n     * ```html\n     * <b>xxxx</b><b id="test">ooo</b><b>xxxx</b>\n     *\n     * <script>\n     *     var demoNode = document.getElementById("test");\n     *     UE.dom.domUtils.mergeSibling( demoNode );\n     *     //output: xxxxoooxxxx\n     *     console.log( demoNode.innerHTML );\n     * <\/script>\n     * ```\n     *//**\n     * 合并节点node的左右兄弟节点， 可以根据给定的条件选择是否忽略合并左节点。\n     * @method mergeSibling\n     * @param { Element } node 需要合并的目标节点\n     * @param { Boolean } ignorePre 是否忽略合并左节点\n     * @example\n     * ```html\n     * <b>xxxx</b><b id="test">ooo</b><b>xxxx</b>\n     *\n     * <script>\n     *     var demoNode = document.getElementById("test");\n     *     UE.dom.domUtils.mergeSibling( demoNode, true );\n     *     //output: oooxxxx\n     *     console.log( demoNode.innerHTML );\n     * <\/script>\n     * ```\n     *//**\n     * 合并节点node的左右兄弟节点，可以根据给定的条件选择是否忽略合并左右节点。\n     * @method mergeSibling\n     * @param { Element } node 需要合并的目标节点\n     * @param { Boolean } ignorePre 是否忽略合并左节点\n     * @param { Boolean } ignoreNext 是否忽略合并右节点\n     * @remind 如果同时忽略左右节点， 则该操作什么也不会做\n     * @example\n     * ```html\n     * <b>xxxx</b><b id="test">ooo</b><b>xxxx</b>\n     *\n     * <script>\n     *     var demoNode = document.getElementById("test");\n     *     UE.dom.domUtils.mergeSibling( demoNode, false, true );\n     *     //output: xxxxooo\n     *     console.log( demoNode.innerHTML );\n     * <\/script>\n     * ```\n     */mergeSibling:function mergeSibling(node,ignorePre,ignoreNext){function merge(rtl,start,node){var next;if((next=node[rtl])&&!domUtils.isBookmarkNode(next)&&next.nodeType==1&&domUtils.isSameElement(node,next)){while(next.firstChild){if(start=="firstChild"){node.insertBefore(next.lastChild,node.firstChild);}else{node.appendChild(next.firstChild);}}domUtils.remove(next);}}!ignorePre&&merge("previousSibling","firstChild",node);!ignoreNext&&merge("nextSibling","lastChild",node);},/**\n     * 设置节点node及其子节点不会被选中\n     * @method unSelectable\n     * @param { Element } node 需要执行操作的dom元素\n     * @remind 执行该操作后的节点， 将不能被鼠标选中\n     * @example\n     * ```javascript\n     * UE.dom.domUtils.unSelectable( document.body );\n     * ```\n     */unSelectable:ie&&browser.ie9below||browser.opera?function(node){//for ie9\nnode.onselectstart=function(){return false;};node.onclick=node.onkeyup=node.onkeydown=function(){return false;};node.unselectable="on";node.setAttribute("unselectable","on");for(var i=0,ci;ci=node.all[i++];){switch(ci.tagName.toLowerCase()){case"iframe":case"textarea":case"input":case"select":break;default:ci.unselectable="on";node.setAttribute("unselectable","on");}}}:function(node){node.style.MozUserSelect=node.style.webkitUserSelect=node.style.msUserSelect=node.style.KhtmlUserSelect="none";},/**\n     * 删除节点node上的指定属性名称的属性\n     * @method  removeAttributes\n     * @param { Node } node 需要删除属性的节点对象\n     * @param { String } attrNames 可以是空格隔开的多个属性名称，该操作将会依次删除相应的属性\n     * @example\n     * ```html\n     * <div id="wrap">\n     *      <span style="font-size:14px;" id="test" name="followMe">xxxxx</span>\n     * </div>\n     *\n     * <script>\n     *\n     *     UE.dom.domUtils.removeAttributes( document.getElementById( "test" ), "id name" );\n     *\n     *     //output: <span style="font-size:14px;">xxxxx</span>\n     *     console.log( document.getElementById("wrap").innerHTML );\n     *\n     * <\/script>\n     * ```\n     *//**\n     * 删除节点node上的指定属性名称的属性\n     * @method  removeAttributes\n     * @param { Node } node 需要删除属性的节点对象\n     * @param { Array } attrNames 需要删除的属性名数组\n     * @example\n     * ```html\n     * <div id="wrap">\n     *      <span style="font-size:14px;" id="test" name="followMe">xxxxx</span>\n     * </div>\n     *\n     * <script>\n     *\n     *     UE.dom.domUtils.removeAttributes( document.getElementById( "test" ), ["id", "name"] );\n     *\n     *     //output: <span style="font-size:14px;">xxxxx</span>\n     *     console.log( document.getElementById("wrap").innerHTML );\n     *\n     * <\/script>\n     * ```\n     */removeAttributes:function removeAttributes(node,attrNames){attrNames=utils.isArray(attrNames)?attrNames:utils.trim(attrNames).replace(/[ ]{2,}/g," ").split(" ");for(var i=0,ci;ci=attrNames[i++];){ci=attrFix[ci]||ci;switch(ci){case"className":node[ci]="";break;case"style":node.style.cssText="";var val=node.getAttributeNode("style");!browser.ie&&val&&node.removeAttributeNode(val);}node.removeAttribute(ci);}},/**\n     * 在doc下创建一个标签名为tag，属性为attrs的元素\n     * @method createElement\n     * @param { DomDocument } doc 新创建的元素属于该document节点创建\n     * @param { String } tagName 需要创建的元素的标签名\n     * @param { Object } attrs 新创建的元素的属性key-value集合\n     * @return { Element } 新创建的元素对象\n     * @example\n     * ```javascript\n     * var ele = UE.dom.domUtils.createElement( document, \'div\', {\n     *     id: \'test\'\n     * } );\n     *\n     * //output: DIV\n     * console.log( ele.tagName );\n     *\n     * //output: test\n     * console.log( ele.id );\n     *\n     * ```\n     */createElement:function createElement(doc,tag,attrs){return domUtils.setAttributes(doc.createElement(tag),attrs);},/**\n     * 为节点node添加属性attrs，attrs为属性键值对\n     * @method setAttributes\n     * @param { Element } node 需要设置属性的元素对象\n     * @param { Object } attrs 需要设置的属性名-值对\n     * @return { Element } 设置属性的元素对象\n     * @example\n     * ```html\n     * <span id="test"></span>\n     *\n     * <script>\n     *\n     *     var testNode = UE.dom.domUtils.setAttributes( document.getElementById( "test" ), {\n     *         id: \'demo\'\n     *     } );\n     *\n     *     //output: demo\n     *     console.log( testNode.id );\n     *\n     * <\/script>\n     *\n     */setAttributes:function setAttributes(node,attrs){for(var attr in attrs){if(attrs.hasOwnProperty(attr)){var value=attrs[attr];switch(attr){case"class"://ie下要这样赋值，setAttribute不起作用\nnode.className=value;break;case"style":node.style.cssText=node.style.cssText+";"+value;break;case"innerHTML":node[attr]=value;break;case"value":node.value=value;break;default:node.setAttribute(attrFix[attr]||attr,value);}}}return node;},/**\n     * 获取元素element经过计算后的样式值\n     * @method getComputedStyle\n     * @param { Element } element 需要获取样式的元素对象\n     * @param { String } styleName 需要获取的样式名\n     * @return { String } 获取到的样式值\n     * @example\n     * ```html\n     * <style type="text/css">\n     *      #test {\n     *          font-size: 15px;\n     *      }\n     * </style>\n     *\n     * <span id="test"></span>\n     *\n     * <script>\n     *     //output: 15px\n     *     console.log( UE.dom.domUtils.getComputedStyle( document.getElementById( "test" ), \'font-size\' ) );\n     * <\/script>\n     * ```\n     */getComputedStyle:function getComputedStyle(element,styleName){//一下的属性单独处理\nvar pros="width height top left";if(pros.indexOf(styleName)>-1){return element["offset"+styleName.replace(/^\\w/,function(s){return s.toUpperCase();})]+"px";}//忽略文本节点\nif(element.nodeType==3){element=element.parentNode;}//ie下font-size若body下定义了font-size，则从currentStyle里会取到这个font-size. 取不到实际值，故此修改.\nif(browser.ie&&browser.version<9&&styleName=="font-size"&&!element.style.fontSize&&!dtd.$empty[element.tagName]&&!dtd.$nonChild[element.tagName]){var span=element.ownerDocument.createElement("span");span.style.cssText="padding:0;border:0;font-family:simsun;";span.innerHTML=".";element.appendChild(span);var result=span.offsetHeight;element.removeChild(span);span=null;return result+"px";}try{var value=domUtils.getStyle(element,styleName)||(window.getComputedStyle?domUtils.getWindow(element).getComputedStyle(element,"").getPropertyValue(styleName):(element.currentStyle||element.style)[utils.cssStyleToDomStyle(styleName)]);}catch(e){return"";}return utils.transUnitToPx(utils.fixColor(styleName,value));},/**\n     * 删除元素element指定的className\n     * @method removeClasses\n     * @param { Element } ele 需要删除class的元素节点\n     * @param { String } classNames 需要删除的className， 多个className之间以空格分开\n     * @example\n     * ```html\n     * <span id="test" class="test1 test2 test3">xxx</span>\n     *\n     * <script>\n     *\n     *     var testNode = document.getElementById( "test" );\n     *     UE.dom.domUtils.removeClasses( testNode, "test1 test2" );\n     *\n     *     //output: test3\n     *     console.log( testNode.className );\n     *\n     * <\/script>\n     * ```\n     *//**\n     * 删除元素element指定的className\n     * @method removeClasses\n     * @param { Element } ele 需要删除class的元素节点\n     * @param { Array } classNames 需要删除的className数组\n     * @example\n     * ```html\n     * <span id="test" class="test1 test2 test3">xxx</span>\n     *\n     * <script>\n     *\n     *     var testNode = document.getElementById( "test" );\n     *     UE.dom.domUtils.removeClasses( testNode, ["test1", "test2"] );\n     *\n     *     //output: test3\n     *     console.log( testNode.className );\n     *\n     * <\/script>\n     * ```\n     */removeClasses:function removeClasses(elm,classNames){classNames=utils.isArray(classNames)?classNames:utils.trim(classNames).replace(/[ ]{2,}/g," ").split(" ");for(var i=0,ci,cls=elm.className;ci=classNames[i++];){cls=cls.replace(new RegExp("\\\\b"+ci+"\\\\b"),"");}cls=utils.trim(cls).replace(/[ ]{2,}/g," ");if(cls){elm.className=cls;}else{domUtils.removeAttributes(elm,["class"]);}},/**\n     * 给元素element添加className\n     * @method addClass\n     * @param { Node } ele 需要增加className的元素\n     * @param { String } classNames 需要添加的className， 多个className之间以空格分割\n     * @remind 相同的类名不会被重复添加\n     * @example\n     * ```html\n     * <span id="test" class="cls1 cls2"></span>\n     *\n     * <script>\n     *     var testNode = document.getElementById("test");\n     *\n     *     UE.dom.domUtils.addClass( testNode, "cls2 cls3 cls4" );\n     *\n     *     //output: cl1 cls2 cls3 cls4\n     *     console.log( testNode.className );\n     *\n     * <script>\n     * ```\n     *//**\n     * 给元素element添加className\n     * @method addClass\n     * @param { Node } ele 需要增加className的元素\n     * @param { Array } classNames 需要添加的className的数组\n     * @remind 相同的类名不会被重复添加\n     * @example\n     * ```html\n     * <span id="test" class="cls1 cls2"></span>\n     *\n     * <script>\n     *     var testNode = document.getElementById("test");\n     *\n     *     UE.dom.domUtils.addClass( testNode, ["cls2", "cls3", "cls4"] );\n     *\n     *     //output: cl1 cls2 cls3 cls4\n     *     console.log( testNode.className );\n     *\n     * <script>\n     * ```\n     */addClass:function addClass(elm,classNames){if(!elm)return;classNames=utils.trim(classNames).replace(/[ ]{2,}/g," ").split(" ");for(var i=0,ci,cls=elm.className;ci=classNames[i++];){if(!new RegExp("\\\\b"+ci+"\\\\b").test(cls)){cls+=" "+ci;}}elm.className=utils.trim(cls);},/**\n     * 判断元素element是否包含给定的样式类名className\n     * @method hasClass\n     * @param { Node } ele 需要检测的元素\n     * @param { String } classNames 需要检测的className， 多个className之间用空格分割\n     * @return { Boolean } 元素是否包含所有给定的className\n     * @example\n     * ```html\n     * <span id="test1" class="cls1 cls2"></span>\n     *\n     * <script>\n     *     var test1 = document.getElementById("test1");\n     *\n     *     //output: false\n     *     console.log( UE.dom.domUtils.hasClass( test1, "cls2 cls1 cls3" ) );\n     *\n     *     //output: true\n     *     console.log( UE.dom.domUtils.hasClass( test1, "cls2 cls1" ) );\n     * <\/script>\n     * ```\n     *//**\n     * 判断元素element是否包含给定的样式类名className\n     * @method hasClass\n     * @param { Node } ele 需要检测的元素\n     * @param { Array } classNames 需要检测的className数组\n     * @return { Boolean } 元素是否包含所有给定的className\n     * @example\n     * ```html\n     * <span id="test1" class="cls1 cls2"></span>\n     *\n     * <script>\n     *     var test1 = document.getElementById("test1");\n     *\n     *     //output: false\n     *     console.log( UE.dom.domUtils.hasClass( test1, [ "cls2", "cls1", "cls3" ] ) );\n     *\n     *     //output: true\n     *     console.log( UE.dom.domUtils.hasClass( test1, [ "cls2", "cls1" ]) );\n     * <\/script>\n     * ```\n     */hasClass:function hasClass(element,className){if(utils.isRegExp(className)){return className.test(element.className);}className=utils.trim(className).replace(/[ ]{2,}/g," ").split(" ");for(var i=0,ci,cls=element.className;ci=className[i++];){if(!new RegExp("\\\\b"+ci+"\\\\b","i").test(cls)){return false;}}return i-1==className.length;},/**\n     * 阻止事件默认行为\n     * @method preventDefault\n     * @param { Event } evt 需要阻止默认行为的事件对象\n     * @example\n     * ```javascript\n     * UE.dom.domUtils.preventDefault( evt );\n     * ```\n     */preventDefault:function preventDefault(evt){evt.preventDefault?evt.preventDefault():evt.returnValue=false;},/**\n     * 删除元素element指定的样式\n     * @method removeStyle\n     * @param { Element } element 需要删除样式的元素\n     * @param { String } styleName 需要删除的样式名\n     * @example\n     * ```html\n     * <span id="test" style="color: red; background: blue;"></span>\n     *\n     * <script>\n     *\n     *     var testNode = document.getElementById("test");\n     *\n     *     UE.dom.domUtils.removeStyle( testNode, \'color\' );\n     *\n     *     //output: background: blue;\n     *     console.log( testNode.style.cssText );\n     *\n     * <\/script>\n     * ```\n     */removeStyle:function removeStyle(element,name){if(browser.ie){//针对color先单独处理一下\nif(name=="color"){name="(^|;)"+name;}element.style.cssText=element.style.cssText.replace(new RegExp(name+"[^:]*:[^;]+;?","ig"),"");}else{if(element.style.removeProperty){element.style.removeProperty(name);}else{element.style.removeAttribute(utils.cssStyleToDomStyle(name));}}if(!element.style.cssText){domUtils.removeAttributes(element,["style"]);}},/**\n     * 获取元素element的style属性的指定值\n     * @method getStyle\n     * @param { Element } element 需要获取属性值的元素\n     * @param { String } styleName 需要获取的style的名称\n     * @warning 该方法仅获取元素style属性中所标明的值\n     * @return { String } 该元素包含指定的style属性值\n     * @example\n     * ```html\n     * <div id="test" style="color: red;"></div>\n     *\n     * <script>\n     *\n     *      var testNode = document.getElementById( "test" );\n     *\n     *      //output: red\n     *      console.log( UE.dom.domUtils.getStyle( testNode, "color" ) );\n     *\n     *      //output: ""\n     *      console.log( UE.dom.domUtils.getStyle( testNode, "background" ) );\n     *\n     * <\/script>\n     * ```\n     */getStyle:function getStyle(element,name){var value=element.style[utils.cssStyleToDomStyle(name)];return utils.fixColor(name,value);},/**\n     * 为元素element设置样式属性值\n     * @method setStyle\n     * @param { Element } element 需要设置样式的元素\n     * @param { String } styleName 样式名\n     * @param { String } styleValue 样式值\n     * @example\n     * ```html\n     * <div id="test"></div>\n     *\n     * <script>\n     *\n     *      var testNode = document.getElementById( "test" );\n     *\n     *      //output: ""\n     *      console.log( testNode.style.color );\n     *\n     *      UE.dom.domUtils.setStyle( testNode, \'color\', \'red\' );\n     *      //output: "red"\n     *      console.log( testNode.style.color );\n     *\n     * <\/script>\n     * ```\n     */setStyle:function setStyle(element,name,value){element.style[utils.cssStyleToDomStyle(name)]=value;if(!utils.trim(element.style.cssText)){this.removeAttributes(element,"style");}},/**\n     * 为元素element设置多个样式属性值\n     * @method setStyles\n     * @param { Element } element 需要设置样式的元素\n     * @param { Object } styles 样式名值对\n     * @example\n     * ```html\n     * <div id="test"></div>\n     *\n     * <script>\n     *\n     *      var testNode = document.getElementById( "test" );\n     *\n     *      //output: ""\n     *      console.log( testNode.style.color );\n     *\n     *      UE.dom.domUtils.setStyles( testNode, {\n     *          \'color\': \'red\'\n     *      } );\n     *      //output: "red"\n     *      console.log( testNode.style.color );\n     *\n     * <\/script>\n     * ```\n     */setStyles:function setStyles(element,styles){for(var name in styles){if(styles.hasOwnProperty(name)){domUtils.setStyle(element,name,styles[name]);}}},/**\n     * 删除_moz_dirty属性\n     * @private\n     * @method removeDirtyAttr\n     */removeDirtyAttr:function removeDirtyAttr(node){for(var i=0,ci,nodes=node.getElementsByTagName("*");ci=nodes[i++];){ci.removeAttribute("_moz_dirty");}node.removeAttribute("_moz_dirty");},/**\n     * 获取子节点的数量\n     * @method getChildCount\n     * @param { Element } node 需要检测的元素\n     * @return { Number } 给定的node元素的子节点数量\n     * @example\n     * ```html\n     * <div id="test">\n     *      <span></span>\n     * </div>\n     *\n     * <script>\n     *\n     *     //output: 3\n     *     console.log( UE.dom.domUtils.getChildCount( document.getElementById("test") ) );\n     *\n     * <\/script>\n     * ```\n     *//**\n     * 根据给定的过滤规则， 获取符合条件的子节点的数量\n     * @method getChildCount\n     * @param { Element } node 需要检测的元素\n     * @param { Function } fn 过滤器， 要求对符合条件的子节点返回true， 反之则要求返回false\n     * @return { Number } 符合过滤条件的node元素的子节点数量\n     * @example\n     * ```html\n     * <div id="test">\n     *      <span></span>\n     * </div>\n     *\n     * <script>\n     *\n     *     //output: 1\n     *     console.log( UE.dom.domUtils.getChildCount( document.getElementById("test"), function ( node ) {\n     *\n     *         return node.nodeType === 1;\n     *\n     *     } ) );\n     *\n     * <\/script>\n     * ```\n     */getChildCount:function getChildCount(node,fn){var count=0,first=node.firstChild;fn=fn||function(){return 1;};while(first){if(fn(first)){count++;}first=first.nextSibling;}return count;},/**\n     * 判断给定节点是否为空节点\n     * @method isEmptyNode\n     * @param { Node } node 需要检测的节点对象\n     * @return { Boolean } 节点是否为空\n     * @example\n     * ```javascript\n     * UE.dom.domUtils.isEmptyNode( document.body );\n     * ```\n     */isEmptyNode:function isEmptyNode(node){return!node.firstChild||domUtils.getChildCount(node,function(node){return!domUtils.isBr(node)&&!domUtils.isBookmarkNode(node)&&!domUtils.isWhitespace(node);})==0;},clearSelectedArr:function clearSelectedArr(nodes){var node;while(node=nodes.pop()){domUtils.removeAttributes(node,["class"]);}},/**\n     * 将显示区域滚动到指定节点的位置\n     * @method scrollToView\n     * @param    {Node}   node    节点\n     * @param    {window}   win      window对象\n     * @param    {Number}    offsetTop    距离上方的偏移量\n     */scrollToView:function scrollToView(node,win,offsetTop){var getViewPaneSize=function getViewPaneSize(){var doc=win.document,mode=doc.compatMode=="CSS1Compat";return{width:(mode?doc.documentElement.clientWidth:doc.body.clientWidth)||0,height:(mode?doc.documentElement.clientHeight:doc.body.clientHeight)||0};},getScrollPosition=function getScrollPosition(win){if("pageXOffset"in win){return{x:win.pageXOffset||0,y:win.pageYOffset||0};}else{var doc=win.document;return{x:doc.documentElement.scrollLeft||doc.body.scrollLeft||0,y:doc.documentElement.scrollTop||doc.body.scrollTop||0};}};var winHeight=getViewPaneSize().height,offset=winHeight*-1+offsetTop;offset+=node.offsetHeight||0;var elementPosition=domUtils.getXY(node);offset+=elementPosition.y;var currentScroll=getScrollPosition(win).y;// offset += 50;\nif(offset>currentScroll||offset<currentScroll-winHeight){win.scrollTo(0,offset+(offset<0?-20:20));}},/**\n     * 判断给定节点是否为br\n     * @method isBr\n     * @param { Node } node 需要判断的节点对象\n     * @return { Boolean } 给定的节点是否是br节点\n     */isBr:function isBr(node){return node.nodeType==1&&node.tagName=="BR";},/**\n     * 判断给定的节点是否是一个“填充”节点\n     * @private\n     * @method isFillChar\n     * @param { Node } node 需要判断的节点\n     * @param { Boolean } isInStart 是否从节点内容的开始位置匹配\n     * @returns { Boolean } 节点是否是填充节点\n     */isFillChar:function isFillChar(node,isInStart){if(node.nodeType!=3)return false;var text=node.nodeValue;if(isInStart){return new RegExp("^"+domUtils.fillChar).test(text);}return!text.replace(new RegExp(domUtils.fillChar,"g"),"").length;},isStartInblock:function isStartInblock(range){var tmpRange=range.cloneRange(),flag=0,start=tmpRange.startContainer,tmp;if(start.nodeType==1&&start.childNodes[tmpRange.startOffset]){start=start.childNodes[tmpRange.startOffset];var pre=start.previousSibling;while(pre&&domUtils.isFillChar(pre)){start=pre;pre=pre.previousSibling;}}if(this.isFillChar(start,true)&&tmpRange.startOffset==1){tmpRange.setStartBefore(start);start=tmpRange.startContainer;}while(start&&domUtils.isFillChar(start)){tmp=start;start=start.previousSibling;}if(tmp){tmpRange.setStartBefore(tmp);start=tmpRange.startContainer;}if(start.nodeType==1&&domUtils.isEmptyNode(start)&&tmpRange.startOffset==1){tmpRange.setStart(start,0).collapse(true);}while(!tmpRange.startOffset){start=tmpRange.startContainer;if(domUtils.isBlockElm(start)||domUtils.isBody(start)){flag=1;break;}var pre=tmpRange.startContainer.previousSibling,tmpNode;if(!pre){tmpRange.setStartBefore(tmpRange.startContainer);}else{while(pre&&domUtils.isFillChar(pre)){tmpNode=pre;pre=pre.previousSibling;}if(tmpNode){tmpRange.setStartBefore(tmpNode);}else{tmpRange.setStartBefore(tmpRange.startContainer);}}}return flag&&!domUtils.isBody(tmpRange.startContainer)?1:0;},/**\n     * 判断给定的元素是否是一个空元素\n     * @method isEmptyBlock\n     * @param { Element } node 需要判断的元素\n     * @return { Boolean } 是否是空元素\n     * @example\n     * ```html\n     * <div id="test"></div>\n     *\n     * <script>\n     *     //output: true\n     *     console.log( UE.dom.domUtils.isEmptyBlock( document.getElementById("test") ) );\n     * <\/script>\n     * ```\n     *//**\n     * 根据指定的判断规则判断给定的元素是否是一个空元素\n     * @method isEmptyBlock\n     * @param { Element } node 需要判断的元素\n     * @param { RegExp } reg 对内容执行判断的正则表达式对象\n     * @return { Boolean } 是否是空元素\n     */isEmptyBlock:function isEmptyBlock(node,reg){if(node.nodeType!=1)return 0;reg=reg||new RegExp("[ \\xa0\\t\\r\\n"+domUtils.fillChar+"]","g");if(node[browser.ie?"innerText":"textContent"].replace(reg,"").length>0){return 0;}for(var n in dtd.$isNotEmpty){if(node.getElementsByTagName(n).length){return 0;}}return 1;},/**\n     * 移动元素使得该元素的位置移动指定的偏移量的距离\n     * @method setViewportOffset\n     * @param { Element } element 需要设置偏移量的元素\n     * @param { Object } offset 偏移量， 形如{ left: 100, top: 50 }的一个键值对， 表示该元素将在\n     *                                  现有的位置上向水平方向偏移offset.left的距离， 在竖直方向上偏移\n     *                                  offset.top的距离\n     * @example\n     * ```html\n     * <div id="test" style="top: 100px; left: 50px; position: absolute;"></div>\n     *\n     * <script>\n     *\n     *     var testNode = document.getElementById("test");\n     *\n     *     UE.dom.domUtils.setViewportOffset( testNode, {\n     *         left: 200,\n     *         top: 50\n     *     } );\n     *\n     *     //output: top: 300px; left: 100px; position: absolute;\n     *     console.log( testNode.style.cssText );\n     *\n     * <\/script>\n     * ```\n     */setViewportOffset:function setViewportOffset(element,offset){var left=parseInt(element.style.left)|0;var top=parseInt(element.style.top)|0;var rect=element.getBoundingClientRect();var offsetLeft=offset.left-rect.left;var offsetTop=offset.top-rect.top;if(offsetLeft){element.style.left=left+offsetLeft+"px";}if(offsetTop){element.style.top=top+offsetTop+"px";}},/**\n     * 用“填充字符”填充节点\n     * @method fillNode\n     * @private\n     * @param { DomDocument } doc 填充的节点所在的docment对象\n     * @param { Node } node 需要填充的节点对象\n     * @example\n     * ```html\n     * <div id="test"></div>\n     *\n     * <script>\n     *     var testNode = document.getElementById("test");\n     *\n     *     //output: 0\n     *     console.log( testNode.childNodes.length );\n     *\n     *     UE.dom.domUtils.fillNode( document, testNode );\n     *\n     *     //output: 1\n     *     console.log( testNode.childNodes.length );\n     *\n     * <\/script>\n     * ```\n     */fillNode:function fillNode(doc,node){var tmpNode=browser.ie?doc.createTextNode(domUtils.fillChar):doc.createElement("br");node.innerHTML="";node.appendChild(tmpNode);},/**\n     * 把节点src的所有子节点追加到另一个节点tag上去\n     * @method moveChild\n     * @param { Node } src 源节点， 该节点下的所有子节点将被移除\n     * @param { Node } tag 目标节点， 从源节点移除的子节点将被追加到该节点下\n     * @example\n     * ```html\n     * <div id="test1">\n     *      <span></span>\n     * </div>\n     * <div id="test2">\n     *     <div></div>\n     * </div>\n     *\n     * <script>\n     *\n     *     var test1 = document.getElementById("test1"),\n     *         test2 = document.getElementById("test2");\n     *\n     *     UE.dom.domUtils.moveChild( test1, test2 );\n     *\n     *     //output: ""（空字符串）\n     *     console.log( test1.innerHTML );\n     *\n     *     //output: "<div></div><span></span>"\n     *     console.log( test2.innerHTML );\n     *\n     * <\/script>\n     * ```\n     *//**\n     * 把节点src的所有子节点移动到另一个节点tag上去, 可以通过dir参数控制附加的行为是“追加”还是“插入顶部”\n     * @method moveChild\n     * @param { Node } src 源节点， 该节点下的所有子节点将被移除\n     * @param { Node } tag 目标节点， 从源节点移除的子节点将被附加到该节点下\n     * @param { Boolean } dir 附加方式， 如果为true， 则附加进去的节点将被放到目标节点的顶部， 反之，则放到末尾\n     * @example\n     * ```html\n     * <div id="test1">\n     *      <span></span>\n     * </div>\n     * <div id="test2">\n     *     <div></div>\n     * </div>\n     *\n     * <script>\n     *\n     *     var test1 = document.getElementById("test1"),\n     *         test2 = document.getElementById("test2");\n     *\n     *     UE.dom.domUtils.moveChild( test1, test2, true );\n     *\n     *     //output: ""（空字符串）\n     *     console.log( test1.innerHTML );\n     *\n     *     //output: "<span></span><div></div>"\n     *     console.log( test2.innerHTML );\n     *\n     * <\/script>\n     * ```\n     */moveChild:function moveChild(src,tag,dir){while(src.firstChild){if(dir&&tag.firstChild){tag.insertBefore(src.lastChild,tag.firstChild);}else{tag.appendChild(src.firstChild);}}},/**\n     * 判断节点的标签上是否不存在任何属性\n     * @method hasNoAttributes\n     * @private\n     * @param { Node } node 需要检测的节点对象\n     * @return { Boolean } 节点是否不包含任何属性\n     * @example\n     * ```html\n     * <div id="test"><span>xxxx</span></div>\n     *\n     * <script>\n     *\n     *     //output: false\n     *     console.log( UE.dom.domUtils.hasNoAttributes( document.getElementById("test") ) );\n     *\n     *     //output: true\n     *     console.log( UE.dom.domUtils.hasNoAttributes( document.getElementById("test").firstChild ) );\n     *\n     * <\/script>\n     * ```\n     */hasNoAttributes:function hasNoAttributes(node){return browser.ie?/^<\\w+\\s*?>/.test(node.outerHTML):node.attributes.length==0;},/**\n     * 检测节点是否是UEditor所使用的辅助节点\n     * @method isCustomeNode\n     * @private\n     * @param { Node } node 需要检测的节点\n     * @remind 辅助节点是指编辑器要完成工作临时添加的节点， 在输出的时候将会从编辑器内移除， 不会影响最终的结果。\n     * @return { Boolean } 给定的节点是否是一个辅助节点\n     */isCustomeNode:function isCustomeNode(node){return node.nodeType==1&&node.getAttribute("_ue_custom_node_");},/**\n     * 检测节点的标签是否是给定的标签\n     * @method isTagNode\n     * @param { Node } node 需要检测的节点对象\n     * @param { String } tagName 标签\n     * @return { Boolean } 节点的标签是否是给定的标签\n     * @example\n     * ```html\n     * <div id="test"></div>\n     *\n     * <script>\n     *\n     *     //output: true\n     *     console.log( UE.dom.domUtils.isTagNode( document.getElementById("test"), "div" ) );\n     *\n     * <\/script>\n     * ```\n     */isTagNode:function isTagNode(node,tagNames){return node.nodeType==1&&new RegExp("\\\\b"+node.tagName+"\\\\b","i").test(tagNames);},/**\n     * 给定一个节点数组，在通过指定的过滤器过滤后， 获取其中满足过滤条件的第一个节点\n     * @method filterNodeList\n     * @param { Array } nodeList 需要过滤的节点数组\n     * @param { Function } fn 过滤器， 对符合条件的节点， 执行结果返回true， 反之则返回false\n     * @return { Node | NULL } 如果找到符合过滤条件的节点， 则返回该节点， 否则返回NULL\n     * @example\n     * ```javascript\n     * var divNodes = document.getElementsByTagName("div");\n     * divNodes = [].slice.call( divNodes, 0 );\n     *\n     * //output: null\n     * console.log( UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {\n     *     return node.tagName.toLowerCase() !== \'div\';\n     * } ) );\n     * ```\n     *//**\n     * 给定一个节点数组nodeList和一组标签名tagNames， 获取其中能够匹配标签名的节点集合中的第一个节点\n     * @method filterNodeList\n     * @param { Array } nodeList 需要过滤的节点数组\n     * @param { String } tagNames 需要匹配的标签名， 多个标签名之间用空格分割\n     * @return { Node | NULL } 如果找到标签名匹配的节点， 则返回该节点， 否则返回NULL\n     * @example\n     * ```javascript\n     * var divNodes = document.getElementsByTagName("div");\n     * divNodes = [].slice.call( divNodes, 0 );\n     *\n     * //output: null\n     * console.log( UE.dom.domUtils.filterNodeList( divNodes, \'a span\' ) );\n     * ```\n     *//**\n     * 给定一个节点数组，在通过指定的过滤器过滤后， 如果参数forAll为true， 则会返回所有满足过滤\n     * 条件的节点集合， 否则， 返回满足条件的节点集合中的第一个节点\n     * @method filterNodeList\n     * @param { Array } nodeList 需要过滤的节点数组\n     * @param { Function } fn 过滤器， 对符合条件的节点， 执行结果返回true， 反之则返回false\n     * @param { Boolean } forAll 是否返回整个节点数组, 如果该参数为false， 则返回节点集合中的第一个节点\n     * @return { Array | Node | NULL } 如果找到符合过滤条件的节点， 则根据参数forAll的值决定返回满足\n     *                                      过滤条件的节点数组或第一个节点， 否则返回NULL\n     * @example\n     * ```javascript\n     * var divNodes = document.getElementsByTagName("div");\n     * divNodes = [].slice.call( divNodes, 0 );\n     *\n     * //output: 3（假定有3个div）\n     * console.log( divNodes.length );\n     *\n     * var nodes = UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {\n     *     return node.tagName.toLowerCase() === \'div\';\n     * }, true );\n     *\n     * //output: 3\n     * console.log( nodes.length );\n     *\n     * var node = UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {\n     *     return node.tagName.toLowerCase() === \'div\';\n     * }, false );\n     *\n     * //output: div\n     * console.log( node.nodeName );\n     * ```\n     */filterNodeList:function filterNodeList(nodelist,filter,forAll){var results=[];if(!utils.isFunction(filter)){var str=filter;filter=function filter(n){return utils.indexOf(utils.isArray(str)?str:str.split(" "),n.tagName.toLowerCase())!=-1;};}utils.each(nodelist,function(n){filter(n)&&results.push(n);});return results.length==0?null:results.length==1||!forAll?results[0]:results;},/**\n     * 查询给定的range选区是否在给定的node节点内，且在该节点的最末尾\n     * @method isInNodeEndBoundary\n     * @param { UE.dom.Range } rng 需要判断的range对象， 该对象的startContainer不能为NULL\n     * @param node 需要检测的节点对象\n     * @return { Number } 如果给定的选取range对象是在node内部的最末端， 则返回1, 否则返回0\n     */isInNodeEndBoundary:function isInNodeEndBoundary(rng,node){var start=rng.startContainer;if(start.nodeType==3&&rng.startOffset!=start.nodeValue.length){return 0;}if(start.nodeType==1&&rng.startOffset!=start.childNodes.length){return 0;}while(start!==node){if(start.nextSibling){return 0;}start=start.parentNode;}return 1;},isBoundaryNode:function isBoundaryNode(node,dir){var tmp;while(!domUtils.isBody(node)){tmp=node;node=node.parentNode;if(tmp!==node[dir]){return false;}}return true;},fillHtml:browser.ie11below?"&nbsp;":"<br/>"};var fillCharReg=new RegExp(domUtils.fillChar,"g");// core/Range.js\n/**\n * Range封装\n * @file\n * @module UE.dom\n * @class Range\n * @since 1.2.6.1\n *//**\n * dom操作封装\n * @unfile\n * @module UE.dom\n *//**\n * Range实现类，本类是UEditor底层核心类，封装不同浏览器之间的Range操作。\n * @unfile\n * @module UE.dom\n * @class Range\n */(function(){var guid=0,fillChar=domUtils.fillChar,fillData;/**\n     * 更新range的collapse状态\n     * @param  {Range}   range    range对象\n     */function updateCollapse(range){range.collapsed=range.startContainer&&range.endContainer&&range.startContainer===range.endContainer&&range.startOffset==range.endOffset;}function selectOneNode(rng){return!rng.collapsed&&rng.startContainer.nodeType==1&&rng.startContainer===rng.endContainer&&rng.endOffset-rng.startOffset==1;}function setEndPoint(toStart,node,offset,range){//如果node是自闭合标签要处理\nif(node.nodeType==1&&(dtd.$empty[node.tagName]||dtd.$nonChild[node.tagName])){offset=domUtils.getNodeIndex(node)+(toStart?0:1);node=node.parentNode;}if(toStart){range.startContainer=node;range.startOffset=offset;if(!range.endContainer){range.collapse(true);}}else{range.endContainer=node;range.endOffset=offset;if(!range.startContainer){range.collapse(false);}}updateCollapse(range);return range;}function execContentsAction(range,action){//调整边界\n//range.includeBookmark();\nvar start=range.startContainer,end=range.endContainer,startOffset=range.startOffset,endOffset=range.endOffset,doc=range.document,frag=doc.createDocumentFragment(),tmpStart,tmpEnd;if(start.nodeType==1){start=start.childNodes[startOffset]||(tmpStart=start.appendChild(doc.createTextNode("")));}if(end.nodeType==1){end=end.childNodes[endOffset]||(tmpEnd=end.appendChild(doc.createTextNode("")));}if(start===end&&start.nodeType==3){frag.appendChild(doc.createTextNode(start.substringData(startOffset,endOffset-startOffset)));//is not clone\nif(action){start.deleteData(startOffset,endOffset-startOffset);range.collapse(true);}return frag;}var current,currentLevel,clone=frag,startParents=domUtils.findParents(start,true),endParents=domUtils.findParents(end,true);for(var i=0;startParents[i]==endParents[i];){i++;}for(var j=i,si;si=startParents[j];j++){current=si.nextSibling;if(si==start){if(!tmpStart){if(range.startContainer.nodeType==3){clone.appendChild(doc.createTextNode(start.nodeValue.slice(startOffset)));//is not clone\nif(action){start.deleteData(startOffset,start.nodeValue.length-startOffset);}}else{clone.appendChild(!action?start.cloneNode(true):start);}}}else{currentLevel=si.cloneNode(false);clone.appendChild(currentLevel);}while(current){if(current===end||current===endParents[j]){break;}si=current.nextSibling;clone.appendChild(!action?current.cloneNode(true):current);current=si;}clone=currentLevel;}clone=frag;if(!startParents[i]){clone.appendChild(startParents[i-1].cloneNode(false));clone=clone.firstChild;}for(var j=i,ei;ei=endParents[j];j++){current=ei.previousSibling;if(ei==end){if(!tmpEnd&&range.endContainer.nodeType==3){clone.appendChild(doc.createTextNode(end.substringData(0,endOffset)));//is not clone\nif(action){end.deleteData(0,endOffset);}}}else{currentLevel=ei.cloneNode(false);clone.appendChild(currentLevel);}//如果两端同级，右边第一次已经被开始做了\nif(j!=i||!startParents[i]){while(current){if(current===start){break;}ei=current.previousSibling;clone.insertBefore(!action?current.cloneNode(true):current,clone.firstChild);current=ei;}}clone=currentLevel;}if(action){range.setStartBefore(!endParents[i]?endParents[i-1]:!startParents[i]?startParents[i-1]:endParents[i]).collapse(true);}tmpStart&&domUtils.remove(tmpStart);tmpEnd&&domUtils.remove(tmpEnd);return frag;}/**\n     * 创建一个跟document绑定的空的Range实例\n     * @constructor\n     * @param { Document } document 新建的选区所属的文档对象\n     *//**\n     * @property { Node } startContainer 当前Range的开始边界的容器节点, 可以是一个元素节点或者是文本节点\n     *//**\n     * @property { Node } startOffset 当前Range的开始边界容器节点的偏移量, 如果是元素节点，\n     *                              该值就是childNodes中的第几个节点， 如果是文本节点就是文本内容的第几个字符\n     *//**\n     * @property { Node } endContainer 当前Range的结束边界的容器节点, 可以是一个元素节点或者是文本节点\n     *//**\n     * @property { Node } endOffset 当前Range的结束边界容器节点的偏移量, 如果是元素节点，\n     *                              该值就是childNodes中的第几个节点， 如果是文本节点就是文本内容的第几个字符\n     *//**\n     * @property { Boolean } collapsed 当前Range是否闭合\n     * @default true\n     * @remind Range是闭合的时候， startContainer === endContainer && startOffset === endOffset\n     *//**\n     * @property { Document } document 当前Range所属的Document对象\n     * @remind 不同range的的document属性可以是不同的\n     */var Range=dom.Range=function(document){var me=this;me.startContainer=me.startOffset=me.endContainer=me.endOffset=null;me.document=document;me.collapsed=true;};/**\n     * 删除fillData\n     * @param doc\n     * @param excludeNode\n     */function removeFillData(doc,excludeNode){try{if(fillData&&domUtils.inDoc(fillData,doc)){if(!fillData.nodeValue.replace(fillCharReg,"").length){var tmpNode=fillData.parentNode;domUtils.remove(fillData);while(tmpNode&&domUtils.isEmptyInlineElement(tmpNode)&&(//safari的contains有bug\nbrowser.safari?!(domUtils.getPosition(tmpNode,excludeNode)&domUtils.POSITION_CONTAINS):!tmpNode.contains(excludeNode))){fillData=tmpNode.parentNode;domUtils.remove(tmpNode);tmpNode=fillData;}}else{fillData.nodeValue=fillData.nodeValue.replace(fillCharReg,"");}}}catch(e){}}/**\n     * @param node\n     * @param dir\n     */function mergeSibling(node,dir){var tmpNode;node=node[dir];while(node&&domUtils.isFillChar(node)){tmpNode=node[dir];domUtils.remove(node);node=tmpNode;}}Range.prototype={/**\n         * 克隆选区的内容到一个DocumentFragment里\n         * @method cloneContents\n         * @return { DocumentFragment | NULL } 如果选区是闭合的将返回null， 否则， 返回包含所clone内容的DocumentFragment元素\n         * @example\n         * ```html\n         * <body>\n         *      \x3c!-- 中括号表示选区 --\x3e\n         *      <b>x<i>x[x</i>xx]x</b>\n         *\n         *      <script>\n         *          //range是已选中的选区\n         *          var fragment = range.cloneContents(),\n         *              node = document.createElement("div");\n         *\n         *          node.appendChild( fragment );\n         *\n         *          //output: <i>x</i>xx\n         *          console.log( node.innerHTML );\n         *\n         *      <\/script>\n         * </body>\n         * ```\n         */cloneContents:function cloneContents(){return this.collapsed?null:execContentsAction(this,0);},/**\n         * 删除当前选区范围中的所有内容\n         * @method deleteContents\n         * @remind 执行完该操作后， 当前Range对象变成了闭合状态\n         * @return { UE.dom.Range } 当前操作的Range对象\n         * @example\n         * ```html\n         * <body>\n         *      \x3c!-- 中括号表示选区 --\x3e\n         *      <b>x<i>x[x</i>xx]x</b>\n         *\n         *      <script>\n         *          //range是已选中的选区\n         *          range.deleteContents();\n         *\n         *          //竖线表示闭合后的选区位置\n         *          //output: <b>x<i>x</i>|x</b>\n         *          console.log( document.body.innerHTML );\n         *\n         *          //此时， range的各项属性为\n         *          //output: B\n         *          console.log( range.startContainer.tagName );\n         *          //output: 2\n         *          console.log( range.startOffset );\n         *          //output: B\n         *          console.log( range.endContainer.tagName );\n         *          //output: 2\n         *          console.log( range.endOffset );\n         *          //output: true\n         *          console.log( range.collapsed );\n         *\n         *      <\/script>\n         * </body>\n         * ```\n         */deleteContents:function deleteContents(){var txt;if(!this.collapsed){execContentsAction(this,1);}if(browser.webkit){txt=this.startContainer;if(txt.nodeType==3&&!txt.nodeValue.length){this.setStartBefore(txt).collapse(true);domUtils.remove(txt);}}return this;},/**\n         * 将当前选区的内容提取到一个DocumentFragment里\n         * @method extractContents\n         * @remind 执行该操作后， 选区将变成闭合状态\n         * @warning 执行该操作后， 原来选区所选中的内容将从dom树上剥离出来\n         * @return { DocumentFragment } 返回包含所提取内容的DocumentFragment对象\n         * @example\n         * ```html\n         * <body>\n         *      \x3c!-- 中括号表示选区 --\x3e\n         *      <b>x<i>x[x</i>xx]x</b>\n         *\n         *      <script>\n         *          //range是已选中的选区\n         *          var fragment = range.extractContents(),\n         *              node = document.createElement( "div" );\n         *\n         *          node.appendChild( fragment );\n         *\n         *          //竖线表示闭合后的选区位置\n         *\n         *          //output: <b>x<i>x</i>|x</b>\n         *          console.log( document.body.innerHTML );\n         *          //output: <i>x</i>xx\n         *          console.log( node.innerHTML );\n         *\n         *          //此时， range的各项属性为\n         *          //output: B\n         *          console.log( range.startContainer.tagName );\n         *          //output: 2\n         *          console.log( range.startOffset );\n         *          //output: B\n         *          console.log( range.endContainer.tagName );\n         *          //output: 2\n         *          console.log( range.endOffset );\n         *          //output: true\n         *          console.log( range.collapsed );\n         *\n         *      <\/script>\n         * </body>\n         */extractContents:function extractContents(){return this.collapsed?null:execContentsAction(this,2);},/**\n         * 设置Range的开始容器节点和偏移量\n         * @method  setStart\n         * @remind 如果给定的节点是元素节点，那么offset指的是其子元素中索引为offset的元素，\n         *          如果是文本节点，那么offset指的是其文本内容的第offset个字符\n         * @remind 如果提供的容器节点是一个不能包含子元素的节点， 则该选区的开始容器将被设置\n         *          为该节点的父节点， 此时， 其距离开始容器的偏移量也变成了该节点在其父节点\n         *          中的索引\n         * @param { Node } node 将被设为当前选区开始边界容器的节点对象\n         * @param { int } offset 选区的开始位置偏移量\n         * @return { UE.dom.Range } 当前range对象\n         * @example\n         * ```html\n         * \x3c!-- 选区 --\x3e\n         * <b>xxx<i>x<span>xx</span>xx<em>xx</em>xxx</i>[xxx]</b>\n         *\n         * <script>\n         *\n         *     //执行操作\n         *     range.setStart( document.getElementsByTagName("i")[0], 1 );\n         *\n         *     //此时， 选区变成了\n         *     //<b>xxx<i>x[<span>xx</span>xx<em>xx</em>xxx</i>xxx]</b>\n         *\n         * <\/script>\n         * ```\n         * @example\n         * ```html\n         * \x3c!-- 选区 --\x3e\n         * <b>xxx<img>[xx]x</b>\n         *\n         * <script>\n         *\n         *     //执行操作\n         *     range.setStart( document.getElementsByTagName("img")[0], 3 );\n         *\n         *     //此时， 选区变成了\n         *     //<b>xxx[<img>xx]x</b>\n         *\n         * <\/script>\n         * ```\n         */setStart:function setStart(node,offset){return setEndPoint(true,node,offset,this);},/**\n         * 设置Range的结束容器和偏移量\n         * @method  setEnd\n         * @param { Node } node 作为当前选区结束边界容器的节点对象\n         * @param { int } offset 结束边界的偏移量\n         * @see UE.dom.Range:setStart(Node,int)\n         * @return { UE.dom.Range } 当前range对象\n         */setEnd:function setEnd(node,offset){return setEndPoint(false,node,offset,this);},/**\n         * 将Range开始位置设置到node节点之后\n         * @method  setStartAfter\n         * @remind 该操作将会把给定节点的父节点作为range的开始容器， 且偏移量是该节点在其父节点中的位置索引+1\n         * @param { Node } node 选区的开始边界将紧接着该节点之后\n         * @return { UE.dom.Range } 当前range对象\n         * @example\n         * ```html\n         * \x3c!-- 选区示例 --\x3e\n         * <b>xx<i>xxx</i><span>xx[x</span>xxx]</b>\n         *\n         * <script>\n         *\n         *     //执行操作\n         *     range.setStartAfter( document.getElementsByTagName("i")[0] );\n         *\n         *     //结果选区\n         *     //<b>xx<i>xxx</i>[<span>xxx</span>xxx]</b>\n         *\n         * <\/script>\n         * ```\n         */setStartAfter:function setStartAfter(node){return this.setStart(node.parentNode,domUtils.getNodeIndex(node)+1);},/**\n         * 将Range开始位置设置到node节点之前\n         * @method  setStartBefore\n         * @remind 该操作将会把给定节点的父节点作为range的开始容器， 且偏移量是该节点在其父节点中的位置索引\n         * @param { Node } node 新的选区开始位置在该节点之前\n         * @see UE.dom.Range:setStartAfter(Node)\n         * @return { UE.dom.Range } 当前range对象\n         */setStartBefore:function setStartBefore(node){return this.setStart(node.parentNode,domUtils.getNodeIndex(node));},/**\n         * 将Range结束位置设置到node节点之后\n         * @method  setEndAfter\n         * @remind 该操作将会把给定节点的父节点作为range的结束容器， 且偏移量是该节点在其父节点中的位置索引+1\n         * @param { Node } node 目标节点\n         * @see UE.dom.Range:setStartAfter(Node)\n         * @return { UE.dom.Range } 当前range对象\n         * @example\n         * ```html\n         * \x3c!-- 选区示例 --\x3e\n         * <b>[xx<i>xxx</i><span>xx]x</span>xxx</b>\n         *\n         * <script>\n         *\n         *     //执行操作\n         *     range.setStartAfter( document.getElementsByTagName("span")[0] );\n         *\n         *     //结果选区\n         *     //<b>[xx<i>xxx</i><span>xxx</span>]xxx</b>\n         *\n         * <\/script>\n         * ```\n         */setEndAfter:function setEndAfter(node){return this.setEnd(node.parentNode,domUtils.getNodeIndex(node)+1);},/**\n         * 将Range结束位置设置到node节点之前\n         * @method  setEndBefore\n         * @remind 该操作将会把给定节点的父节点作为range的结束容器， 且偏移量是该节点在其父节点中的位置索引\n         * @param { Node } node 目标节点\n         * @see UE.dom.Range:setEndAfter(Node)\n         * @return { UE.dom.Range } 当前range对象\n         */setEndBefore:function setEndBefore(node){return this.setEnd(node.parentNode,domUtils.getNodeIndex(node));},/**\n         * 设置Range的开始位置到node节点内的第一个子节点之前\n         * @method  setStartAtFirst\n         * @remind 选区的开始容器将变成给定的节点， 且偏移量为0\n         * @remind 如果给定的节点是元素节点， 则该节点必须是允许包含子节点的元素。\n         * @param { Node } node 目标节点\n         * @see UE.dom.Range:setStartBefore(Node)\n         * @return { UE.dom.Range } 当前range对象\n         * @example\n         * ```html\n         * \x3c!-- 选区示例 --\x3e\n         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n         *\n         * <script>\n         *\n         *     //执行操作\n         *     range.setStartAtFirst( document.getElementsByTagName("i")[0] );\n         *\n         *     //结果选区\n         *     //<b>xx<i>[xxx</i><span>xx]x</span>xxx</b>\n         *\n         * <\/script>\n         * ```\n         */setStartAtFirst:function setStartAtFirst(node){return this.setStart(node,0);},/**\n         * 设置Range的开始位置到node节点内的最后一个节点之后\n         * @method setStartAtLast\n         * @remind 选区的开始容器将变成给定的节点， 且偏移量为该节点的子节点数\n         * @remind 如果给定的节点是元素节点， 则该节点必须是允许包含子节点的元素。\n         * @param { Node } node 目标节点\n         * @see UE.dom.Range:setStartAtFirst(Node)\n         * @return { UE.dom.Range } 当前range对象\n         */setStartAtLast:function setStartAtLast(node){return this.setStart(node,node.nodeType==3?node.nodeValue.length:node.childNodes.length);},/**\n         * 设置Range的结束位置到node节点内的第一个节点之前\n         * @method  setEndAtFirst\n         * @param { Node } node 目标节点\n         * @remind 选区的结束容器将变成给定的节点， 且偏移量为0\n         * @remind node必须是一个元素节点， 且必须是允许包含子节点的元素。\n         * @see UE.dom.Range:setStartAtFirst(Node)\n         * @return { UE.dom.Range } 当前range对象\n         */setEndAtFirst:function setEndAtFirst(node){return this.setEnd(node,0);},/**\n         * 设置Range的结束位置到node节点内的最后一个节点之后\n         * @method  setEndAtLast\n         * @param { Node } node 目标节点\n         * @remind 选区的结束容器将变成给定的节点， 且偏移量为该节点的子节点数量\n         * @remind node必须是一个元素节点， 且必须是允许包含子节点的元素。\n         * @see UE.dom.Range:setStartAtFirst(Node)\n         * @return { UE.dom.Range } 当前range对象\n         */setEndAtLast:function setEndAtLast(node){return this.setEnd(node,node.nodeType==3?node.nodeValue.length:node.childNodes.length);},/**\n         * 选中给定节点\n         * @method  selectNode\n         * @remind 此时， 选区的开始容器和结束容器都是该节点的父节点， 其startOffset是该节点在父节点中的位置索引，\n         *          而endOffset为startOffset+1\n         * @param { Node } node 需要选中的节点\n         * @return { UE.dom.Range } 当前range对象，此时的range仅包含当前给定的节点对象\n         * @example\n         * ```html\n         * \x3c!-- 选区示例 --\x3e\n         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n         *\n         * <script>\n         *\n         *     //执行操作\n         *     range.selectNode( document.getElementsByTagName("i")[0] );\n         *\n         *     //结果选区\n         *     //<b>xx[<i>xxx</i>]<span>xxx</span>xxx</b>\n         *\n         * <\/script>\n         * ```\n         */selectNode:function selectNode(node){return this.setStartBefore(node).setEndAfter(node);},/**\n         * 选中给定节点内部的所有节点\n         * @method  selectNodeContents\n         * @remind 此时， 选区的开始容器和结束容器都是该节点， 其startOffset为0，\n         *          而endOffset是该节点的子节点数。\n         * @param { Node } node 目标节点， 当前range将包含该节点内的所有节点\n         * @return { UE.dom.Range } 当前range对象， 此时range仅包含给定节点的所有子节点\n         * @example\n         * ```html\n         * \x3c!-- 选区示例 --\x3e\n         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n         *\n         * <script>\n         *\n         *     //执行操作\n         *     range.selectNode( document.getElementsByTagName("b")[0] );\n         *\n         *     //结果选区\n         *     //<b>[xx<i>xxx</i><span>xxx</span>xxx]</b>\n         *\n         * <\/script>\n         * ```\n         */selectNodeContents:function selectNodeContents(node){return this.setStart(node,0).setEndAtLast(node);},/**\n         * clone当前Range对象\n         * @method  cloneRange\n         * @remind 返回的range是一个全新的range对象， 其内部所有属性与当前被clone的range相同。\n         * @return { UE.dom.Range } 当前range对象的一个副本\n         */cloneRange:function cloneRange(){var me=this;return new Range(me.document).setStart(me.startContainer,me.startOffset).setEnd(me.endContainer,me.endOffset);},/**\n         * 向当前选区的结束处闭合选区\n         * @method  collapse\n         * @return { UE.dom.Range } 当前range对象\n         * @example\n         * ```html\n         * \x3c!-- 选区示例 --\x3e\n         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n         *\n         * <script>\n         *\n         *     //执行操作\n         *     range.collapse();\n         *\n         *     //结果选区\n         *     //“|”表示选区已闭合\n         *     //<b>xx<i>xxx</i><span>xx|x</span>xxx</b>\n         *\n         * <\/script>\n         * ```\n         *//**\n         * 闭合当前选区，根据给定的toStart参数项决定是向当前选区开始处闭合还是向结束处闭合，\n         * 如果toStart的值为true，则向开始位置闭合， 反之，向结束位置闭合。\n         * @method  collapse\n         * @param { Boolean } toStart 是否向选区开始处闭合\n         * @return { UE.dom.Range } 当前range对象，此时range对象处于闭合状态\n         * @see UE.dom.Range:collapse()\n         * @example\n         * ```html\n         * \x3c!-- 选区示例 --\x3e\n         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n         *\n         * <script>\n         *\n         *     //执行操作\n         *     range.collapse( true );\n         *\n         *     //结果选区\n         *     //“|”表示选区已闭合\n         *     //<b>xx<i>xxx</i><span>|xxx</span>xxx</b>\n         *\n         * <\/script>\n         * ```\n         */collapse:function collapse(toStart){var me=this;if(toStart){me.endContainer=me.startContainer;me.endOffset=me.startOffset;}else{me.startContainer=me.endContainer;me.startOffset=me.endOffset;}me.collapsed=true;return me;},/**\n         * 调整range的开始位置和结束位置，使其"收缩"到最小的位置\n         * @method  shrinkBoundary\n         * @return { UE.dom.Range } 当前range对象\n         * @example\n         * ```html\n         * <span>xx<b>xx[</b>xxxxx]</span> => <span>xx<b>xx</b>[xxxxx]</span>\n         * ```\n         *\n         * @example\n         * ```html\n         * \x3c!-- 选区示例 --\x3e\n         * <b>x[xx</b><i>]xxx</i>\n         *\n         * <script>\n         *\n         *     //执行收缩\n         *     range.shrinkBoundary();\n         *\n         *     //结果选区\n         *     //<b>x[xx]</b><i>xxx</i>\n         * <\/script>\n         * ```\n         *\n         * @example\n         * ```html\n         * [<b><i>xxxx</i>xxxxxxx</b>] => <b><i>[xxxx</i>xxxxxxx]</b>\n         * ```\n         *//**\n         * 调整range的开始位置和结束位置，使其"收缩"到最小的位置，\n         * 如果ignoreEnd的值为true，则忽略对结束位置的调整\n         * @method  shrinkBoundary\n         * @param { Boolean } ignoreEnd 是否忽略对结束位置的调整\n         * @return { UE.dom.Range } 当前range对象\n         * @see UE.dom.domUtils.Range:shrinkBoundary()\n         */shrinkBoundary:function shrinkBoundary(ignoreEnd){var me=this,child,collapsed=me.collapsed;function check(node){return node.nodeType==1&&!domUtils.isBookmarkNode(node)&&!dtd.$empty[node.tagName]&&!dtd.$nonChild[node.tagName];}while(me.startContainer.nodeType==1&&(//是element\nchild=me.startContainer.childNodes[me.startOffset])&&//子节点也是element\ncheck(child)){me.setStart(child,0);}if(collapsed){return me.collapse(true);}if(!ignoreEnd){while(me.endContainer.nodeType==1&&//是element\nme.endOffset>0&&(//如果是空元素就退出 endOffset=0那么endOffst-1为负值，childNodes[endOffset]报错\nchild=me.endContainer.childNodes[me.endOffset-1])&&//子节点也是element\ncheck(child)){me.setEnd(child,child.childNodes.length);}}return me;},/**\n         * 获取离当前选区内包含的所有节点最近的公共祖先节点，\n         * @method  getCommonAncestor\n         * @remind 返回的公共祖先节点一定不是range自身的容器节点， 但有可能是一个文本节点\n         * @return { Node } 当前range对象内所有节点的公共祖先节点\n         * @example\n         * ```html\n         * //选区示例\n         * <span>xxx<b>x[x<em>xx]x</em>xxx</b>xx</span>\n         * <script>\n         *\n         *     var node = range.getCommonAncestor();\n         *\n         *     //公共祖先节点是： b节点\n         *     //输出： B\n         *     console.log(node.tagName);\n         *\n         * <\/script>\n         * ```\n         *//**\n         * 获取当前选区所包含的所有节点的公共祖先节点， 可以根据给定的参数 includeSelf 决定获取到\n         * 的公共祖先节点是否可以是当前选区的startContainer或endContainer节点， 如果 includeSelf\n         * 的取值为true， 则返回的节点可以是自身的容器节点， 否则， 则不能是容器节点\n         * @method  getCommonAncestor\n         * @param { Boolean } includeSelf 是否允许获取到的公共祖先节点是当前range对象的容器节点\n         * @return { Node } 当前range对象内所有节点的公共祖先节点\n         * @see UE.dom.Range:getCommonAncestor()\n         * @example\n         * ```html\n         * <body>\n         *\n         *     \x3c!-- 选区示例 --\x3e\n         *     <b>xxx<i>xxxx<span>xx[x</span>xx]x</i>xxxxxxx</b>\n         *\n         *     <script>\n         *\n         *         var node = range.getCommonAncestor( false );\n         *\n         *         //这里的公共祖先节点是B而不是I， 是因为参数限制了获取到的节点不能是容器节点\n         *         //output: B\n         *         console.log( node.tagName );\n         *\n         *     <\/script>\n         *\n         * </body>\n         * ```\n         *//**\n         * 获取当前选区所包含的所有节点的公共祖先节点， 可以根据给定的参数 includeSelf 决定获取到\n         * 的公共祖先节点是否可以是当前选区的startContainer或endContainer节点， 如果 includeSelf\n         * 的取值为true， 则返回的节点可以是自身的容器节点， 否则， 则不能是容器节点； 同时可以根据\n         * ignoreTextNode 参数的取值决定是否忽略类型为文本节点的祖先节点。\n         * @method  getCommonAncestor\n         * @param { Boolean } includeSelf 是否允许获取到的公共祖先节点是当前range对象的容器节点\n         * @param { Boolean } ignoreTextNode 获取祖先节点的过程中是否忽略类型为文本节点的祖先节点\n         * @return { Node } 当前range对象内所有节点的公共祖先节点\n         * @see UE.dom.Range:getCommonAncestor()\n         * @see UE.dom.Range:getCommonAncestor(Boolean)\n         * @example\n         * ```html\n         * <body>\n         *\n         *     \x3c!-- 选区示例 --\x3e\n         *     <b>xxx<i>xxxx<span>x[x]x</span>xxx</i>xxxxxxx</b>\n         *\n         *     <script>\n         *\n         *         var node = range.getCommonAncestor( true, false );\n         *\n         *         //output: SPAN\n         *         console.log( node.tagName );\n         *\n         *     <\/script>\n         *\n         * </body>\n         * ```\n         */getCommonAncestor:function getCommonAncestor(includeSelf,ignoreTextNode){var me=this,start=me.startContainer,end=me.endContainer;if(start===end){if(includeSelf&&selectOneNode(this)){start=start.childNodes[me.startOffset];if(start.nodeType==1)return start;}//只有在上来就相等的情况下才会出现是文本的情况\nreturn ignoreTextNode&&start.nodeType==3?start.parentNode:start;}return domUtils.getCommonAncestor(start,end);},/**\n         * 调整当前Range的开始和结束边界容器，如果是容器节点是文本节点,就调整到包含该文本节点的父节点上\n         * @method trimBoundary\n         * @remind 该操作有可能会引起文本节点被切开\n         * @return { UE.dom.Range } 当前range对象\n         * @example\n         * ```html\n         *\n         * //选区示例\n         * <b>xxx<i>[xxxxx]</i>xxx</b>\n         *\n         * <script>\n         *     //未调整前， 选区的开始容器和结束都是文本节点\n         *     //执行调整\n         *     range.trimBoundary();\n         *\n         *     //调整之后， 容器节点变成了i节点\n         *     //<b>xxx[<i>xxxxx</i>]xxx</b>\n         * <\/script>\n         * ```\n         *//**\n         * 调整当前Range的开始和结束边界容器，如果是容器节点是文本节点,就调整到包含该文本节点的父节点上，\n         * 可以根据 ignoreEnd 参数的值决定是否调整对结束边界的调整\n         * @method trimBoundary\n         * @param { Boolean } ignoreEnd 是否忽略对结束边界的调整\n         * @return { UE.dom.Range } 当前range对象\n         * @example\n         * ```html\n         *\n         * //选区示例\n         * <b>xxx<i>[xxxxx]</i>xxx</b>\n         *\n         * <script>\n         *     //未调整前， 选区的开始容器和结束都是文本节点\n         *     //执行调整\n         *     range.trimBoundary( true );\n         *\n         *     //调整之后， 开始容器节点变成了i节点\n         *     //但是， 结束容器没有发生变化\n         *     //<b>xxx[<i>xxxxx]</i>xxx</b>\n         * <\/script>\n         * ```\n         */trimBoundary:function trimBoundary(ignoreEnd){this.txtToElmBoundary();var start=this.startContainer,offset=this.startOffset,collapsed=this.collapsed,end=this.endContainer;if(start.nodeType==3){if(offset==0){this.setStartBefore(start);}else{if(offset>=start.nodeValue.length){this.setStartAfter(start);}else{var textNode=domUtils.split(start,offset);//跟新结束边界\nif(start===end){this.setEnd(textNode,this.endOffset-offset);}else if(start.parentNode===end){this.endOffset+=1;}this.setStartBefore(textNode);}}if(collapsed){return this.collapse(true);}}if(!ignoreEnd){offset=this.endOffset;end=this.endContainer;if(end.nodeType==3){if(offset==0){this.setEndBefore(end);}else{offset<end.nodeValue.length&&domUtils.split(end,offset);this.setEndAfter(end);}}}return this;},/**\n         * 如果选区在文本的边界上，就扩展选区到文本的父节点上, 如果当前选区是闭合的， 则什么也不做\n         * @method txtToElmBoundary\n         * @remind 该操作不会修改dom节点\n         * @return { UE.dom.Range } 当前range对象\n         *//**\n         * 如果选区在文本的边界上，就扩展选区到文本的父节点上, 如果当前选区是闭合的， 则根据参数项\n         * ignoreCollapsed 的值决定是否执行该调整\n         * @method txtToElmBoundary\n         * @param { Boolean } ignoreCollapsed 是否忽略选区的闭合状态， 如果该参数取值为true， 则\n         *                      不论选区是否闭合， 都会执行该操作， 反之， 则不会对闭合的选区执行该操作\n         * @return { UE.dom.Range } 当前range对象\n         */txtToElmBoundary:function txtToElmBoundary(ignoreCollapsed){function adjust(r,c){var container=r[c+"Container"],offset=r[c+"Offset"];if(container.nodeType==3){if(!offset){r["set"+c.replace(/(\\w)/,function(a){return a.toUpperCase();})+"Before"](container);}else if(offset>=container.nodeValue.length){r["set"+c.replace(/(\\w)/,function(a){return a.toUpperCase();})+"After"](container);}}}if(ignoreCollapsed||!this.collapsed){adjust(this,"start");adjust(this,"end");}return this;},/**\n         * 在当前选区的开始位置前插入节点，新插入的节点会被该range包含\n         * @method  insertNode\n         * @param { Node } node 需要插入的节点\n         * @remind 插入的节点可以是一个DocumentFragment依次插入多个节点\n         * @return { UE.dom.Range } 当前range对象\n         */insertNode:function insertNode(node){var first=node,length=1;if(node.nodeType==11){first=node.firstChild;length=node.childNodes.length;}this.trimBoundary(true);var start=this.startContainer,offset=this.startOffset;var nextNode=start.childNodes[offset];if(nextNode){start.insertBefore(node,nextNode);}else{start.appendChild(node);}if(first.parentNode===this.endContainer){this.endOffset=this.endOffset+length;}return this.setStartBefore(first);},/**\n         * 闭合选区到当前选区的开始位置， 并且定位光标到闭合后的位置\n         * @method  setCursor\n         * @return { UE.dom.Range } 当前range对象\n         * @see UE.dom.Range:collapse()\n         *//**\n         * 闭合选区，可以根据参数toEnd的值控制选区是向前闭合还是向后闭合， 并且定位光标到闭合后的位置。\n         * @method  setCursor\n         * @param { Boolean } toEnd 是否向后闭合， 如果为true， 则闭合选区时， 将向结束容器方向闭合，\n         *                      反之，则向开始容器方向闭合\n         * @return { UE.dom.Range } 当前range对象\n         * @see UE.dom.Range:collapse(Boolean)\n         */setCursor:function setCursor(toEnd,noFillData){return this.collapse(!toEnd).select(noFillData);},/**\n         * 创建当前range的一个书签，记录下当前range的位置，方便当dom树改变时，还能找回原来的选区位置\n         * @method createBookmark\n         * @param { Boolean } serialize 控制返回的标记位置是对当前位置的引用还是ID，如果该值为true，则\n         *                              返回标记位置的ID， 反之则返回标记位置节点的引用\n         * @return { Object } 返回一个书签记录键值对， 其包含的key有： start => 开始标记的ID或者引用，\n         *                          end => 结束标记的ID或引用， id => 当前标记的类型， 如果为true，则表示\n         *                          返回的记录的类型为ID， 反之则为引用\n         */createBookmark:function createBookmark(serialize,same){var endNode,startNode=this.document.createElement("span");startNode.style.cssText="display:none;line-height:0px;";startNode.appendChild(this.document.createTextNode(\'\\u200D\'));startNode.id="_baidu_bookmark_start_"+(same?"":guid++);if(!this.collapsed){endNode=startNode.cloneNode(true);endNode.id="_baidu_bookmark_end_"+(same?"":guid++);}this.insertNode(startNode);if(endNode){this.collapse().insertNode(endNode).setEndBefore(endNode);}this.setStartAfter(startNode);return{start:serialize?startNode.id:startNode,end:endNode?serialize?endNode.id:endNode:null,id:serialize};},/**\n         *  调整当前range的边界到书签位置，并删除该书签对象所标记的位置内的节点\n         *  @method  moveToBookmark\n         *  @param { BookMark } bookmark createBookmark所创建的标签对象\n         *  @return { UE.dom.Range } 当前range对象\n         *  @see UE.dom.Range:createBookmark(Boolean)\n         */moveToBookmark:function moveToBookmark(bookmark){var start=bookmark.id?this.document.getElementById(bookmark.start):bookmark.start,end=bookmark.end&&bookmark.id?this.document.getElementById(bookmark.end):bookmark.end;this.setStartBefore(start);domUtils.remove(start);if(end){this.setEndBefore(end);domUtils.remove(end);}else{this.collapse(true);}return this;},/**\n         * 调整range的边界，使其"放大"到最近的父节点\n         * @method  enlarge\n         * @remind 会引起选区的变化\n         * @return { UE.dom.Range } 当前range对象\n         *//**\n         * 调整range的边界，使其"放大"到最近的父节点，根据参数 toBlock 的取值， 可以\n         * 要求扩大之后的父节点是block节点\n         * @method  enlarge\n         * @param { Boolean } toBlock 是否要求扩大之后的父节点必须是block节点\n         * @return { UE.dom.Range } 当前range对象\n         */enlarge:function enlarge(toBlock,stopFn){var isBody=domUtils.isBody,pre,node,tmp=this.document.createTextNode("");if(toBlock){node=this.startContainer;if(node.nodeType==1){if(node.childNodes[this.startOffset]){pre=node=node.childNodes[this.startOffset];}else{node.appendChild(tmp);pre=node=tmp;}}else{pre=node;}while(1){if(domUtils.isBlockElm(node)){node=pre;while((pre=node.previousSibling)&&!domUtils.isBlockElm(pre)){node=pre;}this.setStartBefore(node);break;}pre=node;node=node.parentNode;}node=this.endContainer;if(node.nodeType==1){if(pre=node.childNodes[this.endOffset]){node.insertBefore(tmp,pre);}else{node.appendChild(tmp);}pre=node=tmp;}else{pre=node;}while(1){if(domUtils.isBlockElm(node)){node=pre;while((pre=node.nextSibling)&&!domUtils.isBlockElm(pre)){node=pre;}this.setEndAfter(node);break;}pre=node;node=node.parentNode;}if(tmp.parentNode===this.endContainer){this.endOffset--;}domUtils.remove(tmp);}// 扩展边界到最大\nif(!this.collapsed){while(this.startOffset==0){if(stopFn&&stopFn(this.startContainer)){break;}if(isBody(this.startContainer)){break;}this.setStartBefore(this.startContainer);}while(this.endOffset==(this.endContainer.nodeType==1?this.endContainer.childNodes.length:this.endContainer.nodeValue.length)){if(stopFn&&stopFn(this.endContainer)){break;}if(isBody(this.endContainer)){break;}this.setEndAfter(this.endContainer);}}return this;},enlargeToBlockElm:function enlargeToBlockElm(ignoreEnd){while(!domUtils.isBlockElm(this.startContainer)){this.setStartBefore(this.startContainer);}if(!ignoreEnd){while(!domUtils.isBlockElm(this.endContainer)){this.setEndAfter(this.endContainer);}}return this;},/**\n         * 调整Range的边界，使其"缩小"到最合适的位置\n         * @method adjustmentBoundary\n         * @return { UE.dom.Range } 当前range对象\n         * @see UE.dom.Range:shrinkBoundary()\n         */adjustmentBoundary:function adjustmentBoundary(){if(!this.collapsed){while(!domUtils.isBody(this.startContainer)&&this.startOffset==this.startContainer[this.startContainer.nodeType==3?"nodeValue":"childNodes"].length&&this.startContainer[this.startContainer.nodeType==3?"nodeValue":"childNodes"].length){this.setStartAfter(this.startContainer);}while(!domUtils.isBody(this.endContainer)&&!this.endOffset&&this.endContainer[this.endContainer.nodeType==3?"nodeValue":"childNodes"].length){this.setEndBefore(this.endContainer);}}return this;},/**\n         * 给range选区中的内容添加给定的inline标签\n         * @method applyInlineStyle\n         * @param { String } tagName 需要添加的标签名\n         * @example\n         * ```html\n         * <p>xxxx[xxxx]x</p>  ==>  range.applyInlineStyle("strong")  ==>  <p>xxxx[<strong>xxxx</strong>]x</p>\n         * ```\n         *//**\n         * 给range选区中的内容添加给定的inline标签， 并且为标签附加上一些初始化属性。\n         * @method applyInlineStyle\n         * @param { String } tagName 需要添加的标签名\n         * @param { Object } attrs 跟随新添加的标签的属性\n         * @return { UE.dom.Range } 当前选区\n         * @example\n         * ```html\n         * <p>xxxx[xxxx]x</p>\n         *\n         * ==>\n         *\n         * \x3c!-- 执行操作 --\x3e\n         * range.applyInlineStyle("strong",{"style":"font-size:12px"})\n         *\n         * ==>\n         *\n         * <p>xxxx[<strong style="font-size:12px">xxxx</strong>]x</p>\n         * ```\n         */applyInlineStyle:function applyInlineStyle(tagName,attrs,list){if(this.collapsed)return this;this.trimBoundary().enlarge(false,function(node){return node.nodeType==1&&domUtils.isBlockElm(node);}).adjustmentBoundary();var bookmark=this.createBookmark(),end=bookmark.end,filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!="br":!domUtils.isWhitespace(node);},current=domUtils.getNextDomNode(bookmark.start,false,filterFn),node,pre,range=this.cloneRange();while(current&&domUtils.getPosition(current,end)&domUtils.POSITION_PRECEDING){if(current.nodeType==3||dtd[tagName][current.tagName]){range.setStartBefore(current);node=current;while(node&&(node.nodeType==3||dtd[tagName][node.tagName])&&node!==end){pre=node;node=domUtils.getNextDomNode(node,node.nodeType==1,null,function(parent){return dtd[tagName][parent.tagName];});}var frag=range.setEndAfter(pre).extractContents(),elm;if(list&&list.length>0){var level,top;top=level=list[0].cloneNode(false);for(var i=1,ci;ci=list[i++];){level.appendChild(ci.cloneNode(false));level=level.firstChild;}elm=level;}else{elm=range.document.createElement(tagName);}if(attrs){domUtils.setAttributes(elm,attrs);}elm.appendChild(frag);//针对嵌套span的全局样式指定，做容错处理\nif(elm.tagName=="SPAN"&&attrs&&attrs.style){utils.each(elm.getElementsByTagName("span"),function(s){s.style.cssText=s.style.cssText+";"+attrs.style;});}range.insertNode(list?top:elm);//处理下滑线在a上的情况\nvar aNode;if(tagName=="span"&&attrs.style&&/text\\-decoration/.test(attrs.style)&&(aNode=domUtils.findParentByTagName(elm,"a",true))){domUtils.setAttributes(aNode,attrs);domUtils.remove(elm,true);elm=aNode;}else{domUtils.mergeSibling(elm);domUtils.clearEmptySibling(elm);}//去除子节点相同的\ndomUtils.mergeChild(elm,attrs);current=domUtils.getNextDomNode(elm,false,filterFn);domUtils.mergeToParent(elm);if(node===end){break;}}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return this.moveToBookmark(bookmark);},/**\n         * 移除当前选区内指定的inline标签，但保留其中的内容\n         * @method removeInlineStyle\n         * @param { String } tagName 需要移除的标签名\n         * @return { UE.dom.Range } 当前的range对象\n         * @example\n         * ```html\n         * xx[x<span>xxx<em>yyy</em>zz]z</span>  => range.removeInlineStyle(["em"])  => xx[x<span>xxxyyyzz]z</span>\n         * ```\n         *//**\n         * 移除当前选区内指定的一组inline标签，但保留其中的内容\n         * @method removeInlineStyle\n         * @param { Array } tagNameArr 需要移除的标签名的数组\n         * @return { UE.dom.Range } 当前的range对象\n         * @see UE.dom.Range:removeInlineStyle(String)\n         */removeInlineStyle:function removeInlineStyle(tagNames){if(this.collapsed)return this;tagNames=utils.isArray(tagNames)?tagNames:[tagNames];this.shrinkBoundary().adjustmentBoundary();var start=this.startContainer,end=this.endContainer;while(1){if(start.nodeType==1){if(utils.indexOf(tagNames,start.tagName.toLowerCase())>-1){break;}if(start.tagName.toLowerCase()=="body"){start=null;break;}}start=start.parentNode;}while(1){if(end.nodeType==1){if(utils.indexOf(tagNames,end.tagName.toLowerCase())>-1){break;}if(end.tagName.toLowerCase()=="body"){end=null;break;}}end=end.parentNode;}var bookmark=this.createBookmark(),frag,tmpRange;if(start){tmpRange=this.cloneRange().setEndBefore(bookmark.start).setStartBefore(start);frag=tmpRange.extractContents();tmpRange.insertNode(frag);domUtils.clearEmptySibling(start,true);start.parentNode.insertBefore(bookmark.start,start);}if(end){tmpRange=this.cloneRange().setStartAfter(bookmark.end).setEndAfter(end);frag=tmpRange.extractContents();tmpRange.insertNode(frag);domUtils.clearEmptySibling(end,false,true);end.parentNode.insertBefore(bookmark.end,end.nextSibling);}var current=domUtils.getNextDomNode(bookmark.start,false,function(node){return node.nodeType==1;}),next;while(current&&current!==bookmark.end){next=domUtils.getNextDomNode(current,true,function(node){return node.nodeType==1;});if(utils.indexOf(tagNames,current.tagName.toLowerCase())>-1){domUtils.remove(current,true);}current=next;}return this.moveToBookmark(bookmark);},/**\n         * 获取当前选中的自闭合的节点\n         * @method  getClosedNode\n         * @return { Node | NULL } 如果当前选中的是自闭合节点， 则返回该节点， 否则返回NULL\n         */getClosedNode:function getClosedNode(){var node;if(!this.collapsed){var range=this.cloneRange().adjustmentBoundary().shrinkBoundary();if(selectOneNode(range)){var child=range.startContainer.childNodes[range.startOffset];if(child&&child.nodeType==1&&(dtd.$empty[child.tagName]||dtd.$nonChild[child.tagName])){node=child;}}}return node;},/**\n         * 在页面上高亮range所表示的选区\n         * @method select\n         * @return { UE.dom.Range } 返回当前Range对象\n         *///这里不区分ie9以上，trace:3824\nselect:browser.ie?function(noFillData,textRange){var nativeRange;if(!this.collapsed)this.shrinkBoundary();var node=this.getClosedNode();if(node&&!textRange){try{nativeRange=this.document.body.createControlRange();nativeRange.addElement(node);nativeRange.select();}catch(e){}return this;}var bookmark=this.createBookmark(),start=bookmark.start,end;nativeRange=this.document.body.createTextRange();nativeRange.moveToElementText(start);nativeRange.moveStart("character",1);if(!this.collapsed){var nativeRangeEnd=this.document.body.createTextRange();end=bookmark.end;nativeRangeEnd.moveToElementText(end);nativeRange.setEndPoint("EndToEnd",nativeRangeEnd);}else{if(!noFillData&&this.startContainer.nodeType!=3){//使用<span>|x<span>固定住光标\nvar tmpText=this.document.createTextNode(fillChar),tmp=this.document.createElement("span");tmp.appendChild(this.document.createTextNode(fillChar));start.parentNode.insertBefore(tmp,start);start.parentNode.insertBefore(tmpText,start);//当点b,i,u时，不能清除i上边的b\nremoveFillData(this.document,tmpText);fillData=tmpText;mergeSibling(tmp,"previousSibling");mergeSibling(start,"nextSibling");nativeRange.moveStart("character",-1);nativeRange.collapse(true);}}this.moveToBookmark(bookmark);tmp&&domUtils.remove(tmp);//IE在隐藏状态下不支持range操作，catch一下\ntry{nativeRange.select();}catch(e){}return this;}:function(notInsertFillData){function checkOffset(rng){function check(node,offset,dir){if(node.nodeType==3&&node.nodeValue.length<offset){rng[dir+"Offset"]=node.nodeValue.length;}}check(rng.startContainer,rng.startOffset,"start");check(rng.endContainer,rng.endOffset,"end");}var win=domUtils.getWindow(this.document),sel=win.getSelection(),txtNode;//FF下关闭自动长高时滚动条在关闭dialog时会跳\n//ff下如果不body.focus将不能定位闭合光标到编辑器内\nbrowser.gecko?this.document.body.focus():win.focus();if(sel){sel.removeAllRanges();// trace:870 chrome/safari后边是br对于闭合得range不能定位 所以去掉了判断\n// this.startContainer.nodeType != 3 &&! ((child = this.startContainer.childNodes[this.startOffset]) && child.nodeType == 1 && child.tagName == \'BR\'\nif(this.collapsed&&!notInsertFillData){//                    //opear如果没有节点接着，原生的不能够定位,不能在body的第一级插入空白节点\n//                    if (notInsertFillData && browser.opera && !domUtils.isBody(this.startContainer) && this.startContainer.nodeType == 1) {\n//                        var tmp = this.document.createTextNode(\'\');\n//                        this.insertNode(tmp).setStart(tmp, 0).collapse(true);\n//                    }\n//\n//处理光标落在文本节点的情况\n//处理以下的情况\n//<b>|xxxx</b>\n//<b>xxxx</b>|xxxx\n//xxxx<b>|</b>\nvar start=this.startContainer,child=start;if(start.nodeType==1){child=start.childNodes[this.startOffset];}if(!(start.nodeType==3&&this.startOffset)&&(child?!child.previousSibling||child.previousSibling.nodeType!=3:!start.lastChild||start.lastChild.nodeType!=3)){txtNode=this.document.createTextNode(fillChar);//跟着前边走\nthis.insertNode(txtNode);removeFillData(this.document,txtNode);mergeSibling(txtNode,"previousSibling");mergeSibling(txtNode,"nextSibling");fillData=txtNode;this.setStart(txtNode,browser.webkit?1:0).collapse(true);}}var nativeRange=this.document.createRange();if(this.collapsed&&browser.opera&&this.startContainer.nodeType==1){var child=this.startContainer.childNodes[this.startOffset];if(!child){//往前靠拢\nchild=this.startContainer.lastChild;if(child&&domUtils.isBr(child)){this.setStartBefore(child).collapse(true);}}else{//向后靠拢\nwhile(child&&domUtils.isBlockElm(child)){if(child.nodeType==1&&child.childNodes[0]){child=child.childNodes[0];}else{break;}}child&&this.setStartBefore(child).collapse(true);}}//是createAddress最后一位算的不准，现在这里进行微调\ncheckOffset(this);nativeRange.setStart(this.startContainer,this.startOffset);nativeRange.setEnd(this.endContainer,this.endOffset);sel.addRange(nativeRange);}return this;},/**\n         * 滚动到当前range开始的位置\n         * @method scrollToView\n         * @param { Window } win 当前range对象所属的window对象\n         * @return { UE.dom.Range } 当前Range对象\n         *//**\n         * 滚动到距离当前range开始位置 offset 的位置处\n         * @method scrollToView\n         * @param { Window } win 当前range对象所属的window对象\n         * @param { Number } offset 距离range开始位置处的偏移量， 如果为正数， 则向下偏移， 反之， 则向上偏移\n         * @return { UE.dom.Range } 当前Range对象\n         */scrollToView:function scrollToView(win,offset){win=win?window:domUtils.getWindow(this.document);var me=this,span=me.document.createElement("span");//trace:717\nspan.innerHTML="&nbsp;";me.cloneRange().insertNode(span);domUtils.scrollToView(span,win,offset);domUtils.remove(span);return me;},/**\n         * 判断当前选区内容是否占位符\n         * @private\n         * @method inFillChar\n         * @return { Boolean } 如果是占位符返回true，否则返回false\n         */inFillChar:function inFillChar(){var start=this.startContainer;if(this.collapsed&&start.nodeType==3&&start.nodeValue.replace(new RegExp("^"+domUtils.fillChar),"").length+1==start.nodeValue.length){return true;}return false;},/**\n         * 保存\n         * @method createAddress\n         * @private\n         * @return { Boolean } 返回开始和结束的位置\n         * @example\n         * ```html\n         * <body>\n         *     <p>\n         *         aaaa\n         *         <em>\n         *             \x3c!-- 选区开始 --\x3e\n         *             bbbb\n         *             \x3c!-- 选区结束 --\x3e\n         *         </em>\n         *     </p>\n         *\n         *     <script>\n         *         //output: {startAddress:[0,1,0,0],endAddress:[0,1,0,4]}\n         *         console.log( range.createAddress() );\n         *     <\/script>\n         * </body>\n         * ```\n         */createAddress:function createAddress(ignoreEnd,ignoreTxt){var addr={},me=this;function getAddress(isStart){var node=isStart?me.startContainer:me.endContainer;var parents=domUtils.findParents(node,true,function(node){return!domUtils.isBody(node);}),addrs=[];for(var i=0,ci;ci=parents[i++];){addrs.push(domUtils.getNodeIndex(ci,ignoreTxt));}var firstIndex=0;if(ignoreTxt){if(node.nodeType==3){var tmpNode=node.previousSibling;while(tmpNode&&tmpNode.nodeType==3){firstIndex+=tmpNode.nodeValue.replace(fillCharReg,"").length;tmpNode=tmpNode.previousSibling;}firstIndex+=isStart?me.startOffset:me.endOffset;// - (fillCharReg.test(node.nodeValue) ? 1 : 0 )\n}else{node=node.childNodes[isStart?me.startOffset:me.endOffset];if(node){firstIndex=domUtils.getNodeIndex(node,ignoreTxt);}else{node=isStart?me.startContainer:me.endContainer;var first=node.firstChild;while(first){if(domUtils.isFillChar(first)){first=first.nextSibling;continue;}firstIndex++;if(first.nodeType==3){while(first&&first.nodeType==3){first=first.nextSibling;}}else{first=first.nextSibling;}}}}}else{firstIndex=isStart?domUtils.isFillChar(node)?0:me.startOffset:me.endOffset;}if(firstIndex<0){firstIndex=0;}addrs.push(firstIndex);return addrs;}addr.startAddress=getAddress(true);if(!ignoreEnd){addr.endAddress=me.collapsed?[].concat(addr.startAddress):getAddress();}return addr;},/**\n         * 保存\n         * @method createAddress\n         * @private\n         * @return { Boolean } 返回开始和结束的位置\n         * @example\n         * ```html\n         * <body>\n         *     <p>\n         *         aaaa\n         *         <em>\n         *             \x3c!-- 选区开始 --\x3e\n         *             bbbb\n         *             \x3c!-- 选区结束 --\x3e\n         *         </em>\n         *     </p>\n         *\n         *     <script>\n         *         var range = editor.selection.getRange();\n         *         range.moveToAddress({startAddress:[0,1,0,0],endAddress:[0,1,0,4]});\n         *         range.select();\n         *         //output: \'bbbb\'\n         *         console.log(editor.selection.getText());\n         *     <\/script>\n         * </body>\n         * ```\n         */moveToAddress:function moveToAddress(addr,ignoreEnd){var me=this;function getNode(address,isStart){var tmpNode=me.document.body,parentNode,offset;for(var i=0,ci,l=address.length;i<l;i++){ci=address[i];parentNode=tmpNode;tmpNode=tmpNode.childNodes[ci];if(!tmpNode){offset=ci;break;}}if(isStart){if(tmpNode){me.setStartBefore(tmpNode);}else{me.setStart(parentNode,offset);}}else{if(tmpNode){me.setEndBefore(tmpNode);}else{me.setEnd(parentNode,offset);}}}getNode(addr.startAddress,true);!ignoreEnd&&addr.endAddress&&getNode(addr.endAddress);return me;},/**\n         * 判断给定的Range对象是否和当前Range对象表示的是同一个选区\n         * @method equals\n         * @param { UE.dom.Range } 需要判断的Range对象\n         * @return { Boolean } 如果给定的Range对象与当前Range对象表示的是同一个选区， 则返回true， 否则返回false\n         */equals:function equals(rng){for(var p in this){if(this.hasOwnProperty(p)){if(this[p]!==rng[p])return false;}}return true;},/**\n         * 遍历range内的节点。每当遍历一个节点时， 都会执行参数项 doFn 指定的函数， 该函数的接受当前遍历的节点\n         * 作为其参数。\n         * @method traversal\n         * @param { Function }  doFn 对每个遍历的节点要执行的方法， 该方法接受当前遍历的节点作为其参数\n         * @return { UE.dom.Range } 当前range对象\n         * @example\n         * ```html\n         *\n         * <body>\n         *\n         *     \x3c!-- 选区开始 --\x3e\n         *     <span></span>\n         *     <a></a>\n         *     \x3c!-- 选区结束 --\x3e\n         * </body>\n         *\n         * <script>\n         *\n         *     //output: <span></span><a></a>\n         *     console.log( range.cloneContents() );\n         *\n         *     range.traversal( function ( node ) {\n         *\n         *         if ( node.nodeType === 1 ) {\n         *             node.className = "test";\n         *         }\n         *\n         *     } );\n         *\n         *     //output: <span class="test"></span><a class="test"></a>\n         *     console.log( range.cloneContents() );\n         *\n         * <\/script>\n         * ```\n         *//**\n         * 遍历range内的节点。\n         * 每当遍历一个节点时， 都会执行参数项 doFn 指定的函数， 该函数的接受当前遍历的节点\n         * 作为其参数。\n         * 可以通过参数项 filterFn 来指定一个过滤器， 只有符合该过滤器过滤规则的节点才会触\n         * 发doFn函数的执行\n         * @method traversal\n         * @param { Function } doFn 对每个遍历的节点要执行的方法， 该方法接受当前遍历的节点作为其参数\n         * @param { Function } filterFn 过滤器， 该函数接受当前遍历的节点作为参数， 如果该节点满足过滤\n         *                      规则， 请返回true， 该节点会触发doFn， 否则， 请返回false， 则该节点不\n         *                      会触发doFn。\n         * @return { UE.dom.Range } 当前range对象\n         * @see UE.dom.Range:traversal(Function)\n         * @example\n         * ```html\n         *\n         * <body>\n         *\n         *     \x3c!-- 选区开始 --\x3e\n         *     <span></span>\n         *     <a></a>\n         *     \x3c!-- 选区结束 --\x3e\n         * </body>\n         *\n         * <script>\n         *\n         *     //output: <span></span><a></a>\n         *     console.log( range.cloneContents() );\n         *\n         *     range.traversal( function ( node ) {\n         *\n         *         node.className = "test";\n         *\n         *     }, function ( node ) {\n         *          return node.nodeType === 1;\n         *     } );\n         *\n         *     //output: <span class="test"></span><a class="test"></a>\n         *     console.log( range.cloneContents() );\n         *\n         * <\/script>\n         * ```\n         */traversal:function traversal(doFn,filterFn){if(this.collapsed)return this;var bookmark=this.createBookmark(),end=bookmark.end,current=domUtils.getNextDomNode(bookmark.start,false,filterFn);while(current&&current!==end&&domUtils.getPosition(current,end)&domUtils.POSITION_PRECEDING){var tmpNode=domUtils.getNextDomNode(current,false,filterFn);doFn(current);current=tmpNode;}return this.moveToBookmark(bookmark);}};})();// core/Selection.js\n/**\n * 选集\n * @file\n * @module UE.dom\n * @class Selection\n * @since 1.2.6.1\n *//**\n * 选区集合\n * @unfile\n * @module UE.dom\n * @class Selection\n */(function(){function getBoundaryInformation(range,start){var getIndex=domUtils.getNodeIndex;range=range.duplicate();range.collapse(start);var parent=range.parentElement();//如果节点里没有子节点，直接退出\nif(!parent.hasChildNodes()){return{container:parent,offset:0};}var siblings=parent.children,child,testRange=range.duplicate(),startIndex=0,endIndex=siblings.length-1,index=-1,distance;while(startIndex<=endIndex){index=Math.floor((startIndex+endIndex)/2);child=siblings[index];testRange.moveToElementText(child);var position=testRange.compareEndPoints("StartToStart",range);if(position>0){endIndex=index-1;}else if(position<0){startIndex=index+1;}else{//trace:1043\nreturn{container:parent,offset:getIndex(child)};}}if(index==-1){testRange.moveToElementText(parent);testRange.setEndPoint("StartToStart",range);distance=testRange.text.replace(/(\\r\\n|\\r)/g,"\\n").length;siblings=parent.childNodes;if(!distance){child=siblings[siblings.length-1];return{container:child,offset:child.nodeValue.length};}var i=siblings.length;while(distance>0){distance-=siblings[--i].nodeValue.length;}return{container:siblings[i],offset:-distance};}testRange.collapse(position>0);testRange.setEndPoint(position>0?"StartToStart":"EndToStart",range);distance=testRange.text.replace(/(\\r\\n|\\r)/g,"\\n").length;if(!distance){return dtd.$empty[child.tagName]||dtd.$nonChild[child.tagName]?{container:parent,offset:getIndex(child)+(position>0?0:1)}:{container:child,offset:position>0?0:child.childNodes.length};}while(distance>0){try{var pre=child;child=child[position>0?"previousSibling":"nextSibling"];distance-=child.nodeValue.length;}catch(e){return{container:parent,offset:getIndex(pre)};}}return{container:child,offset:position>0?-distance:child.nodeValue.length+distance};}/**\n     * 将ieRange转换为Range对象\n     * @param {Range}   ieRange    ieRange对象\n     * @param {Range}   range      Range对象\n     * @return  {Range}  range       返回转换后的Range对象\n     */function transformIERangeToRange(ieRange,range){if(ieRange.item){range.selectNode(ieRange.item(0));}else{var bi=getBoundaryInformation(ieRange,true);range.setStart(bi.container,bi.offset);if(ieRange.compareEndPoints("StartToEnd",ieRange)!=0){bi=getBoundaryInformation(ieRange,false);range.setEnd(bi.container,bi.offset);}}return range;}/**\n     * 获得ieRange\n     * @param {Selection} sel    Selection对象\n     * @return {ieRange}    得到ieRange\n     */function _getIERange(sel){var ieRange;//ie下有可能报错\ntry{ieRange=sel.getNative().createRange();}catch(e){return null;}var el=ieRange.item?ieRange.item(0):ieRange.parentElement();if((el.ownerDocument||el)===sel.document){return ieRange;}return null;}var Selection=dom.Selection=function(doc){var me=this,iframe;me.document=doc;if(browser.ie9below){iframe=domUtils.getWindow(doc).frameElement;domUtils.on(iframe,"beforedeactivate",function(){me._bakIERange=me.getIERange();});domUtils.on(iframe,"activate",function(){try{if(!_getIERange(me)&&me._bakIERange){me._bakIERange.select();}}catch(ex){}me._bakIERange=null;});}iframe=doc=null;};Selection.prototype={rangeInBody:function rangeInBody(rng,txtRange){var node=browser.ie9below||txtRange?rng.item?rng.item():rng.parentElement():rng.startContainer;return node===this.document.body||domUtils.inDoc(node,this.document);},/**\n         * 获取原生seleciton对象\n         * @method getNative\n         * @return { Object } 获得selection对象\n         * @example\n         * ```javascript\n         * editor.selection.getNative();\n         * ```\n         */getNative:function getNative(){var doc=this.document;try{return!doc?null:browser.ie9below?doc.selection:domUtils.getWindow(doc).getSelection();}catch(e){return null;}},/**\n         * 获得ieRange\n         * @method getIERange\n         * @return { Object } 返回ie原生的Range\n         * @example\n         * ```javascript\n         * editor.selection.getIERange();\n         * ```\n         */getIERange:function getIERange(){var ieRange=_getIERange(this);if(!ieRange){if(this._bakIERange){return this._bakIERange;}}return ieRange;},/**\n         * 缓存当前选区的range和选区的开始节点\n         * @method cache\n         */cache:function cache(){this.clear();this._cachedRange=this.getRange();this._cachedStartElement=this.getStart();this._cachedStartElementPath=this.getStartElementPath();},/**\n         * 获取选区开始位置的父节点到body\n         * @method getStartElementPath\n         * @return { Array } 返回父节点集合\n         * @example\n         * ```javascript\n         * editor.selection.getStartElementPath();\n         * ```\n         */getStartElementPath:function getStartElementPath(){if(this._cachedStartElementPath){return this._cachedStartElementPath;}var start=this.getStart();if(start){return domUtils.findParents(start,true,null,true);}return[];},/**\n         * 清空缓存\n         * @method clear\n         */clear:function clear(){this._cachedStartElementPath=this._cachedRange=this._cachedStartElement=null;},/**\n         * 编辑器是否得到了选区\n         * @method isFocus\n         */isFocus:function isFocus(){try{if(browser.ie9below){var nativeRange=_getIERange(this);return!!(nativeRange&&this.rangeInBody(nativeRange));}else{return!!this.getNative().rangeCount;}}catch(e){return false;}},/**\n         * 获取选区对应的Range\n         * @method getRange\n         * @return { Object } 得到Range对象\n         * @example\n         * ```javascript\n         * editor.selection.getRange();\n         * ```\n         */getRange:function getRange(){var me=this;function optimze(range){var child=me.document.body.firstChild,collapsed=range.collapsed;while(child&&child.firstChild){range.setStart(child,0);child=child.firstChild;}if(!range.startContainer){range.setStart(me.document.body,0);}if(collapsed){range.collapse(true);}}if(me._cachedRange!=null){return this._cachedRange;}var range=new baidu.editor.dom.Range(me.document);if(browser.ie9below){var nativeRange=me.getIERange();if(nativeRange){//备份的_bakIERange可能已经实效了，dom树发生了变化比如从源码模式切回来，所以try一下，实效就放到body开始位置\ntry{transformIERangeToRange(nativeRange,range);}catch(e){optimze(range);}}else{optimze(range);}}else{var sel=me.getNative();if(sel&&sel.rangeCount){var firstRange=sel.getRangeAt(0);var lastRange=sel.getRangeAt(sel.rangeCount-1);range.setStart(firstRange.startContainer,firstRange.startOffset).setEnd(lastRange.endContainer,lastRange.endOffset);if(range.collapsed&&domUtils.isBody(range.startContainer)&&!range.startOffset){optimze(range);}}else{//trace:1734 有可能已经不在dom树上了，标识的节点\nif(this._bakRange&&domUtils.inDoc(this._bakRange.startContainer,this.document)){return this._bakRange;}optimze(range);}}return this._bakRange=range;},/**\n         * 获取开始元素，用于状态反射\n         * @method getStart\n         * @return { Element } 获得开始元素\n         * @example\n         * ```javascript\n         * editor.selection.getStart();\n         * ```\n         */getStart:function getStart(){if(this._cachedStartElement){return this._cachedStartElement;}var range=browser.ie9below?this.getIERange():this.getRange(),tmpRange,start,tmp,parent;if(browser.ie9below){if(!range){//todo 给第一个值可能会有问题\nreturn this.document.body.firstChild;}//control元素\nif(range.item){return range.item(0);}tmpRange=range.duplicate();//修正ie下<b>x</b>[xx] 闭合后 <b>x|</b>xx\ntmpRange.text.length>0&&tmpRange.moveStart("character",1);tmpRange.collapse(1);start=tmpRange.parentElement();parent=tmp=range.parentElement();while(tmp=tmp.parentNode){if(tmp==start){start=parent;break;}}}else{range.shrinkBoundary();start=range.startContainer;if(start.nodeType==1&&start.hasChildNodes()){start=start.childNodes[Math.min(start.childNodes.length-1,range.startOffset)];}if(start.nodeType==3){return start.parentNode;}}return start;},/**\n         * 得到选区中的文本\n         * @method getText\n         * @return { String } 选区中包含的文本\n         * @example\n         * ```javascript\n         * editor.selection.getText();\n         * ```\n         */getText:function getText(){var nativeSel,nativeRange;if(this.isFocus()&&(nativeSel=this.getNative())){nativeRange=browser.ie9below?nativeSel.createRange():nativeSel.getRangeAt(0);return browser.ie9below?nativeRange.text:nativeRange.toString();}return"";},/**\n         * 清除选区\n         * @method clearRange\n         * @example\n         * ```javascript\n         * editor.selection.clearRange();\n         * ```\n         */clearRange:function clearRange(){this.getNative()[browser.ie9below?"empty":"removeAllRanges"]();}};})();// core/Editor.js\n/**\n * 编辑器主类，包含编辑器提供的大部分公用接口\n * @file\n * @module UE\n * @class Editor\n * @since 1.2.6.1\n *//**\n * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n * @unfile\n * @module UE\n *//**\n * UEditor的核心类，为用户提供与编辑器交互的接口。\n * @unfile\n * @module UE\n * @class Editor\n */(function(){var uid=0,_selectionChangeTimer;/**\n     * 获取编辑器的html内容，赋值到编辑器所在表单的textarea文本域里面\n     * @private\n     * @method setValue\n     * @param { UE.Editor } editor 编辑器事例\n     */function setValue(form,editor){var textarea;if(editor.options.textarea){if(utils.isString(editor.options.textarea)){for(var i=0,ti,tis=domUtils.getElementsByTagName(form,"textarea");ti=tis[i++];){if(ti.id=="ueditor_textarea_"+editor.options.textarea){textarea=ti;break;}}}else{textarea=editor.textarea;}}if(!textarea){form.appendChild(textarea=domUtils.createElement(document,"textarea",{name:editor.options.textarea,id:"ueditor_textarea_"+editor.options.textarea,style:"display:none"}));//不要产生多个textarea\neditor.textarea=textarea;}!textarea.getAttribute("name")&&textarea.setAttribute("name",editor.options.textarea);textarea.value=editor.hasContents()?editor.options.allHtmlEnabled?editor.getAllHtml():editor.getContent(null,null,true):"";}function loadPlugins(me){//初始化插件\nfor(var pi in UE.plugins){UE.plugins[pi].call(me);}}function checkCurLang(I18N){for(var lang in I18N){return lang;}}function langReadied(me){me.langIsReady=true;me.fireEvent("langReady");}/**\n     * 编辑器准备就绪后会触发该事件\n     * @module UE\n     * @class Editor\n     * @event ready\n     * @remind render方法执行完成之后,会触发该事件\n     * @remind\n     * @example\n     * ```javascript\n     * editor.addListener( \'ready\', function( editor ) {\n     *     editor.execCommand( \'focus\' ); //编辑器家在完成后，让编辑器拿到焦点\n     * } );\n     * ```\n     *//**\n     * 执行destroy方法,会触发该事件\n     * @module UE\n     * @class Editor\n     * @event destroy\n     * @see UE.Editor:destroy()\n     *//**\n     * 执行reset方法,会触发该事件\n     * @module UE\n     * @class Editor\n     * @event reset\n     * @see UE.Editor:reset()\n     *//**\n     * 执行focus方法,会触发该事件\n     * @module UE\n     * @class Editor\n     * @event focus\n     * @see UE.Editor:focus(Boolean)\n     *//**\n     * 语言加载完成会触发该事件\n     * @module UE\n     * @class Editor\n     * @event langReady\n     *//**\n     * 运行命令之后会触发该命令\n     * @module UE\n     * @class Editor\n     * @event beforeExecCommand\n     *//**\n     * 运行命令之后会触发该命令\n     * @module UE\n     * @class Editor\n     * @event afterExecCommand\n     *//**\n     * 运行命令之前会触发该命令\n     * @module UE\n     * @class Editor\n     * @event firstBeforeExecCommand\n     *//**\n     * 在getContent方法执行之前会触发该事件\n     * @module UE\n     * @class Editor\n     * @event beforeGetContent\n     * @see UE.Editor:getContent()\n     *//**\n     * 在getContent方法执行之后会触发该事件\n     * @module UE\n     * @class Editor\n     * @event afterGetContent\n     * @see UE.Editor:getContent()\n     *//**\n     * 在getAllHtml方法执行时会触发该事件\n     * @module UE\n     * @class Editor\n     * @event getAllHtml\n     * @see UE.Editor:getAllHtml()\n     *//**\n     * 在setContent方法执行之前会触发该事件\n     * @module UE\n     * @class Editor\n     * @event beforeSetContent\n     * @see UE.Editor:setContent(String)\n     *//**\n     * 在setContent方法执行之后会触发该事件\n     * @module UE\n     * @class Editor\n     * @event afterSetContent\n     * @see UE.Editor:setContent(String)\n     *//**\n     * 每当编辑器内部选区发生改变时，将触发该事件\n     * @event selectionchange\n     * @warning 该事件的触发非常频繁，不建议在该事件的处理过程中做重量级的处理\n     * @example\n     * ```javascript\n     * editor.addListener( \'selectionchange\', function( editor ) {\n     *     console.log(\'选区发生改变\');\n     * }\n     *//**\n     * 在所有selectionchange的监听函数执行之前，会触发该事件\n     * @module UE\n     * @class Editor\n     * @event beforeSelectionChange\n     * @see UE.Editor:selectionchange\n     *//**\n     * 在所有selectionchange的监听函数执行完之后，会触发该事件\n     * @module UE\n     * @class Editor\n     * @event afterSelectionChange\n     * @see UE.Editor:selectionchange\n     *//**\n     * 编辑器内容发生改变时会触发该事件\n     * @module UE\n     * @class Editor\n     * @event contentChange\n     *//**\n     * 以默认参数构建一个编辑器实例\n     * @constructor\n     * @remind 通过 改构造方法实例化的编辑器,不带ui层.需要render到一个容器,编辑器实例才能正常渲染到页面\n     * @example\n     * ```javascript\n     * var editor = new UE.Editor();\n     * editor.execCommand(\'blod\');\n     * ```\n     * @see UE.Config\n     *//**\n     * 以给定的参数集合创建一个编辑器实例，对于未指定的参数，将应用默认参数。\n     * @constructor\n     * @remind 通过 改构造方法实例化的编辑器,不带ui层.需要render到一个容器,编辑器实例才能正常渲染到页面\n     * @param { Object } setting 创建编辑器的参数\n     * @example\n     * ```javascript\n     * var editor = new UE.Editor();\n     * editor.execCommand(\'blod\');\n     * ```\n     * @see UE.Config\n     */var Editor=UE.Editor=function(options){var me=this;me.uid=uid++;EventBase.call(me);me.commands={};me.options=utils.extend(utils.clone(options||{}),_ueditor2.default,true);me.shortcutkeys={};me.inputRules=[];me.outputRules=[];//设置默认的常用属性\nme.setOpt(Editor.defaultOptions(me));/* 尝试异步加载后台配置 */me.loadServerConfig();if(!utils.isEmptyObject(UE.I18N)){//修改默认的语言类型\nme.options.lang=checkCurLang(UE.I18N);UE.plugin.load(me);langReadied(me);}else{utils.loadFile(document,{src:me.options.langPath+me.options.lang+"/"+me.options.lang+".js",tag:"script",type:"text/javascript",defer:"defer"},function(){UE.plugin.load(me);langReadied(me);});}UE.instants["ueditorInstant"+me.uid]=me;};Editor.prototype={registerCommand:function registerCommand(name,obj){this.commands[name]=obj;},/**\n         * 编辑器对外提供的监听ready事件的接口， 通过调用该方法，达到的效果与监听ready事件是一致的\n         * @method ready\n         * @param { Function } fn 编辑器ready之后所执行的回调, 如果在注册事件之前编辑器已经ready，将会\n         * 立即触发该回调。\n         * @remind 需要等待编辑器加载完成后才能执行的代码,可以使用该方法传入\n         * @example\n         * ```javascript\n         * editor.ready( function( editor ) {\n         *     editor.setContent(\'初始化完毕\');\n         * } );\n         * ```\n         * @see UE.Editor.event:ready\n         */ready:function ready(fn){var me=this;if(fn){me.isReady?fn.apply(me):me.addListener("ready",fn);}},/**\n         * 该方法是提供给插件里面使用，设置配置项默认值\n         * @method setOpt\n         * @warning 三处设置配置项的优先级: 实例化时传入参数 > setOpt()设置 > config文件里设置\n         * @warning 该方法仅供编辑器插件内部和编辑器初始化时调用，其他地方不能调用。\n         * @param { String } key 编辑器的可接受的选项名称\n         * @param { * } val  该选项可接受的值\n         * @example\n         * ```javascript\n         * editor.setOpt( \'initContent\', \'欢迎使用编辑器\' );\n         * ```\n         *//**\n         * 该方法是提供给插件里面使用，以{key:value}集合的方式设置插件内用到的配置项默认值\n         * @method setOpt\n         * @warning 三处设置配置项的优先级: 实例化时传入参数 > setOpt()设置 > config文件里设置\n         * @warning 该方法仅供编辑器插件内部和编辑器初始化时调用，其他地方不能调用。\n         * @param { Object } options 将要设置的选项的键值对对象\n         * @example\n         * ```javascript\n         * editor.setOpt( {\n         *     \'initContent\': \'欢迎使用编辑器\'\n         * } );\n         * ```\n         */setOpt:function setOpt(key,val){var obj={};if(utils.isString(key)){obj[key]=val;}else{obj=key;}utils.extend(this.options,obj,true);},getOpt:function getOpt(key){return this.options[key];},/**\n         * 销毁编辑器实例，使用textarea代替\n         * @method destroy\n         * @example\n         * ```javascript\n         * editor.destroy();\n         * ```\n         */destroy:function destroy(){var me=this;me.fireEvent("destroy");var container=me.container.parentNode;var textarea=me.textarea;if(!textarea){textarea=document.createElement("textarea");container.parentNode.insertBefore(textarea,container);}else{textarea.style.display="";}textarea.style.width=me.iframe.offsetWidth+"px";textarea.style.height=me.iframe.offsetHeight+"px";textarea.value=me.getContent();textarea.id=me.key;container.innerHTML="";domUtils.remove(container);var key=me.key;//trace:2004\nfor(var p in me){if(me.hasOwnProperty(p)){delete this[p];}}UE.delEditor(key);},/**\n         * 渲染编辑器的DOM到指定容器\n         * @method render\n         * @param { String } containerId 指定一个容器ID\n         * @remind 执行该方法,会触发ready事件\n         * @warning 必须且只能调用一次\n         *//**\n         * 渲染编辑器的DOM到指定容器\n         * @method render\n         * @param { Element } containerDom 直接指定容器对象\n         * @remind 执行该方法,会触发ready事件\n         * @warning 必须且只能调用一次\n         */render:function render(container){var me=this,options=me.options,getStyleValue=function getStyleValue(attr){return parseInt(domUtils.getComputedStyle(container,attr));};if(utils.isString(container)){container=document.getElementById(container);}if(container){if(options.initialFrameWidth){options.minFrameWidth=options.initialFrameWidth;}else{options.minFrameWidth=options.initialFrameWidth=container.offsetWidth;}if(options.initialFrameHeight){options.minFrameHeight=options.initialFrameHeight;}else{options.initialFrameHeight=options.minFrameHeight=container.offsetHeight;}container.style.width=/%$/.test(options.initialFrameWidth)?"100%":options.initialFrameWidth-getStyleValue("padding-left")-getStyleValue("padding-right")+"px";container.style.height=/%$/.test(options.initialFrameHeight)?"100%":options.initialFrameHeight-getStyleValue("padding-top")-getStyleValue("padding-bottom")+"px";container.style.zIndex=options.zIndex;var html=(ie&&browser.version<9?"":"<!DOCTYPE html>")+"<html xmlns=\'http://www.w3.org/1999/xhtml\' class=\'view\' >"+"<head>"+"<style type=\'text/css\'>"+//设置四周的留边\n".view{padding:0;word-wrap:break-word;cursor:text;height:90%;}\\n"+//设置默认字体和字号\n//font-family不能呢随便改，在safari下fillchar会有解析问题\n"body{margin:8px;font-family:sans-serif;font-size:16px;}"+//设置段落间距\n"p{margin:5px 0;}</style>"+(options.iframeCssUrl?"<link rel=\'stylesheet\' type=\'text/css\' href=\'"+utils.unhtml(options.iframeCssUrl)+"\'/>":"")+(options.initialStyle?"<style>"+options.initialStyle+"</style>":"")+"</head>"+"<body class=\'view\' ></body>"+"<script type=\'text/javascript\' "+(ie?"defer=\'defer\'":"")+" id=\'_initialScript\'>"+"setTimeout(function(){editor = window.parent.UE.instants[\'ueditorInstant"+me.uid+"\'];editor._setup(document);},0);"+"var _tmpScript = document.getElementById(\'_initialScript\');_tmpScript.parentNode.removeChild(_tmpScript);"+"<\/script>"+(options.iframeJsUrl?"<script type=\'text/javascript\' src=\'"+utils.unhtml(options.iframeJsUrl)+"\'><\/script>":"")+"</html>";container.appendChild(domUtils.createElement(document,"iframe",{id:"ueditor_"+me.uid,width:"100%",height:"100%",frameborder:"0",//先注释掉了，加的原因忘记了，但开启会直接导致全屏模式下内容多时不会出现滚动条\n//                    scrolling :\'no\',\nsrc:"javascript:void(function(){document.open();"+(options.customDomain&&document.domain!=location.hostname?\'document.domain="\'+document.domain+\'";\':"")+\'document.write("\'+html+\'");document.close();}())\'}));container.style.overflow="hidden";//解决如果是给定的百分比，会导致高度算不对的问题\nsetTimeout(function(){if(/%$/.test(options.initialFrameWidth)){options.minFrameWidth=options.initialFrameWidth=container.offsetWidth;//如果这里给定宽度，会导致ie在拖动窗口大小时，编辑区域不随着变化\n//                        container.style.width = options.initialFrameWidth + \'px\';\n}if(/%$/.test(options.initialFrameHeight)){options.minFrameHeight=options.initialFrameHeight=container.offsetHeight;container.style.height=options.initialFrameHeight+"px";}});}},/**\n         * 编辑器初始化\n         * @method _setup\n         * @private\n         * @param { Element } doc 编辑器Iframe中的文档对象\n         */_setup:function _setup(doc){var me=this,options=me.options;if(ie){doc.body.disabled=true;doc.body.contentEditable=true;doc.body.disabled=false;}else{doc.body.contentEditable=true;}doc.body.spellcheck=false;me.document=doc;me.window=doc.defaultView||doc.parentWindow;me.iframe=me.window.frameElement;me.body=doc.body;me.selection=new dom.Selection(doc);//gecko初始化就能得到range,无法判断isFocus了\nvar geckoSel;if(browser.gecko&&(geckoSel=this.selection.getNative())){geckoSel.removeAllRanges();}this._initEvents();//为form提交提供一个隐藏的textarea\nfor(var form=this.iframe.parentNode;!domUtils.isBody(form);form=form.parentNode){if(form.tagName=="FORM"){me.form=form;if(me.options.autoSyncData){domUtils.on(me.window,"blur",function(){setValue(form,me);});}else{domUtils.on(form,"submit",function(){setValue(this,me);});}break;}}if(options.initialContent){if(options.autoClearinitialContent){var oldExecCommand=me.execCommand;me.execCommand=function(){me.fireEvent("firstBeforeExecCommand");return oldExecCommand.apply(me,arguments);};this._setDefaultContent(options.initialContent);}else this.setContent(options.initialContent,false,true);}//编辑器不能为空内容\nif(domUtils.isEmptyNode(me.body)){me.body.innerHTML="<p>"+(browser.ie?"":"<br/>")+"</p>";}//如果要求focus, 就把光标定位到内容开始\nif(options.focus){setTimeout(function(){me.focus(me.options.focusInEnd);//如果自动清除开着，就不需要做selectionchange;\n!me.options.autoClearinitialContent&&me._selectionChange();},0);}if(!me.container){me.container=this.iframe.parentNode;}if(options.fullscreen&&me.ui){me.ui.setFullScreen(true);}try{me.document.execCommand("2D-position",false,false);}catch(e){}try{me.document.execCommand("enableInlineTableEditing",false,false);}catch(e){}try{me.document.execCommand("enableObjectResizing",false,false);}catch(e){}//挂接快捷键\nme._bindshortcutKeys();me.isReady=1;me.fireEvent("ready");options.onready&&options.onready.call(me);if(!browser.ie9below){domUtils.on(me.window,["blur","focus"],function(e){//chrome下会出现alt+tab切换时，导致选区位置不对\nif(e.type=="blur"){me._bakRange=me.selection.getRange();try{me._bakNativeRange=me.selection.getNative().getRangeAt(0);me.selection.getNative().removeAllRanges();}catch(e){me._bakNativeRange=null;}}else{try{me._bakRange&&me._bakRange.select();}catch(e){}}});}//trace:1518 ff3.6body不够寛，会导致点击空白处无法获得焦点\nif(browser.gecko&&browser.version<=10902){//修复ff3.6初始化进来，不能点击获得焦点\nme.body.contentEditable=false;setTimeout(function(){me.body.contentEditable=true;},100);setInterval(function(){me.body.style.height=me.iframe.offsetHeight-20+"px";},100);}!options.isShow&&me.setHide();options.readonly&&me.setDisabled();},/**\n         * 同步数据到编辑器所在的form\n         * 从编辑器的容器节点向上查找form元素，若找到，就同步编辑内容到找到的form里，为提交数据做准备，主要用于是手动提交的情况\n         * 后台取得数据的键值，使用你容器上的name属性，如果没有就使用参数里的textarea项\n         * @method sync\n         * @example\n         * ```javascript\n         * editor.sync();\n         * form.sumbit(); //form变量已经指向了form元素\n         * ```\n         *//**\n         * 根据传入的formId，在页面上查找要同步数据的表单，若找到，就同步编辑内容到找到的form里，为提交数据做准备\n         * 后台取得数据的键值，该键值默认使用给定的编辑器容器的name属性，如果没有name属性则使用参数项里给定的“textarea”项\n         * @method sync\n         * @param { String } formID 指定一个要同步数据的form的id,编辑器的数据会同步到你指定form下\n         */sync:function sync(formId){var me=this,form=formId?document.getElementById(formId):domUtils.findParent(me.iframe.parentNode,function(node){return node.tagName=="FORM";},true);form&&setValue(form,me);},/**\n         * 设置编辑器高度\n         * @method setHeight\n         * @remind 当配置项autoHeightEnabled为真时,该方法无效\n         * @param { Number } number 设置的高度值，纯数值，不带单位\n         * @example\n         * ```javascript\n         * editor.setHeight(number);\n         * ```\n         */setHeight:function setHeight(height,notSetHeight){if(height!==parseInt(this.iframe.parentNode.style.height)){this.iframe.parentNode.style.height=height+"px";}!notSetHeight&&(this.options.minFrameHeight=this.options.initialFrameHeight=height);this.body.style.height=height+"px";!notSetHeight&&this.trigger("setHeight");},/**\n         * 为编辑器的编辑命令提供快捷键\n         * 这个接口是为插件扩展提供的接口,主要是为新添加的插件，如果需要添加快捷键，所提供的接口\n         * @method addshortcutkey\n         * @param { Object } keyset 命令名和快捷键键值对对象，多个按钮的快捷键用“＋”分隔\n         * @example\n         * ```javascript\n         * editor.addshortcutkey({\n         *     "Bold" : "ctrl+66",//^B\n         *     "Italic" : "ctrl+73", //^I\n         * });\n         * ```\n         *//**\n         * 这个接口是为插件扩展提供的接口,主要是为新添加的插件，如果需要添加快捷键，所提供的接口\n         * @method addshortcutkey\n         * @param { String } cmd 触发快捷键时，响应的命令\n         * @param { String } keys 快捷键的字符串，多个按钮用“＋”分隔\n         * @example\n         * ```javascript\n         * editor.addshortcutkey("Underline", "ctrl+85"); //^U\n         * ```\n         */addshortcutkey:function addshortcutkey(cmd,keys){var obj={};if(keys){obj[cmd]=keys;}else{obj=cmd;}utils.extend(this.shortcutkeys,obj);},/**\n         * 对编辑器设置keydown事件监听，绑定快捷键和命令，当快捷键组合触发成功，会响应对应的命令\n         * @method _bindshortcutKeys\n         * @private\n         */_bindshortcutKeys:function _bindshortcutKeys(){var me=this,shortcutkeys=this.shortcutkeys;me.addListener("keydown",function(type,e){var keyCode=e.keyCode||e.which;for(var i in shortcutkeys){var tmp=shortcutkeys[i].split(",");for(var t=0,ti;ti=tmp[t++];){ti=ti.split(":");var key=ti[0],param=ti[1];if(/^(ctrl)(\\+shift)?\\+(\\d+)$/.test(key.toLowerCase())||/^(\\d+)$/.test(key)){if((RegExp.$1=="ctrl"?e.ctrlKey||e.metaKey:0)&&(RegExp.$2!=""?e[RegExp.$2.slice(1)+"Key"]:1)&&keyCode==RegExp.$3||keyCode==RegExp.$1){if(me.queryCommandState(i,param)!=-1)me.execCommand(i,param);domUtils.preventDefault(e);}}}}});},/**\n         * 获取编辑器的内容\n         * @method getContent\n         * @warning 该方法获取到的是经过编辑器内置的过滤规则进行过滤后得到的内容\n         * @return { String } 编辑器的内容字符串, 如果编辑器的内容为空，或者是空的标签内容（如:”&lt;p&gt;&lt;br/&gt;&lt;/p&gt;“）， 则返回空字符串\n         * @example\n         * ```javascript\n         * //编辑器html内容:<p>1<strong>2<em>34</em>5</strong>6</p>\n         * var content = editor.getContent(); //返回值:<p>1<strong>2<em>34</em>5</strong>6</p>\n         * ```\n         *//**\n         * 获取编辑器的内容。 可以通过参数定义编辑器内置的判空规则\n         * @method getContent\n         * @param { Function } fn 自定的判空规则， 要求该方法返回一个boolean类型的值，\n         *                      代表当前编辑器的内容是否空，\n         *                      如果返回true， 则该方法将直接返回空字符串；如果返回false，则编辑器将返回\n         *                      经过内置过滤规则处理后的内容。\n         * @remind 该方法在处理包含有初始化内容的时候能起到很好的作用。\n         * @warning 该方法获取到的是经过编辑器内置的过滤规则进行过滤后得到的内容\n         * @return { String } 编辑器的内容字符串\n         * @example\n         * ```javascript\n         * // editor 是一个编辑器的实例\n         * var content = editor.getContent( function ( editor ) {\n         *      return editor.body.innerHTML === \'欢迎使用UEditor\'; //返回空字符串\n         * } );\n         * ```\n         */getContent:function getContent(cmd,fn,notSetCursor,ignoreBlank,formatter){var me=this;if(cmd&&utils.isFunction(cmd)){fn=cmd;cmd="";}if(fn?!fn():!this.hasContents()){return"";}me.fireEvent("beforegetcontent");var root=UE.htmlparser(me.body.innerHTML,ignoreBlank);me.filterOutputRule(root);me.fireEvent("aftergetcontent",cmd,root);return root.toHtml(formatter);},/**\n         * 取得完整的html代码，可以直接显示成完整的html文档\n         * @method getAllHtml\n         * @return { String } 编辑器的内容html文档字符串\n         * @eaxmple\n         * ```javascript\n         * editor.getAllHtml(); //返回格式大致是: <html><head>...</head><body>...</body></html>\n         * ```\n         */getAllHtml:function getAllHtml(){var me=this,headHtml=[],html="";me.fireEvent("getAllHtml",headHtml);if(browser.ie&&browser.version>8){var headHtmlForIE9="";utils.each(me.document.styleSheets,function(si){headHtmlForIE9+=si.href?\'<link rel="stylesheet" type="text/css" href="\'+si.href+\'" />\':"<style>"+si.cssText+"</style>";});utils.each(me.document.getElementsByTagName("script"),function(si){headHtmlForIE9+=si.outerHTML;});}return"<html><head>"+(me.options.charset?\'<meta http-equiv="Content-Type" content="text/html; charset=\'+me.options.charset+\'"/>\':"")+(headHtmlForIE9||me.document.getElementsByTagName("head")[0].innerHTML)+headHtml.join("\\n")+"</head>"+"<body "+(ie&&browser.version<9?\'class="view"\':"")+">"+me.getContent(null,null,true)+"</body></html>";},/**\n         * 得到编辑器的纯文本内容，但会保留段落格式\n         * @method getPlainTxt\n         * @return { String } 编辑器带段落格式的纯文本内容字符串\n         * @example\n         * ```javascript\n         * //编辑器html内容:<p><strong>1</strong></p><p><strong>2</strong></p>\n         * console.log(editor.getPlainTxt()); //输出:"1\\n2\\n\n         * ```\n         */getPlainTxt:function getPlainTxt(){var reg=new RegExp(domUtils.fillChar,"g"),html=this.body.innerHTML.replace(/[\\n\\r]/g,"");//ie要先去了\\n在处理\nhtml=html.replace(/<(p|div)[^>]*>(<br\\/?>|&nbsp;)<\\/\\1>/gi,"\\n").replace(/<br\\/?>/gi,"\\n").replace(/<[^>/]+>/g,"").replace(/(\\n)?<\\/([^>]+)>/g,function(a,b,c){return dtd.$block[c]?"\\n":b?b:"";});//取出来的空格会有c2a0会变成乱码，处理这种情况\\u00a0\nreturn html.replace(reg,"").replace(/\\u00a0/g," ").replace(/&nbsp;/g," ");},/**\n         * 获取编辑器中的纯文本内容,没有段落格式\n         * @method getContentTxt\n         * @return { String } 编辑器不带段落格式的纯文本内容字符串\n         * @example\n         * ```javascript\n         * //编辑器html内容:<p><strong>1</strong></p><p><strong>2</strong></p>\n         * console.log(editor.getPlainTxt()); //输出:"12\n         * ```\n         */getContentTxt:function getContentTxt(){var reg=new RegExp(domUtils.fillChar,"g");//取出来的空格会有c2a0会变成乱码，处理这种情况\\u00a0\nreturn this.body[browser.ie?"innerText":"textContent"].replace(reg,"").replace(/\\u00a0/g," ");},/**\n         * 设置编辑器的内容，可修改编辑器当前的html内容\n         * @method setContent\n         * @warning 通过该方法插入的内容，是经过编辑器内置的过滤规则进行过滤后得到的内容\n         * @warning 该方法会触发selectionchange事件\n         * @param { String } html 要插入的html内容\n         * @example\n         * ```javascript\n         * editor.getContent(\'<p>test</p>\');\n         * ```\n         *//**\n         * 设置编辑器的内容，可修改编辑器当前的html内容\n         * @method setContent\n         * @warning 通过该方法插入的内容，是经过编辑器内置的过滤规则进行过滤后得到的内容\n         * @warning 该方法会触发selectionchange事件\n         * @param { String } html 要插入的html内容\n         * @param { Boolean } isAppendTo 若传入true，不清空原来的内容，在最后插入内容，否则，清空内容再插入\n         * @example\n         * ```javascript\n         * //假设设置前的编辑器内容是 <p>old text</p>\n         * editor.setContent(\'<p>new text</p>\', true); //插入的结果是<p>old text</p><p>new text</p>\n         * ```\n         */setContent:function setContent(html,isAppendTo,notFireSelectionchange){var me=this;me.fireEvent("beforesetcontent",html);var root=UE.htmlparser(html);me.filterInputRule(root);html=root.toHtml();me.body.innerHTML=(isAppendTo?me.body.innerHTML:"")+html;function isCdataDiv(node){return node.tagName=="DIV"&&node.getAttribute("cdata_tag");}//给文本或者inline节点套p标签\nif(me.options.enterTag=="p"){var child=this.body.firstChild,tmpNode;if(!child||child.nodeType==1&&(dtd.$cdata[child.tagName]||isCdataDiv(child)||domUtils.isCustomeNode(child))&&child===this.body.lastChild){this.body.innerHTML="<p>"+(browser.ie?"&nbsp;":"<br/>")+"</p>"+this.body.innerHTML;}else{var p=me.document.createElement("p");while(child){while(child&&(child.nodeType==3||child.nodeType==1&&dtd.p[child.tagName]&&!dtd.$cdata[child.tagName])){tmpNode=child.nextSibling;p.appendChild(child);child=tmpNode;}if(p.firstChild){if(!child){me.body.appendChild(p);break;}else{child.parentNode.insertBefore(p,child);p=me.document.createElement("p");}}child=child.nextSibling;}}}me.fireEvent("aftersetcontent");me.fireEvent("contentchange");!notFireSelectionchange&&me._selectionChange();//清除保存的选区\nme._bakRange=me._bakIERange=me._bakNativeRange=null;//trace:1742 setContent后gecko能得到焦点问题\nvar geckoSel;if(browser.gecko&&(geckoSel=this.selection.getNative())){geckoSel.removeAllRanges();}if(me.options.autoSyncData){me.form&&setValue(me.form,me);}},/**\n         * 让编辑器获得焦点，默认focus到编辑器头部\n         * @method focus\n         * @example\n         * ```javascript\n         * editor.focus()\n         * ```\n         *//**\n         * 让编辑器获得焦点，toEnd确定focus位置\n         * @method focus\n         * @param { Boolean } toEnd 默认focus到编辑器头部，toEnd为true时focus到内容尾部\n         * @example\n         * ```javascript\n         * editor.focus(true)\n         * ```\n         */focus:function focus(toEnd){try{var me=this,rng=me.selection.getRange();if(toEnd){var node=me.body.lastChild;if(node&&node.nodeType==1&&!dtd.$empty[node.tagName]){if(domUtils.isEmptyBlock(node)){rng.setStartAtFirst(node);}else{rng.setStartAtLast(node);}rng.collapse(true);}rng.setCursor(true);}else{if(!rng.collapsed&&domUtils.isBody(rng.startContainer)&&rng.startOffset==0){var node=me.body.firstChild;if(node&&node.nodeType==1&&!dtd.$empty[node.tagName]){rng.setStartAtFirst(node).collapse(true);}}rng.select(true);}this.fireEvent("focus selectionchange");}catch(e){}},isFocus:function isFocus(){return this.selection.isFocus();},blur:function blur(){var sel=this.selection.getNative();if(sel.empty&&browser.ie){var nativeRng=document.body.createTextRange();nativeRng.moveToElementText(document.body);nativeRng.collapse(true);nativeRng.select();sel.empty();}else{sel.removeAllRanges();}//this.fireEvent(\'blur selectionchange\');\n},/**\n         * 初始化UE事件及部分事件代理\n         * @method _initEvents\n         * @private\n         */_initEvents:function _initEvents(){var me=this,doc=me.document,win=me.window;me._proxyDomEvent=utils.bind(me._proxyDomEvent,me);domUtils.on(doc,["click","contextmenu","mousedown","keydown","keyup","keypress","mouseup","mouseover","mouseout","selectstart"],me._proxyDomEvent);domUtils.on(win,["focus","blur"],me._proxyDomEvent);domUtils.on(me.body,"drop",function(e){//阻止ff下默认的弹出新页面打开图片\nif(browser.gecko&&e.stopPropagation){e.stopPropagation();}me.fireEvent("contentchange");});domUtils.on(doc,["mouseup","keydown"],function(evt){//特殊键不触发selectionchange\nif(evt.type=="keydown"&&(evt.ctrlKey||evt.metaKey||evt.shiftKey||evt.altKey)){return;}if(evt.button==2)return;me._selectionChange(250,evt);});},/**\n         * 触发事件代理\n         * @method _proxyDomEvent\n         * @private\n         * @return { * } fireEvent的返回值\n         * @see UE.EventBase:fireEvent(String)\n         */_proxyDomEvent:function _proxyDomEvent(evt){if(this.fireEvent("before"+evt.type.replace(/^on/,"").toLowerCase())===false){return false;}if(this.fireEvent(evt.type.replace(/^on/,""),evt)===false){return false;}return this.fireEvent("after"+evt.type.replace(/^on/,"").toLowerCase());},/**\n         * 变化选区\n         * @method _selectionChange\n         * @private\n         */_selectionChange:function _selectionChange(delay,evt){var me=this;//有光标才做selectionchange 为了解决未focus时点击source不能触发更改工具栏状态的问题（source命令notNeedUndo=1）\n//            if ( !me.selection.isFocus() ){\n//                return;\n//            }\nvar hackForMouseUp=false;var mouseX,mouseY;if(browser.ie&&browser.version<9&&evt&&evt.type=="mouseup"){var range=this.selection.getRange();if(!range.collapsed){hackForMouseUp=true;mouseX=evt.clientX;mouseY=evt.clientY;}}clearTimeout(_selectionChangeTimer);_selectionChangeTimer=setTimeout(function(){if(!me.selection||!me.selection.getNative()){return;}//修复一个IE下的bug: 鼠标点击一段已选择的文本中间时，可能在mouseup后的一段时间内取到的range是在selection的type为None下的错误值.\n//IE下如果用户是拖拽一段已选择文本，则不会触发mouseup事件，所以这里的特殊处理不会对其有影响\nvar ieRange;if(hackForMouseUp&&me.selection.getNative().type=="None"){ieRange=me.document.body.createTextRange();try{ieRange.moveToPoint(mouseX,mouseY);}catch(ex){ieRange=null;}}var bakGetIERange;if(ieRange){bakGetIERange=me.selection.getIERange;me.selection.getIERange=function(){return ieRange;};}me.selection.cache();if(bakGetIERange){me.selection.getIERange=bakGetIERange;}if(me.selection._cachedRange&&me.selection._cachedStartElement){me.fireEvent("beforeselectionchange");// 第二个参数causeByUi为true代表由用户交互造成的selectionchange.\nme.fireEvent("selectionchange",!!evt);me.fireEvent("afterselectionchange");me.selection.clear();}},delay||50);},/**\n         * 执行编辑命令\n         * @method _callCmdFn\n         * @private\n         * @param { String } fnName 函数名称\n         * @param { * } args 传给命令函数的参数\n         * @return { * } 返回命令函数运行的返回值\n         */_callCmdFn:function _callCmdFn(fnName,args){var cmdName=args[0].toLowerCase(),cmd,cmdFn;cmd=this.commands[cmdName]||UE.commands[cmdName];cmdFn=cmd&&cmd[fnName];//没有querycommandstate或者没有command的都默认返回0\nif((!cmd||!cmdFn)&&fnName=="queryCommandState"){return 0;}else if(cmdFn){return cmdFn.apply(this,args);}},/**\n         * 执行编辑命令cmdName，完成富文本编辑效果\n         * @method execCommand\n         * @param { String } cmdName 需要执行的命令\n         * @remind 具体命令的使用请参考<a href="#COMMAND.LIST">命令列表</a>\n         * @return { * } 返回命令函数运行的返回值\n         * @example\n         * ```javascript\n         * editor.execCommand(cmdName);\n         * ```\n         */execCommand:function execCommand(cmdName){cmdName=cmdName.toLowerCase();var me=this,result,cmd=me.commands[cmdName]||UE.commands[cmdName];if(!cmd||!cmd.execCommand){return null;}if(!cmd.notNeedUndo&&!me.__hasEnterExecCommand){me.__hasEnterExecCommand=true;if(me.queryCommandState.apply(me,arguments)!=-1){me.fireEvent("saveScene");me.fireEvent.apply(me,["beforeexeccommand",cmdName].concat(arguments));result=this._callCmdFn("execCommand",arguments);//保存场景时，做了内容对比，再看是否进行contentchange触发，这里多触发了一次，去掉\n//                    (!cmd.ignoreContentChange && !me._ignoreContentChange) && me.fireEvent(\'contentchange\');\nme.fireEvent.apply(me,["afterexeccommand",cmdName].concat(arguments));me.fireEvent("saveScene");}me.__hasEnterExecCommand=false;}else{result=this._callCmdFn("execCommand",arguments);!me.__hasEnterExecCommand&&!cmd.ignoreContentChange&&!me._ignoreContentChange&&me.fireEvent("contentchange");}!me.__hasEnterExecCommand&&!cmd.ignoreContentChange&&!me._ignoreContentChange&&me._selectionChange();return result;},/**\n         * 根据传入的command命令，查选编辑器当前的选区，返回命令的状态\n         * @method  queryCommandState\n         * @param { String } cmdName 需要查询的命令名称\n         * @remind 具体命令的使用请参考<a href="#COMMAND.LIST">命令列表</a>\n         * @return { Number } number 返回放前命令的状态，返回值三种情况：(-1|0|1)\n         * @example\n         * ```javascript\n         * editor.queryCommandState(cmdName)  => (-1|0|1)\n         * ```\n         * @see COMMAND.LIST\n         */queryCommandState:function queryCommandState(cmdName){return this._callCmdFn("queryCommandState",arguments);},/**\n         * 根据传入的command命令，查选编辑器当前的选区，根据命令返回相关的值\n         * @method queryCommandValue\n         * @param { String } cmdName 需要查询的命令名称\n         * @remind 具体命令的使用请参考<a href="#COMMAND.LIST">命令列表</a>\n         * @remind 只有部分插件有此方法\n         * @return { * } 返回每个命令特定的当前状态值\n         * @grammar editor.queryCommandValue(cmdName)  =>  {*}\n         * @see COMMAND.LIST\n         */queryCommandValue:function queryCommandValue(cmdName){return this._callCmdFn("queryCommandValue",arguments);},/**\n         * 检查编辑区域中是否有内容\n         * @method  hasContents\n         * @remind 默认有文本内容，或者有以下节点都不认为是空\n         * table,ul,ol,dl,iframe,area,base,col,hr,img,embed,input,link,meta,param\n         * @return { Boolean } 检查有内容返回true，否则返回false\n         * @example\n         * ```javascript\n         * editor.hasContents()\n         * ```\n         *//**\n         * 检查编辑区域中是否有内容，若包含参数tags中的节点类型，直接返回true\n         * @method  hasContents\n         * @param { Array } tags 传入数组判断时用到的节点类型\n         * @return { Boolean } 若文档中包含tags数组里对应的tag，返回true，否则返回false\n         * @example\n         * ```javascript\n         * editor.hasContents([\'span\']);\n         * ```\n         */hasContents:function hasContents(tags){if(tags){for(var i=0,ci;ci=tags[i++];){if(this.document.getElementsByTagName(ci).length>0){return true;}}}if(!domUtils.isEmptyBlock(this.body)){return true;}//随时添加,定义的特殊标签如果存在，不能认为是空\ntags=["div"];for(i=0;ci=tags[i++];){var nodes=domUtils.getElementsByTagName(this.document,ci);for(var n=0,cn;cn=nodes[n++];){if(domUtils.isCustomeNode(cn)){return true;}}}return false;},/**\n         * 重置编辑器，可用来做多个tab使用同一个编辑器实例\n         * @method  reset\n         * @remind 此方法会清空编辑器内容，清空回退列表，会触发reset事件\n         * @example\n         * ```javascript\n         * editor.reset()\n         * ```\n         */reset:function reset(){this.fireEvent("reset");},/**\n         * 设置当前编辑区域可以编辑\n         * @method setEnabled\n         * @example\n         * ```javascript\n         * editor.setEnabled()\n         * ```\n         */setEnabled:function setEnabled(){var me=this,range;if(me.body.contentEditable=="false"){me.body.contentEditable=true;range=me.selection.getRange();//有可能内容丢失了\ntry{range.moveToBookmark(me.lastBk);delete me.lastBk;}catch(e){range.setStartAtFirst(me.body).collapse(true);}range.select(true);if(me.bkqueryCommandState){me.queryCommandState=me.bkqueryCommandState;delete me.bkqueryCommandState;}if(me.bkqueryCommandValue){me.queryCommandValue=me.bkqueryCommandValue;delete me.bkqueryCommandValue;}me.fireEvent("selectionchange");}},enable:function enable(){return this.setEnabled();},/** 设置当前编辑区域不可编辑\n         * @method setDisabled\n         *//** 设置当前编辑区域不可编辑,except中的命令除外\n         * @method setDisabled\n         * @param { String } except 例外命令的字符串\n         * @remind 即使设置了disable，此处配置的例外命令仍然可以执行\n         * @example\n         * ```javascript\n         * editor.setDisabled(\'bold\'); //禁用工具栏中除加粗之外的所有功能\n         * ```\n         *//** 设置当前编辑区域不可编辑,except中的命令除外\n         * @method setDisabled\n         * @param { Array } except 例外命令的字符串数组，数组中的命令仍然可以执行\n         * @remind 即使设置了disable，此处配置的例外命令仍然可以执行\n         * @example\n         * ```javascript\n         * editor.setDisabled([\'bold\',\'insertimage\']); //禁用工具栏中除加粗和插入图片之外的所有功能\n         * ```\n         */setDisabled:function setDisabled(except){var me=this;except=except?utils.isArray(except)?except:[except]:[];if(me.body.contentEditable=="true"){if(!me.lastBk){me.lastBk=me.selection.getRange().createBookmark(true);}me.body.contentEditable=false;me.bkqueryCommandState=me.queryCommandState;me.bkqueryCommandValue=me.queryCommandValue;me.queryCommandState=function(type){if(utils.indexOf(except,type)!=-1){return me.bkqueryCommandState.apply(me,arguments);}return-1;};me.queryCommandValue=function(type){if(utils.indexOf(except,type)!=-1){return me.bkqueryCommandValue.apply(me,arguments);}return null;};me.fireEvent("selectionchange");}},disable:function disable(except){return this.setDisabled(except);},/**\n         * 设置默认内容\n         * @method _setDefaultContent\n         * @private\n         * @param  { String } cont 要存入的内容\n         */_setDefaultContent:function(){function clear(){var me=this;if(me.document.getElementById("initContent")){me.body.innerHTML="<p>"+(ie?"":"<br/>")+"</p>";me.removeListener("firstBeforeExecCommand focus",clear);setTimeout(function(){me.focus();me._selectionChange();},0);}}return function(cont){var me=this;me.body.innerHTML=\'<p id="initContent">\'+cont+"</p>";me.addListener("firstBeforeExecCommand focus",clear);};}(),/**\n         * 显示编辑器\n         * @method setShow\n         * @example\n         * ```javascript\n         * editor.setShow()\n         * ```\n         */setShow:function setShow(){var me=this,range=me.selection.getRange();if(me.container.style.display=="none"){//有可能内容丢失了\ntry{range.moveToBookmark(me.lastBk);delete me.lastBk;}catch(e){range.setStartAtFirst(me.body).collapse(true);}//ie下focus实效，所以做了个延迟\nsetTimeout(function(){range.select(true);},100);me.container.style.display="";}},show:function show(){return this.setShow();},/**\n         * 隐藏编辑器\n         * @method setHide\n         * @example\n         * ```javascript\n         * editor.setHide()\n         * ```\n         */setHide:function setHide(){var me=this;if(!me.lastBk){me.lastBk=me.selection.getRange().createBookmark(true);}me.container.style.display="none";},hide:function hide(){return this.setHide();},/**\n         * 根据指定的路径，获取对应的语言资源\n         * @method getLang\n         * @param { String } path 路径根据的是lang目录下的语言文件的路径结构\n         * @return { Object | String } 根据路径返回语言资源的Json格式对象或者语言字符串\n         * @example\n         * ```javascript\n         * editor.getLang(\'contextMenu.delete\'); //如果当前是中文，那返回是的是\'删除\'\n         * ```\n         */getLang:function getLang(path){var lang=UE.I18N[this.options.lang];if(!lang){throw Error("not import language file");}path=(path||"").split(".");for(var i=0,ci;ci=path[i++];){lang=lang[ci];if(!lang)break;}return lang;},/**\n         * 计算编辑器html内容字符串的长度\n         * @method  getContentLength\n         * @return { Number } 返回计算的长度\n         * @example\n         * ```javascript\n         * //编辑器html内容<p><strong>132</strong></p>\n         * editor.getContentLength() //返回27\n         * ```\n         *//**\n         * 计算编辑器当前纯文本内容的长度\n         * @method  getContentLength\n         * @param { Boolean } ingoneHtml 传入true时，只按照纯文本来计算\n         * @return { Number } 返回计算的长度，内容中有hr/img/iframe标签，长度加1\n         * @example\n         * ```javascript\n         * //编辑器html内容<p><strong>132</strong></p>\n         * editor.getContentLength() //返回3\n         * ```\n         */getContentLength:function getContentLength(ingoneHtml,tagNames){var count=this.getContent(false,false,true).length;if(ingoneHtml){tagNames=(tagNames||[]).concat(["hr","img","iframe"]);count=this.getContentTxt().replace(/[\\t\\r\\n]+/g,"").length;for(var i=0,ci;ci=tagNames[i++];){count+=this.document.getElementsByTagName(ci).length;}}return count;},/**\n         * 注册输入过滤规则\n         * @method  addInputRule\n         * @param { Function } rule 要添加的过滤规则\n         * @example\n         * ```javascript\n         * editor.addInputRule(function(root){\n         *   $.each(root.getNodesByTagName(\'div\'),function(i,node){\n         *       node.tagName="p";\n         *   });\n         * });\n         * ```\n         */addInputRule:function addInputRule(rule){this.inputRules.push(rule);},/**\n         * 执行注册的过滤规则\n         * @method  filterInputRule\n         * @param { UE.uNode } root 要过滤的uNode节点\n         * @remind 执行editor.setContent方法和执行\'inserthtml\'命令后，会运行该过滤函数\n         * @example\n         * ```javascript\n         * editor.filterInputRule(editor.body);\n         * ```\n         * @see UE.Editor:addInputRule\n         */filterInputRule:function filterInputRule(root){for(var i=0,ci;ci=this.inputRules[i++];){ci.call(this,root);}},/**\n         * 注册输出过滤规则\n         * @method  addOutputRule\n         * @param { Function } rule 要添加的过滤规则\n         * @example\n         * ```javascript\n         * editor.addOutputRule(function(root){\n         *   $.each(root.getNodesByTagName(\'p\'),function(i,node){\n         *       node.tagName="div";\n         *   });\n         * });\n         * ```\n         */addOutputRule:function addOutputRule(rule){this.outputRules.push(rule);},/**\n         * 根据输出过滤规则，过滤编辑器内容\n         * @method  filterOutputRule\n         * @remind 执行editor.getContent方法的时候，会先运行该过滤函数\n         * @param { UE.uNode } root 要过滤的uNode节点\n         * @example\n         * ```javascript\n         * editor.filterOutputRule(editor.body);\n         * ```\n         * @see UE.Editor:addOutputRule\n         */filterOutputRule:function filterOutputRule(root){for(var i=0,ci;ci=this.outputRules[i++];){ci.call(this,root);}},/**\n         * 根据action名称获取请求的路径\n         * @method  getActionUrl\n         * @remind 假如没有设置serverUrl,会根据imageUrl设置默认的controller路径\n         * @param { String } action action名称\n         * @example\n         * ```javascript\n         * editor.getActionUrl(\'config\'); //返回 "/ueditor/php/controller.php?action=config"\n         * editor.getActionUrl(\'image\'); //返回 "/ueditor/php/controller.php?action=uplaodimage"\n         * editor.getActionUrl(\'scrawl\'); //返回 "/ueditor/php/controller.php?action=uplaodscrawl"\n         * editor.getActionUrl(\'imageManager\'); //返回 "/ueditor/php/controller.php?action=listimage"\n         * ```\n         */getActionUrl:function getActionUrl(action){var actionName=this.getOpt(action)||action,imageUrl=this.getOpt("imageUrl"),serverUrl=this.getOpt("serverUrl");if(!serverUrl&&imageUrl){serverUrl=imageUrl.replace(/^(.*[\\/]).+([\\.].+)$/,"$1controller$2");}if(serverUrl){serverUrl=serverUrl+(serverUrl.indexOf("?")==-1?"?":"&")+"action="+(actionName||"");return utils.formatUrl(serverUrl);}else{return"";}}};utils.inherits(Editor,EventBase);})();// core/Editor.defaultoptions.js\n//维护编辑器一下默认的不在插件中的配置项\nUE.Editor.defaultOptions=function(editor){var _url=editor.options.UEDITOR_HOME_URL;return{isShow:true,initialContent:"",initialStyle:"",autoClearinitialContent:false,iframeCssUrl:_url+"themes/iframe.css",textarea:"editorValue",focus:false,focusInEnd:true,autoClearEmptyNode:true,fullscreen:false,readonly:false,zIndex:999,imagePopup:true,enterTag:"p",customDomain:false,lang:"zh-cn",langPath:_url+"lang/",theme:"default",themePath:_url+"themes/",allHtmlEnabled:false,scaleEnabled:false,tableNativeEditInFF:false,autoSyncData:true,fileNameFormat:"{time}{rand:6}"};};// core/loadconfig.js\n(function(){UE.Editor.prototype.loadServerConfig=function(){var me=this;setTimeout(function(){try{me.options.imageUrl&&me.setOpt("serverUrl",me.options.imageUrl.replace(/^(.*[\\/]).+([\\.].+)$/,"$1controller$2"));var configUrl=me.getActionUrl("config"),isJsonp=utils.isCrossDomainUrl(configUrl);/* 发出ajax请求 */me._serverConfigLoaded=false;configUrl&&UE.ajax.request(configUrl,{method:"GET",dataType:isJsonp?"jsonp":"",onsuccess:function onsuccess(r){try{var config=isJsonp?r:eval("("+r.responseText+")");utils.extend(me.options,config);me.fireEvent("serverConfigLoaded");me._serverConfigLoaded=true;}catch(e){showErrorMsg(me.getLang("loadconfigFormatError"));}},onerror:function onerror(){showErrorMsg(me.getLang("loadconfigHttpError"));}});}catch(e){showErrorMsg(me.getLang("loadconfigError"));}});function showErrorMsg(msg){console&&console.error(msg);//me.fireEvent(\'showMessage\', {\n//    \'title\': msg,\n//    \'type\': \'error\'\n//});\n}};UE.Editor.prototype.isServerConfigLoaded=function(){var me=this;return me._serverConfigLoaded||false;};UE.Editor.prototype.afterConfigReady=function(handler){if(!handler||!utils.isFunction(handler))return;var me=this;var readyHandler=function readyHandler(){handler.apply(me,arguments);me.removeListener("serverConfigLoaded",readyHandler);};if(me.isServerConfigLoaded()){handler.call(me,"serverConfigLoaded");}else{me.addListener("serverConfigLoaded",readyHandler);}};})();// core/ajax.js\n/**\n * @file\n * @module UE.ajax\n * @since 1.2.6.1\n *//**\n * 提供对ajax请求的支持\n * @module UE.ajax\n */UE.ajax=function(){//创建一个ajaxRequest对象\nvar fnStr="XMLHttpRequest()";try{new ActiveXObject("Msxml2.XMLHTTP");fnStr="ActiveXObject(\'Msxml2.XMLHTTP\')";}catch(e){try{new ActiveXObject("Microsoft.XMLHTTP");fnStr="ActiveXObject(\'Microsoft.XMLHTTP\')";}catch(e){}}var creatAjaxRequest=new Function("return new "+fnStr);/**\n     * 将json参数转化成适合ajax提交的参数列表\n     * @param json\n     */function json2str(json){var strArr=[];for(var i in json){//忽略默认的几个参数\nif(i=="method"||i=="timeout"||i=="async"||i=="dataType"||i=="callback")continue;//忽略控制\nif(json[i]==undefined||json[i]==null)continue;//传递过来的对象和函数不在提交之列\nif(!(_typeof(json[i]).toLowerCase()=="function"||_typeof(json[i]).toLowerCase()=="object")){strArr.push(encodeURIComponent(i)+"="+encodeURIComponent(json[i]));}else if(utils.isArray(json[i])){//支持传数组内容\nfor(var j=0;j<json[i].length;j++){strArr.push(encodeURIComponent(i)+"[]="+encodeURIComponent(json[i][j]));}}}return strArr.join("&");}function doAjax(url,ajaxOptions){var xhr=creatAjaxRequest(),//是否超时\ntimeIsOut=false,//默认参数\ndefaultAjaxOptions={method:"POST",timeout:5000,async:true,data:{},//需要传递对象的话只能覆盖\nonsuccess:function onsuccess(){},onerror:function onerror(){}};if((typeof url===\'undefined\'?\'undefined\':_typeof(url))==="object"){ajaxOptions=url;url=ajaxOptions.url;}if(!xhr||!url)return;var ajaxOpts=ajaxOptions?utils.extend(defaultAjaxOptions,ajaxOptions):defaultAjaxOptions;var submitStr=json2str(ajaxOpts);// { name:"Jim",city:"Beijing" } --\x3e "name=Jim&city=Beijing"\n//如果用户直接通过data参数传递json对象过来，则也要将此json对象转化为字符串\nif(!utils.isEmptyObject(ajaxOpts.data)){submitStr+=(submitStr?"&":"")+json2str(ajaxOpts.data);}//超时检测\nvar timerID=setTimeout(function(){if(xhr.readyState!=4){timeIsOut=true;xhr.abort();clearTimeout(timerID);}},ajaxOpts.timeout);var method=ajaxOpts.method.toUpperCase();var str=url+(url.indexOf("?")==-1?"?":"&")+(method=="POST"?"":submitStr+"&noCache="+ +new Date());xhr.open(method,str,ajaxOpts.async);xhr.onreadystatechange=function(){if(xhr.readyState==4){if(!timeIsOut&&xhr.status==200){ajaxOpts.onsuccess(xhr);}else{ajaxOpts.onerror(xhr);}}};if(method=="POST"){xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.send(submitStr);}else{xhr.send(null);}}function doJsonp(url,opts){var successhandler=opts.onsuccess||function(){},scr=document.createElement("SCRIPT"),options=opts||{},charset=options["charset"],callbackField=options["jsonp"]||"callback",callbackFnName,timeOut=options["timeOut"]||0,timer,reg=new RegExp("(\\\\?|&)"+callbackField+"=([^&]*)"),matches;if(utils.isFunction(successhandler)){callbackFnName="bd__editor__"+Math.floor(Math.random()*2147483648).toString(36);window[callbackFnName]=getCallBack(0);}else if(utils.isString(successhandler)){callbackFnName=successhandler;}else{if(matches=reg.exec(url)){callbackFnName=matches[2];}}url=url.replace(reg,"\\x241"+callbackField+"="+callbackFnName);if(url.search(reg)<0){url+=(url.indexOf("?")<0?"?":"&")+callbackField+"="+callbackFnName;}var queryStr=json2str(opts);// { name:"Jim",city:"Beijing" } --\x3e "name=Jim&city=Beijing"\n//如果用户直接通过data参数传递json对象过来，则也要将此json对象转化为字符串\nif(!utils.isEmptyObject(opts.data)){queryStr+=(queryStr?"&":"")+json2str(opts.data);}if(queryStr){url=url.replace(/\\?/,"?"+queryStr+"&");}scr.onerror=getCallBack(1);if(timeOut){timer=setTimeout(getCallBack(1),timeOut);}createScriptTag(scr,url,charset);function createScriptTag(scr,url,charset){scr.setAttribute("type","text/javascript");scr.setAttribute("defer","defer");charset&&scr.setAttribute("charset",charset);scr.setAttribute("src",url);document.getElementsByTagName("head")[0].appendChild(scr);}function getCallBack(onTimeOut){return function(){try{if(onTimeOut){options.onerror&&options.onerror();}else{try{clearTimeout(timer);successhandler.apply(window,arguments);}catch(e){}}}catch(exception){options.onerror&&options.onerror.call(window,exception);}finally{options.oncomplete&&options.oncomplete.apply(window,arguments);scr.parentNode&&scr.parentNode.removeChild(scr);window[callbackFnName]=null;try{delete window[callbackFnName];}catch(e){}}};}}return{/**\n         * 根据给定的参数项，向指定的url发起一个ajax请求。 ajax请求完成后，会根据请求结果调用相应回调： 如果请求\n         * 成功， 则调用onsuccess回调， 失败则调用 onerror 回调\n         * @method request\n         * @param { URLString } url ajax请求的url地址\n         * @param { Object } ajaxOptions ajax请求选项的键值对，支持的选项如下：\n         * @example\n         * ```javascript\n         * //向sayhello.php发起一个异步的Ajax GET请求, 请求超时时间为10s， 请求完成后执行相应的回调。\n         * UE.ajax.requeset( \'sayhello.php\', {\n         *\n         *     //请求方法。可选值： \'GET\', \'POST\'，默认值是\'POST\'\n         *     method: \'GET\',\n         *\n         *     //超时时间。 默认为5000， 单位是ms\n         *     timeout: 10000,\n         *\n         *     //是否是异步请求。 true为异步请求， false为同步请求\n         *     async: true,\n         *\n         *     //请求携带的数据。如果请求为GET请求， data会经过stringify后附加到请求url之后。\n         *     data: {\n         *         name: \'ueditor\'\n         *     },\n         *\n         *     //请求成功后的回调， 该回调接受当前的XMLHttpRequest对象作为参数。\n         *     onsuccess: function ( xhr ) {\n         *         console.log( xhr.responseText );\n         *     },\n         *\n         *     //请求失败或者超时后的回调。\n         *     onerror: function ( xhr ) {\n         *          alert( \'Ajax请求失败\' );\n         *     }\n         *\n         * } );\n         * ```\n         *//**\n         * 根据给定的参数项发起一个ajax请求， 参数项里必须包含一个url地址。 ajax请求完成后，会根据请求结果调用相应回调： 如果请求\n         * 成功， 则调用onsuccess回调， 失败则调用 onerror 回调。\n         * @method request\n         * @warning 如果在参数项里未提供一个key为“url”的地址值，则该请求将直接退出。\n         * @param { Object } ajaxOptions ajax请求选项的键值对，支持的选项如下：\n         * @example\n         * ```javascript\n         *\n         * //向sayhello.php发起一个异步的Ajax POST请求, 请求超时时间为5s， 请求完成后不执行任何回调。\n         * UE.ajax.requeset( \'sayhello.php\', {\n         *\n         *     //请求的地址， 该项是必须的。\n         *     url: \'sayhello.php\'\n         *\n         * } );\n         * ```\n         */request:function request(url,opts){if(opts&&opts.dataType=="jsonp"){doJsonp(url,opts);}else{doAjax(url,opts);}},getJSONP:function getJSONP(url,data,fn){var opts={data:data,oncomplete:fn};doJsonp(url,opts);}};}();// core/filterword.js\n/**\n * UE过滤word的静态方法\n * @file\n *//**\n * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n * @module UE\n *//**\n * 根据传入html字符串过滤word\n * @module UE\n * @since 1.2.6.1\n * @method filterWord\n * @param { String } html html字符串\n * @return { String } 已过滤后的结果字符串\n * @example\n * ```javascript\n * UE.filterWord(html);\n * ```\n */var filterWord=UE.filterWord=function(){//是否是word过来的内容\nfunction isWordDocument(str){return /(class="?Mso|style="[^"]*\\bmso\\-|w:WordDocument|<(v|o):|lang=)/gi.test(str);}//去掉小数\nfunction transUnit(v){v=v.replace(/[\\d.]+\\w+/g,function(m){return utils.transUnitToPx(m);});return v;}function filterPasteWord(str){return str.replace(/[\\t\\r\\n]+/g," ").replace(/\x3c!--[\\s\\S]*?--\x3e/gi,"")//转换图片\n.replace(/<v:shape [^>]*>[\\s\\S]*?.<\\/v:shape>/gi,function(str){//opera能自己解析出image所这里直接返回空\nif(browser.opera){return"";}try{//有可能是bitmap占为图，无用，直接过滤掉，主要体现在粘贴excel表格中\nif(/Bitmap/i.test(str)){return"";}var width=str.match(/width:([ \\d.]*p[tx])/i)[1],height=str.match(/height:([ \\d.]*p[tx])/i)[1],src=str.match(/src=\\s*"([^"]*)"/i)[1];return\'<img width="\'+transUnit(width)+\'" height="\'+transUnit(height)+\'" src="\'+src+\'" />\';}catch(e){return"";}})//针对wps添加的多余标签处理\n.replace(/<\\/?div[^>]*>/g,"")//去掉多余的属性\n.replace(/v:\\w+=(["\']?)[^\'"]+\\1/g,"").replace(/<(!|script[^>]*>.*?<\\/script(?=[>\\s])|\\/?(\\?xml(:\\w+)?|xml|meta|link|style|\\w+:\\w+)(?=[\\s\\/>]))[^>]*>/gi,"").replace(/<p [^>]*class="?MsoHeading"?[^>]*>(.*?)<\\/p>/gi,"<p><strong>$1</strong></p>")//去掉多余的属性\n.replace(/\\s+(class|lang|align)\\s*=\\s*([\'"]?)([\\w-]+)\\2/gi,function(str,name,marks,val){//保留list的标示\nreturn name=="class"&&val=="MsoListParagraph"?str:"";})//清除多余的font/span不能匹配&nbsp;有可能是空格\n.replace(/<(font|span)[^>]*>(\\s*)<\\/\\1>/gi,function(a,b,c){return c.replace(/[\\t\\r\\n ]+/g," ");})//处理style的问题\n.replace(/(<[a-z][^>]*)\\sstyle=(["\'])([^\\2]*?)\\2/gi,function(str,tag,tmp,style){var n=[],s=style.replace(/^\\s+|\\s+$/,"").replace(/&#39;/g,"\'").replace(/&quot;/gi,"\'").replace(/[\\d.]+(cm|pt)/g,function(str){return utils.transUnitToPx(str);}).split(/;\\s*/g);for(var i=0,v;v=s[i];i++){var name,value,parts=v.split(":");if(parts.length==2){name=parts[0].toLowerCase();value=parts[1].toLowerCase();if(/^(background)\\w*/.test(name)&&value.replace(/(initial|\\s)/g,"").length==0||/^(margin)\\w*/.test(name)&&/^0\\w+$/.test(value)){continue;}switch(name){case"mso-padding-alt":case"mso-padding-top-alt":case"mso-padding-right-alt":case"mso-padding-bottom-alt":case"mso-padding-left-alt":case"mso-margin-alt":case"mso-margin-top-alt":case"mso-margin-right-alt":case"mso-margin-bottom-alt":case"mso-margin-left-alt"://ie下会出现挤到一起的情况\n//case "mso-table-layout-alt":\ncase"mso-height":case"mso-width":case"mso-vertical-align-alt"://trace:1819 ff下会解析出padding在table上\nif(!/<table/.test(tag))n[i]=name.replace(/^mso-|-alt$/g,"")+":"+transUnit(value);continue;case"horiz-align":n[i]="text-align:"+value;continue;case"vert-align":n[i]="vertical-align:"+value;continue;case"font-color":case"mso-foreground":n[i]="color:"+value;continue;case"mso-background":case"mso-highlight":n[i]="background:"+value;continue;case"mso-default-height":n[i]="min-height:"+transUnit(value);continue;case"mso-default-width":n[i]="min-width:"+transUnit(value);continue;case"mso-padding-between-alt":n[i]="border-collapse:separate;border-spacing:"+transUnit(value);continue;case"text-line-through":if(value=="single"||value=="double"){n[i]="text-decoration:line-through";}continue;case"mso-zero-height":if(value=="yes"){n[i]="display:none";}continue;//                                case \'background\':\n//                                    break;\ncase"margin":if(!/[1-9]/.test(value)){continue;}}if(/^(mso|column|font-emph|lang|layout|line-break|list-image|nav|panose|punct|row|ruby|sep|size|src|tab-|table-border|text-(?:decor|trans)|top-bar|version|vnd|word-break)/.test(name)||/text\\-indent|padding|margin/.test(name)&&/\\-[\\d.]+/.test(value)){continue;}n[i]=name+":"+parts[1];}}return tag+(n.length?\' style="\'+n.join(";").replace(/;{2,}/g,";")+\'"\':"");});}return function(html){return isWordDocument(html)?filterPasteWord(html):html;};}();// core/node.js\n/**\n * 编辑器模拟的节点类\n * @file\n * @module UE\n * @class uNode\n * @since 1.2.6.1\n *//**\n * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n * @unfile\n * @module UE\n */(function(){/**\n     * 编辑器模拟的节点类\n     * @unfile\n     * @module UE\n     * @class uNode\n     *//**\n     * 通过一个键值对，创建一个uNode对象\n     * @constructor\n     * @param { Object } attr 传入要创建的uNode的初始属性\n     * @example\n     * ```javascript\n     * var node = new uNode({\n     *     type:\'element\',\n     *     tagName:\'span\',\n     *     attrs:{style:\'font-size:14px;\'}\n     * })\n     * ```\n     */var uNode=UE.uNode=function(obj){this.type=obj.type;this.data=obj.data;this.tagName=obj.tagName;this.parentNode=obj.parentNode;this.attrs=obj.attrs||{};this.children=obj.children;};var notTransAttrs={href:1,src:1,_src:1,_href:1,cdata_data:1};var notTransTagName={style:1,script:1};var indentChar="    ",breakChar="\\n";function insertLine(arr,current,begin){arr.push(breakChar);return current+(begin?1:-1);}function insertIndent(arr,current){//插入缩进\nfor(var i=0;i<current;i++){arr.push(indentChar);}}//创建uNode的静态方法\n//支持标签和html\nuNode.createElement=function(html){if(/[<>]/.test(html)){return UE.htmlparser(html).children[0];}else{return new uNode({type:"element",children:[],tagName:html});}};uNode.createText=function(data,noTrans){return new UE.uNode({type:"text",data:noTrans?data:utils.unhtml(data||"")});};function nodeToHtml(node,arr,formatter,current){switch(node.type){case"root":for(var i=0,ci;ci=node.children[i++];){//插入新行\nif(formatter&&ci.type=="element"&&!dtd.$inlineWithA[ci.tagName]&&i>1){insertLine(arr,current,true);insertIndent(arr,current);}nodeToHtml(ci,arr,formatter,current);}break;case"text":isText(node,arr);break;case"element":isElement(node,arr,formatter,current);break;case"comment":isComment(node,arr,formatter);}return arr;}function isText(node,arr){if(node.parentNode.tagName=="pre"){//源码模式下输入html标签，不能做转换处理，直接输出\narr.push(node.data);}else{arr.push(notTransTagName[node.parentNode.tagName]?utils.html(node.data):node.data.replace(/[ ]{2}/g," &nbsp;"));}}function isElement(node,arr,formatter,current){var attrhtml="";if(node.attrs){attrhtml=[];var attrs=node.attrs;for(var a in attrs){//这里就针对\n//<p>\'<img src=\'http://nsclick.baidu.com/u.gif?&asdf=\\"sdf&asdfasdfs;asdf\'></p>\n//这里边的\\"做转换，要不用innerHTML直接被截断了，属性src\n//有可能做的不够\nattrhtml.push(a+(attrs[a]!==undefined?\'="\'+(notTransAttrs[a]?utils.html(attrs[a]).replace(/["]/g,function(a){return"&quot;";}):utils.unhtml(attrs[a]))+\'"\':""));}attrhtml=attrhtml.join(" ");}arr.push("<"+node.tagName+(attrhtml?" "+attrhtml:"")+(dtd.$empty[node.tagName]?"/":"")+">");//插入新行\nif(formatter&&!dtd.$inlineWithA[node.tagName]&&node.tagName!="pre"){if(node.children&&node.children.length){current=insertLine(arr,current,true);insertIndent(arr,current);}}if(node.children&&node.children.length){for(var i=0,ci;ci=node.children[i++];){if(formatter&&ci.type=="element"&&!dtd.$inlineWithA[ci.tagName]&&i>1){insertLine(arr,current);insertIndent(arr,current);}nodeToHtml(ci,arr,formatter,current);}}if(!dtd.$empty[node.tagName]){if(formatter&&!dtd.$inlineWithA[node.tagName]&&node.tagName!="pre"){if(node.children&&node.children.length){current=insertLine(arr,current);insertIndent(arr,current);}}arr.push("</"+node.tagName+">");}}function isComment(node,arr){arr.push("\x3c!--"+node.data+"--\x3e");}function _getNodeById(root,id){var node;if(root.type=="element"&&root.getAttr("id")==id){return root;}if(root.children&&root.children.length){for(var i=0,ci;ci=root.children[i++];){if(node=_getNodeById(ci,id)){return node;}}}}function _getNodesByTagName(node,tagName,arr){if(node.type=="element"&&node.tagName==tagName){arr.push(node);}if(node.children&&node.children.length){for(var i=0,ci;ci=node.children[i++];){_getNodesByTagName(ci,tagName,arr);}}}function nodeTraversal(root,fn){if(root.children&&root.children.length){for(var i=0,ci;ci=root.children[i];){nodeTraversal(ci,fn);//ci被替换的情况，这里就不再走 fn了\nif(ci.parentNode){if(ci.children&&ci.children.length){fn(ci);}if(ci.parentNode)i++;}}}else{fn(root);}}uNode.prototype={/**\n         * 当前节点对象，转换成html文本\n         * @method toHtml\n         * @return { String } 返回转换后的html字符串\n         * @example\n         * ```javascript\n         * node.toHtml();\n         * ```\n         *//**\n         * 当前节点对象，转换成html文本\n         * @method toHtml\n         * @param { Boolean } formatter 是否格式化返回值\n         * @return { String } 返回转换后的html字符串\n         * @example\n         * ```javascript\n         * node.toHtml( true );\n         * ```\n         */toHtml:function toHtml(formatter){var arr=[];nodeToHtml(this,arr,formatter,0);return arr.join("");},/**\n         * 获取节点的html内容\n         * @method innerHTML\n         * @warning 假如节点的type不是\'element\'，或节点的标签名称不在dtd列表里，直接返回当前节点\n         * @return { String } 返回节点的html内容\n         * @example\n         * ```javascript\n         * var htmlstr = node.innerHTML();\n         * ```\n         *//**\n         * 设置节点的html内容\n         * @method innerHTML\n         * @warning 假如节点的type不是\'element\'，或节点的标签名称不在dtd列表里，直接返回当前节点\n         * @param { String } htmlstr 传入要设置的html内容\n         * @return { UE.uNode } 返回节点本身\n         * @example\n         * ```javascript\n         * node.innerHTML(\'<span>text</span>\');\n         * ```\n         */innerHTML:function innerHTML(htmlstr){if(this.type!="element"||dtd.$empty[this.tagName]){return this;}if(utils.isString(htmlstr)){if(this.children){for(var i=0,ci;ci=this.children[i++];){ci.parentNode=null;}}this.children=[];var tmpRoot=UE.htmlparser(htmlstr);for(var i=0,ci;ci=tmpRoot.children[i++];){this.children.push(ci);ci.parentNode=this;}return this;}else{var tmpRoot=new UE.uNode({type:"root",children:this.children});return tmpRoot.toHtml();}},/**\n         * 获取节点的纯文本内容\n         * @method innerText\n         * @warning 假如节点的type不是\'element\'，或节点的标签名称不在dtd列表里，直接返回当前节点\n         * @return { String } 返回节点的存文本内容\n         * @example\n         * ```javascript\n         * var textStr = node.innerText();\n         * ```\n         *//**\n         * 设置节点的纯文本内容\n         * @method innerText\n         * @warning 假如节点的type不是\'element\'，或节点的标签名称不在dtd列表里，直接返回当前节点\n         * @param { String } textStr 传入要设置的文本内容\n         * @return { UE.uNode } 返回节点本身\n         * @example\n         * ```javascript\n         * node.innerText(\'<span>text</span>\');\n         * ```\n         */innerText:function innerText(textStr,noTrans){if(this.type!="element"||dtd.$empty[this.tagName]){return this;}if(textStr){if(this.children){for(var i=0,ci;ci=this.children[i++];){ci.parentNode=null;}}this.children=[];this.appendChild(uNode.createText(textStr,noTrans));return this;}else{return this.toHtml().replace(/<[^>]+>/g,"");}},/**\n         * 获取当前对象的data属性\n         * @method getData\n         * @return { Object } 若节点的type值是elemenet，返回空字符串，否则返回节点的data属性\n         * @example\n         * ```javascript\n         * node.getData();\n         * ```\n         */getData:function getData(){if(this.type=="element")return"";return this.data;},/**\n         * 获取当前节点下的第一个子节点\n         * @method firstChild\n         * @return { UE.uNode } 返回第一个子节点\n         * @example\n         * ```javascript\n         * node.firstChild(); //返回第一个子节点\n         * ```\n         */firstChild:function firstChild(){//            if (this.type != \'element\' || dtd.$empty[this.tagName]) {\n//                return this;\n//            }\nreturn this.children?this.children[0]:null;},/**\n         * 获取当前节点下的最后一个子节点\n         * @method lastChild\n         * @return { UE.uNode } 返回最后一个子节点\n         * @example\n         * ```javascript\n         * node.lastChild(); //返回最后一个子节点\n         * ```\n         */lastChild:function lastChild(){//            if (this.type != \'element\' || dtd.$empty[this.tagName] ) {\n//                return this;\n//            }\nreturn this.children?this.children[this.children.length-1]:null;},/**\n         * 获取和当前节点有相同父亲节点的前一个节点\n         * @method previousSibling\n         * @return { UE.uNode } 返回前一个节点\n         * @example\n         * ```javascript\n         * node.children[2].previousSibling(); //返回子节点node.children[1]\n         * ```\n         */previousSibling:function previousSibling(){var parent=this.parentNode;for(var i=0,ci;ci=parent.children[i];i++){if(ci===this){return i==0?null:parent.children[i-1];}}},/**\n         * 获取和当前节点有相同父亲节点的后一个节点\n         * @method nextSibling\n         * @return { UE.uNode } 返回后一个节点,找不到返回null\n         * @example\n         * ```javascript\n         * node.children[2].nextSibling(); //如果有，返回子节点node.children[3]\n         * ```\n         */nextSibling:function nextSibling(){var parent=this.parentNode;for(var i=0,ci;ci=parent.children[i++];){if(ci===this){return parent.children[i];}}},/**\n         * 用新的节点替换当前节点\n         * @method replaceChild\n         * @param { UE.uNode } target 要替换成该节点参数\n         * @param { UE.uNode } source 要被替换掉的节点\n         * @return { UE.uNode } 返回替换之后的节点对象\n         * @example\n         * ```javascript\n         * node.replaceChild(newNode, childNode); //用newNode替换childNode,childNode是node的子节点\n         * ```\n         */replaceChild:function replaceChild(target,source){if(this.children){if(target.parentNode){target.parentNode.removeChild(target);}for(var i=0,ci;ci=this.children[i];i++){if(ci===source){this.children.splice(i,1,target);source.parentNode=null;target.parentNode=this;return target;}}}},/**\n         * 在节点的子节点列表最后位置插入一个节点\n         * @method appendChild\n         * @param { UE.uNode } node 要插入的节点\n         * @return { UE.uNode } 返回刚插入的子节点\n         * @example\n         * ```javascript\n         * node.appendChild( newNode ); //在node内插入子节点newNode\n         * ```\n         */appendChild:function appendChild(node){if(this.type=="root"||this.type=="element"&&!dtd.$empty[this.tagName]){if(!this.children){this.children=[];}if(node.parentNode){node.parentNode.removeChild(node);}for(var i=0,ci;ci=this.children[i];i++){if(ci===node){this.children.splice(i,1);break;}}this.children.push(node);node.parentNode=this;return node;}},/**\n         * 在传入节点的前面插入一个节点\n         * @method insertBefore\n         * @param { UE.uNode } target 要插入的节点\n         * @param { UE.uNode } source 在该参数节点前面插入\n         * @return { UE.uNode } 返回刚插入的子节点\n         * @example\n         * ```javascript\n         * node.parentNode.insertBefore(newNode, node); //在node节点后面插入newNode\n         * ```\n         */insertBefore:function insertBefore(target,source){if(this.children){if(target.parentNode){target.parentNode.removeChild(target);}for(var i=0,ci;ci=this.children[i];i++){if(ci===source){this.children.splice(i,0,target);target.parentNode=this;return target;}}}},/**\n         * 在传入节点的后面插入一个节点\n         * @method insertAfter\n         * @param { UE.uNode } target 要插入的节点\n         * @param { UE.uNode } source 在该参数节点后面插入\n         * @return { UE.uNode } 返回刚插入的子节点\n         * @example\n         * ```javascript\n         * node.parentNode.insertAfter(newNode, node); //在node节点后面插入newNode\n         * ```\n         */insertAfter:function insertAfter(target,source){if(this.children){if(target.parentNode){target.parentNode.removeChild(target);}for(var i=0,ci;ci=this.children[i];i++){if(ci===source){this.children.splice(i+1,0,target);target.parentNode=this;return target;}}}},/**\n         * 从当前节点的子节点列表中，移除节点\n         * @method removeChild\n         * @param { UE.uNode } node 要移除的节点引用\n         * @param { Boolean } keepChildren 是否保留移除节点的子节点，若传入true，自动把移除节点的子节点插入到移除的位置\n         * @return { * } 返回刚移除的子节点\n         * @example\n         * ```javascript\n         * node.removeChild(childNode,true); //在node的子节点列表中移除child节点，并且吧child的子节点插入到移除的位置\n         * ```\n         */removeChild:function removeChild(node,keepChildren){if(this.children){for(var i=0,ci;ci=this.children[i];i++){if(ci===node){this.children.splice(i,1);ci.parentNode=null;if(keepChildren&&ci.children&&ci.children.length){for(var j=0,cj;cj=ci.children[j];j++){this.children.splice(i+j,0,cj);cj.parentNode=this;}}return ci;}}}},/**\n         * 获取当前节点所代表的元素属性，即获取attrs对象下的属性值\n         * @method getAttr\n         * @param { String } attrName 要获取的属性名称\n         * @return { * } 返回attrs对象下的属性值\n         * @example\n         * ```javascript\n         * node.getAttr(\'title\');\n         * ```\n         */getAttr:function getAttr(attrName){return this.attrs&&this.attrs[attrName.toLowerCase()];},/**\n         * 设置当前节点所代表的元素属性，即设置attrs对象下的属性值\n         * @method setAttr\n         * @param { String } attrName 要设置的属性名称\n         * @param { * } attrVal 要设置的属性值，类型视设置的属性而定\n         * @return { * } 返回attrs对象下的属性值\n         * @example\n         * ```javascript\n         * node.setAttr(\'title\',\'标题\');\n         * ```\n         */setAttr:function setAttr(attrName,attrVal){if(!attrName){delete this.attrs;return;}if(!this.attrs){this.attrs={};}if(utils.isObject(attrName)){for(var a in attrName){if(!attrName[a]){delete this.attrs[a];}else{this.attrs[a.toLowerCase()]=attrName[a];}}}else{if(!attrVal){delete this.attrs[attrName];}else{this.attrs[attrName.toLowerCase()]=attrVal;}}},/**\n         * 获取当前节点在父节点下的位置索引\n         * @method getIndex\n         * @return { Number } 返回索引数值，如果没有父节点，返回-1\n         * @example\n         * ```javascript\n         * node.getIndex();\n         * ```\n         */getIndex:function getIndex(){var parent=this.parentNode;for(var i=0,ci;ci=parent.children[i];i++){if(ci===this){return i;}}return-1;},/**\n         * 在当前节点下，根据id查找节点\n         * @method getNodeById\n         * @param { String } id 要查找的id\n         * @return { UE.uNode } 返回找到的节点\n         * @example\n         * ```javascript\n         * node.getNodeById(\'textId\');\n         * ```\n         */getNodeById:function getNodeById(id){var node;if(this.children&&this.children.length){for(var i=0,ci;ci=this.children[i++];){if(node=_getNodeById(ci,id)){return node;}}}},/**\n         * 在当前节点下，根据元素名称查找节点列表\n         * @method getNodesByTagName\n         * @param { String } tagNames 要查找的元素名称\n         * @return { Array } 返回找到的节点列表\n         * @example\n         * ```javascript\n         * node.getNodesByTagName(\'span\');\n         * ```\n         */getNodesByTagName:function getNodesByTagName(tagNames){tagNames=utils.trim(tagNames).replace(/[ ]{2,}/g," ").split(" ");var arr=[],me=this;utils.each(tagNames,function(tagName){if(me.children&&me.children.length){for(var i=0,ci;ci=me.children[i++];){_getNodesByTagName(ci,tagName,arr);}}});return arr;},/**\n         * 根据样式名称，获取节点的样式值\n         * @method getStyle\n         * @param { String } name 要获取的样式名称\n         * @return { String } 返回样式值\n         * @example\n         * ```javascript\n         * node.getStyle(\'font-size\');\n         * ```\n         */getStyle:function getStyle(name){var cssStyle=this.getAttr("style");if(!cssStyle){return"";}var reg=new RegExp("(^|;)\\\\s*"+name+":([^;]+)","i");var match=cssStyle.match(reg);if(match&&match[0]){return match[2];}return"";},/**\n         * 给节点设置样式\n         * @method setStyle\n         * @param { String } name 要设置的的样式名称\n         * @param { String } val 要设置的的样值\n         * @example\n         * ```javascript\n         * node.setStyle(\'font-size\', \'12px\');\n         * ```\n         */setStyle:function setStyle(name,val){function exec(name,val){var reg=new RegExp("(^|;)\\\\s*"+name+":([^;]+;?)","gi");cssStyle=cssStyle.replace(reg,"$1");if(val){cssStyle=name+":"+utils.unhtml(val)+";"+cssStyle;}}var cssStyle=this.getAttr("style");if(!cssStyle){cssStyle="";}if(utils.isObject(name)){for(var a in name){exec(a,name[a]);}}else{exec(name,val);}this.setAttr("style",utils.trim(cssStyle));},/**\n         * 传入一个函数，递归遍历当前节点下的所有节点\n         * @method traversal\n         * @param { Function } fn 遍历到节点的时，传入节点作为参数，运行此函数\n         * @example\n         * ```javascript\n         * traversal(node, function(){\n         *     console.log(node.type);\n         * });\n         * ```\n         */traversal:function traversal(fn){if(this.children&&this.children.length){nodeTraversal(this,fn);}return this;}};})();// core/htmlparser.js\n/**\n * html字符串转换成uNode节点\n * @file\n * @module UE\n * @since 1.2.6.1\n *//**\n * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n * @unfile\n * @module UE\n *//**\n * html字符串转换成uNode节点的静态方法\n * @method htmlparser\n * @param { String } htmlstr 要转换的html代码\n * @param { Boolean } ignoreBlank 若设置为true，转换的时候忽略\\n\\r\\t等空白字符\n * @return { uNode } 给定的html片段转换形成的uNode对象\n * @example\n * ```javascript\n * var root = UE.htmlparser(\'<p><b>htmlparser</b></p>\', true);\n * ```\n */var htmlparser=UE.htmlparser=function(htmlstr,ignoreBlank){//todo 原来的方式  [^"\'<>\\/] 有\\/就不能配对上 <TD vAlign=top background=../AAA.JPG> 这样的标签了\n//先去掉了，加上的原因忘了，这里先记录\n//var re_tag = /<(?:(?:\\/([^>]+)>)|(?:!--([\\S|\\s]*?)--\x3e)|(?:([^\\s\\/<>]+)\\s*((?:(?:"[^"]*")|(?:\'[^\']*\')|[^"\'<>])*)\\/?>))/g,\n//以上的正则表达式无法匹配:<div style="text-align:center;font-family:" font-size:14px;"=""><img src="http://hs-album.oss.aliyuncs.com/static/27/78/35/image/20161206/20161206174331_41105.gif" alt="" /><br /></div>\n//修改为如下正则表达式:\nvar re_tag=/<(?:(?:\\/([^>]+)>)|(?:!--([\\S|\\s]*?)--\x3e)|(?:([^\\/\\s>]+)((?:\\s+[\\w\\-:.]+(?:\\s*=\\s*?(?:(?:"[^"]*")|(?:\'[^\']*\')|[^\\s"\'\\/>]+))?)*)[\\S\\s]*?(\\/?)>))/g,re_attr=/([\\w\\-:.]+)(?:(?:\\s*=\\s*(?:(?:"([^"]*)")|(?:\'([^\']*)\')|([^\\s>]+)))|(?=\\s|$))/g;//ie下取得的html可能会有\\n存在，要去掉，在处理replace(/[\\t\\r\\n]*/g,\'\');代码高量的\\n不能去除\nvar allowEmptyTags={b:1,code:1,i:1,u:1,strike:1,s:1,tt:1,strong:1,q:1,samp:1,em:1,span:1,sub:1,img:1,sup:1,font:1,big:1,small:1,iframe:1,a:1,br:1,pre:1};htmlstr=htmlstr.replace(new RegExp(domUtils.fillChar,"g"),"");if(!ignoreBlank){htmlstr=htmlstr.replace(new RegExp("[\\\\r\\\\t\\\\n"+(ignoreBlank?"":" ")+"]*</?(\\\\w+)\\\\s*(?:[^>]*)>[\\\\r\\\\t\\\\n"+(ignoreBlank?"":" ")+"]*","g"),function(a,b){//br暂时单独处理\nif(b&&allowEmptyTags[b.toLowerCase()]){return a.replace(/(^[\\n\\r]+)|([\\n\\r]+$)/g,"");}return a.replace(new RegExp("^[\\\\r\\\\n"+(ignoreBlank?"":" ")+"]+"),"").replace(new RegExp("[\\\\r\\\\n"+(ignoreBlank?"":" ")+"]+$"),"");});}var notTransAttrs={href:1,src:1};var uNode=UE.uNode,needParentNode={td:"tr",tr:["tbody","thead","tfoot"],tbody:"table",th:"tr",thead:"table",tfoot:"table",caption:"table",li:["ul","ol"],dt:"dl",dd:"dl",option:"select"},needChild={ol:"li",ul:"li"};function text(parent,data){if(needChild[parent.tagName]){var tmpNode=uNode.createElement(needChild[parent.tagName]);parent.appendChild(tmpNode);tmpNode.appendChild(uNode.createText(data));parent=tmpNode;}else{parent.appendChild(uNode.createText(data));}}function element(parent,tagName,htmlattr){var needParentTag;if(needParentTag=needParentNode[tagName]){var tmpParent=parent,hasParent;while(tmpParent.type!="root"){if(utils.isArray(needParentTag)?utils.indexOf(needParentTag,tmpParent.tagName)!=-1:needParentTag==tmpParent.tagName){parent=tmpParent;hasParent=true;break;}tmpParent=tmpParent.parentNode;}if(!hasParent){parent=element(parent,utils.isArray(needParentTag)?needParentTag[0]:needParentTag);}}//按dtd处理嵌套\n//        if(parent.type != \'root\' && !dtd[parent.tagName][tagName])\n//            parent = parent.parentNode;\nvar elm=new uNode({parentNode:parent,type:"element",tagName:tagName.toLowerCase(),//是自闭合的处理一下\nchildren:dtd.$empty[tagName]?null:[]});//如果属性存在，处理属性\nif(htmlattr){var attrs={},match;while(match=re_attr.exec(htmlattr)){attrs[match[1].toLowerCase()]=notTransAttrs[match[1].toLowerCase()]?match[2]||match[3]||match[4]:utils.unhtml(match[2]||match[3]||match[4]);}elm.attrs=attrs;}//trace:3970\n//        //如果parent下不能放elm\n//        if(dtd.$inline[parent.tagName] && dtd.$block[elm.tagName] && !dtd[parent.tagName][elm.tagName]){\n//            parent = parent.parentNode;\n//            elm.parentNode = parent;\n//        }\nparent.children.push(elm);//如果是自闭合节点返回父亲节点\nreturn dtd.$empty[tagName]?parent:elm;}function comment(parent,data){parent.children.push(new uNode({type:"comment",data:data,parentNode:parent}));}var match,currentIndex=0,nextIndex=0;//设置根节点\nvar root=new uNode({type:"root",children:[]});var currentParent=root;while(match=re_tag.exec(htmlstr)){currentIndex=match.index;try{if(currentIndex>nextIndex){//text node\ntext(currentParent,htmlstr.slice(nextIndex,currentIndex));}if(match[3]){if(dtd.$cdata[currentParent.tagName]){text(currentParent,match[0]);}else{//start tag\ncurrentParent=element(currentParent,match[3].toLowerCase(),match[4]);}}else if(match[1]){if(currentParent.type!="root"){if(dtd.$cdata[currentParent.tagName]&&!dtd.$cdata[match[1]]){text(currentParent,match[0]);}else{var tmpParent=currentParent;while(currentParent.type=="element"&&currentParent.tagName!=match[1].toLowerCase()){currentParent=currentParent.parentNode;if(currentParent.type=="root"){currentParent=tmpParent;throw"break";}}//end tag\ncurrentParent=currentParent.parentNode;}}}else if(match[2]){//comment\ncomment(currentParent,match[2]);}}catch(e){}nextIndex=re_tag.lastIndex;}//如果结束是文本，就有可能丢掉，所以这里手动判断一下\n//例如 <li>sdfsdfsdf<li>sdfsdfsdfsdf\nif(nextIndex<htmlstr.length){text(currentParent,htmlstr.slice(nextIndex));}return root;};// core/filternode.js\n/**\n * UE过滤节点的静态方法\n * @file\n *//**\n * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n * @module UE\n *//**\n * 根据传入节点和过滤规则过滤相应节点\n * @module UE\n * @since 1.2.6.1\n * @method filterNode\n * @param { Object } root 指定root节点\n * @param { Object } rules 过滤规则json对象\n * @example\n * ```javascript\n * UE.filterNode(root,editor.options.filterRules);\n * ```\n */var filterNode=UE.filterNode=function(){function filterNode(node,rules){switch(node.type){case"text":break;case"element":var val;if(val=rules[node.tagName]){if(val==="-"){node.parentNode.removeChild(node);}else if(utils.isFunction(val)){var parentNode=node.parentNode,index=node.getIndex();val(node);if(node.parentNode){if(node.children){for(var i=0,ci;ci=node.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}else{for(var i=index,ci;ci=parentNode.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}else{var attrs=val["$"];if(attrs&&node.attrs){var tmpAttrs={},tmpVal;for(var a in attrs){tmpVal=node.getAttr(a);//todo 只先对style单独处理\nif(a=="style"&&utils.isArray(attrs[a])){var tmpCssStyle=[];utils.each(attrs[a],function(v){var tmp;if(tmp=node.getStyle(v)){tmpCssStyle.push(v+":"+tmp);}});tmpVal=tmpCssStyle.join(";");}if(tmpVal){tmpAttrs[a]=tmpVal;}}node.attrs=tmpAttrs;}if(node.children){for(var i=0,ci;ci=node.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}}else{//如果不在名单里扣出子节点并删除该节点,cdata除外\nif(dtd.$cdata[node.tagName]){node.parentNode.removeChild(node);}else{var parentNode=node.parentNode,index=node.getIndex();node.parentNode.removeChild(node,true);for(var i=index,ci;ci=parentNode.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}break;case"comment":node.parentNode.removeChild(node);}}return function(root,rules){if(utils.isEmptyObject(rules)){return root;}var val;if(val=rules["-"]){utils.each(val.split(" "),function(k){rules[k]="-";});}for(var i=0,ci;ci=root.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}return root;};}();// core/plugin.js\n/**\n * Created with JetBrains PhpStorm.\n * User: campaign\n * Date: 10/8/13\n * Time: 6:15 PM\n * To change this template use File | Settings | File Templates.\n */UE.plugin=function(){var _plugins={};return{register:function register(pluginName,fn,oldOptionName,afterDisabled){if(oldOptionName&&utils.isFunction(oldOptionName)){afterDisabled=oldOptionName;oldOptionName=null;}_plugins[pluginName]={optionName:oldOptionName||pluginName,execFn:fn,//当插件被禁用时执行\nafterDisabled:afterDisabled};},load:function load(editor){utils.each(_plugins,function(plugin){var _export=plugin.execFn.call(editor);if(editor.options[plugin.optionName]!==false){if(_export){//后边需要再做扩展\nutils.each(_export,function(v,k){switch(k.toLowerCase()){case"shortcutkey":editor.addshortcutkey(v);break;case"bindevents":utils.each(v,function(fn,eventName){editor.addListener(eventName,fn);});break;case"bindmultievents":utils.each(utils.isArray(v)?v:[v],function(event){var types=utils.trim(event.type).split(/\\s+/);utils.each(types,function(eventName){editor.addListener(eventName,event.handler);});});break;case"commands":utils.each(v,function(execFn,execName){editor.commands[execName]=execFn;});break;case"outputrule":editor.addOutputRule(v);break;case"inputrule":editor.addInputRule(v);break;case"defaultoptions":editor.setOpt(v);}});}}else if(plugin.afterDisabled){plugin.afterDisabled.call(editor);}});//向下兼容\nutils.each(UE.plugins,function(plugin){plugin.call(editor);});},run:function run(pluginName,editor){var plugin=_plugins[pluginName];if(plugin){plugin.exeFn.call(editor);}}};}();// core/keymap.js\nvar keymap=UE.keymap={Backspace:8,Tab:9,Enter:13,Shift:16,Control:17,Alt:18,CapsLock:20,Esc:27,Spacebar:32,PageUp:33,PageDown:34,End:35,Home:36,Left:37,Up:38,Right:39,Down:40,Insert:45,Del:46,NumLock:144,Cmd:91,"=":187,"-":189,b:66,i:73,//回退\nz:90,y:89,//粘贴\nv:86,x:88,s:83,n:78};// core/localstorage.js\n//存储媒介封装\nvar LocalStorage=UE.LocalStorage=function(){var storage=window.localStorage||getUserData()||null,LOCAL_FILE="localStorage";return{saveLocalData:function saveLocalData(key,data){if(storage&&data){storage.setItem(key,data);return true;}return false;},getLocalData:function getLocalData(key){if(storage){return storage.getItem(key);}return null;},removeItem:function removeItem(key){storage&&storage.removeItem(key);}};function getUserData(){var container=document.createElement("div");container.style.display="none";if(!container.addBehavior){return null;}container.addBehavior("#default#userdata");return{getItem:function getItem(key){var result=null;try{document.body.appendChild(container);container.load(LOCAL_FILE);result=container.getAttribute(key);document.body.removeChild(container);}catch(e){}return result;},setItem:function setItem(key,value){document.body.appendChild(container);container.setAttribute(key,value);container.save(LOCAL_FILE);document.body.removeChild(container);},//// 暂时没有用到\n//clear: function () {\n//\n//    var expiresTime = new Date();\n//    expiresTime.setFullYear(expiresTime.getFullYear() - 1);\n//    document.body.appendChild(container);\n//    container.expires = expiresTime.toUTCString();\n//    container.save(LOCAL_FILE);\n//    document.body.removeChild(container);\n//\n//},\nremoveItem:function removeItem(key){document.body.appendChild(container);container.removeAttribute(key);container.save(LOCAL_FILE);document.body.removeChild(container);}};}}();(function(){var ROOTKEY="ueditor_preference";UE.Editor.prototype.setPreferences=function(key,value){var obj={};if(utils.isString(key)){obj[key]=value;}else{obj=key;}var data=LocalStorage.getLocalData(ROOTKEY);if(data&&(data=utils.str2json(data))){utils.extend(data,obj);}else{data=obj;}data&&LocalStorage.saveLocalData(ROOTKEY,utils.json2str(data));};UE.Editor.prototype.getPreferences=function(key){var data=LocalStorage.getLocalData(ROOTKEY);if(data&&(data=utils.str2json(data))){return key?data[key]:data;}return null;};UE.Editor.prototype.removePreferences=function(key){var data=LocalStorage.getLocalData(ROOTKEY);if(data&&(data=utils.str2json(data))){data[key]=undefined;delete data[key];}data&&LocalStorage.saveLocalData(ROOTKEY,utils.json2str(data));};})();// plugins/defaultfilter.js\n///import core\n///plugin 编辑器默认的过滤转换机制\nUE.plugins["defaultfilter"]=function(){var me=this;me.setOpt({allowDivTransToP:true,disabledTableInTable:true,rgb2Hex:true});//默认的过滤处理\n//进入编辑器的内容处理\nme.addInputRule(function(root){var allowDivTransToP=this.options.allowDivTransToP;var val;function tdParent(node){while(node&&node.type=="element"){if(node.tagName=="td"){return true;}node=node.parentNode;}return false;}//进行默认的处理\nroot.traversal(function(node){if(node.type=="element"){if(!dtd.$cdata[node.tagName]&&me.options.autoClearEmptyNode&&dtd.$inline[node.tagName]&&!dtd.$empty[node.tagName]&&(!node.attrs||utils.isEmptyObject(node.attrs))){if(!node.firstChild())node.parentNode.removeChild(node);else if(node.tagName=="span"&&(!node.attrs||utils.isEmptyObject(node.attrs))){node.parentNode.removeChild(node,true);}return;}switch(node.tagName){case"style":case"script":node.setAttr({cdata_tag:node.tagName,cdata_data:node.innerHTML()||"",_ue_custom_node_:"true"});node.tagName="div";node.innerHTML("");break;case"a":if(val=node.getAttr("href")){node.setAttr("_href",val);}break;case"img"://todo base64暂时去掉，后边做远程图片上传后，干掉这个\nif(val=node.getAttr("src")){if(/^data:/.test(val)){node.parentNode.removeChild(node);break;}}node.setAttr("_src",node.getAttr("src"));break;case"span":if(browser.webkit&&(val=node.getStyle("white-space"))){if(/nowrap|normal/.test(val)){node.setStyle("white-space","");if(me.options.autoClearEmptyNode&&utils.isEmptyObject(node.attrs)){node.parentNode.removeChild(node,true);}}}val=node.getAttr("id");if(val&&/^_baidu_bookmark_/i.test(val)){node.parentNode.removeChild(node);}break;case"p":if(val=node.getAttr("align")){node.setAttr("align");node.setStyle("text-align",val);}//trace:3431\n//                        var cssStyle = node.getAttr(\'style\');\n//                        if (cssStyle) {\n//                            cssStyle = cssStyle.replace(/(margin|padding)[^;]+/g, \'\');\n//                            node.setAttr(\'style\', cssStyle)\n//\n//                        }\n//p标签不允许嵌套\nutils.each(node.children,function(n){if(n.type=="element"&&n.tagName=="p"){var next=n.nextSibling();node.parentNode.insertAfter(n,node);var last=n;while(next){var tmp=next.nextSibling();node.parentNode.insertAfter(next,last);last=next;next=tmp;}return false;}});if(!node.firstChild()){node.innerHTML(browser.ie?"&nbsp;":"<br/>");}break;case"div":if(node.getAttr("cdata_tag")){break;}//针对代码这里不处理插入代码的div\nval=node.getAttr("class");if(val&&/^line number\\d+/.test(val)){break;}if(!allowDivTransToP){break;}var tmpNode,p=UE.uNode.createElement("p");while(tmpNode=node.firstChild()){if(tmpNode.type=="text"||!UE.dom.dtd.$block[tmpNode.tagName]){p.appendChild(tmpNode);}else{if(p.firstChild()){node.parentNode.insertBefore(p,node);p=UE.uNode.createElement("p");}else{node.parentNode.insertBefore(tmpNode,node);}}}if(p.firstChild()){node.parentNode.insertBefore(p,node);}node.parentNode.removeChild(node);break;case"dl":node.tagName="ul";break;case"dt":case"dd":node.tagName="li";break;case"li":var className=node.getAttr("class");if(!className||!/list\\-/.test(className)){node.setAttr();}var tmpNodes=node.getNodesByTagName("ol ul");UE.utils.each(tmpNodes,function(n){node.parentNode.insertAfter(n,node);});break;case"td":case"th":case"caption":if(!node.children||!node.children.length){node.appendChild(browser.ie11below?UE.uNode.createText(" "):UE.uNode.createElement("br"));}break;case"table":if(me.options.disabledTableInTable&&tdParent(node)){node.parentNode.insertBefore(UE.uNode.createText(node.innerText()),node);node.parentNode.removeChild(node);}}}//            if(node.type == \'comment\'){\n//                node.parentNode.removeChild(node);\n//            }\n});});//从编辑器出去的内容处理\nme.addOutputRule(function(root){var val;root.traversal(function(node){if(node.type=="element"){if(me.options.autoClearEmptyNode&&dtd.$inline[node.tagName]&&!dtd.$empty[node.tagName]&&(!node.attrs||utils.isEmptyObject(node.attrs))){if(!node.firstChild())node.parentNode.removeChild(node);else if(node.tagName=="span"&&(!node.attrs||utils.isEmptyObject(node.attrs))){node.parentNode.removeChild(node,true);}return;}switch(node.tagName){case"div":if(val=node.getAttr("cdata_tag")){node.tagName=val;node.appendChild(UE.uNode.createText(node.getAttr("cdata_data")));node.setAttr({cdata_tag:"",cdata_data:"",_ue_custom_node_:""});}break;case"a":if(val=node.getAttr("_href")){node.setAttr({href:utils.html(val),_href:""});}break;break;case"span":val=node.getAttr("id");if(val&&/^_baidu_bookmark_/i.test(val)){node.parentNode.removeChild(node);}//将color的rgb格式转换为#16进制格式\nif(me.getOpt("rgb2Hex")){var cssStyle=node.getAttr("style");if(cssStyle){node.setAttr("style",cssStyle.replace(/rgba?\\(([\\d,\\s]+)\\)/g,function(a,value){var array=value.split(",");if(array.length>3)return"";value="#";for(var i=0,color;color=array[i++];){color=parseInt(color.replace(/[^\\d]/gi,""),10).toString(16);value+=color.length==1?"0"+color:color;}return value.toUpperCase();}));}}break;case"img":if(val=node.getAttr("_src")){node.setAttr({src:node.getAttr("_src"),_src:""});}}}});});};// plugins/inserthtml.js\n/**\n * 插入html字符串插件\n * @file\n * @since 1.2.6.1\n *//**\n * 插入html代码\n * @command inserthtml\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { String } html 插入的html字符串\n * @remaind 插入的标签内容是在当前的选区位置上插入，如果当前是闭合状态，那直接插入内容， 如果当前是选中状态，将先清除当前选中内容后，再做插入\n * @warning 注意:该命令会对当前选区的位置，对插入的内容进行过滤转换处理。 过滤的规则遵循html语意化的原则。\n * @example\n * ```javascript\n * //xxx[BB]xxx 当前选区为非闭合选区，选中BB这两个文本\n * //执行命令，插入<b>CC</b>\n * //插入后的效果 xxx<b>CC</b>xxx\n * //<p>xx|xxx</p> 当前选区为闭合状态\n * //插入<p>CC</p>\n * //结果 <p>xx</p><p>CC</p><p>xxx</p>\n * //<p>xxxx</p>|</p>xxx</p> 当前选区在两个p标签之间\n * //插入 xxxx\n * //结果 <p>xxxx</p><p>xxxx</p></p>xxx</p>\n * ```\n */UE.commands["inserthtml"]={execCommand:function execCommand(command,html,notNeedFilter){var me=this,range,div;if(!html){return;}if(me.fireEvent("beforeinserthtml",html)===true){return;}range=me.selection.getRange();div=range.document.createElement("div");div.style.display="inline";if(!notNeedFilter){var root=UE.htmlparser(html);//如果给了过滤规则就先进行过滤\nif(me.options.filterRules){UE.filterNode(root,me.options.filterRules);}//执行默认的处理\nme.filterInputRule(root);html=root.toHtml();}div.innerHTML=utils.trim(html);if(!range.collapsed){var tmpNode=range.startContainer;if(domUtils.isFillChar(tmpNode)){range.setStartBefore(tmpNode);}tmpNode=range.endContainer;if(domUtils.isFillChar(tmpNode)){range.setEndAfter(tmpNode);}range.txtToElmBoundary();//结束边界可能放到了br的前边，要把br包含进来\n// x[xxx]<br/>\nif(range.endContainer&&range.endContainer.nodeType==1){tmpNode=range.endContainer.childNodes[range.endOffset];if(tmpNode&&domUtils.isBr(tmpNode)){range.setEndAfter(tmpNode);}}if(range.startOffset==0){tmpNode=range.startContainer;if(domUtils.isBoundaryNode(tmpNode,"firstChild")){tmpNode=range.endContainer;if(range.endOffset==(tmpNode.nodeType==3?tmpNode.nodeValue.length:tmpNode.childNodes.length)&&domUtils.isBoundaryNode(tmpNode,"lastChild")){me.body.innerHTML="<p>"+(browser.ie?"":"<br/>")+"</p>";range.setStart(me.body.firstChild,0).collapse(true);}}}!range.collapsed&&range.deleteContents();if(range.startContainer.nodeType==1){var child=range.startContainer.childNodes[range.startOffset],pre;if(child&&domUtils.isBlockElm(child)&&(pre=child.previousSibling)&&domUtils.isBlockElm(pre)){range.setEnd(pre,pre.childNodes.length).collapse();while(child.firstChild){pre.appendChild(child.firstChild);}domUtils.remove(child);}}}var child,parent,pre,tmp,hadBreak=0,nextNode;//如果当前位置选中了fillchar要干掉，要不会产生空行\nif(range.inFillChar()){child=range.startContainer;if(domUtils.isFillChar(child)){range.setStartBefore(child).collapse(true);domUtils.remove(child);}else if(domUtils.isFillChar(child,true)){child.nodeValue=child.nodeValue.replace(fillCharReg,"");range.startOffset--;range.collapsed&&range.collapse(true);}}//列表单独处理\nvar li=domUtils.findParentByTagName(range.startContainer,"li",true);if(li){var next,last;while(child=div.firstChild){//针对hr单独处理一下先\nwhile(child&&(child.nodeType==3||!domUtils.isBlockElm(child)||child.tagName=="HR")){next=child.nextSibling;range.insertNode(child).collapse();last=child;child=next;}if(child){if(/^(ol|ul)$/i.test(child.tagName)){while(child.firstChild){last=child.firstChild;domUtils.insertAfter(li,child.firstChild);li=li.nextSibling;}domUtils.remove(child);}else{var tmpLi;next=child.nextSibling;tmpLi=me.document.createElement("li");domUtils.insertAfter(li,tmpLi);tmpLi.appendChild(child);last=child;child=next;li=tmpLi;}}}li=domUtils.findParentByTagName(range.startContainer,"li",true);if(domUtils.isEmptyBlock(li)){domUtils.remove(li);}if(last){range.setStartAfter(last).collapse(true).select(true);}}else{while(child=div.firstChild){if(hadBreak){var p=me.document.createElement("p");while(child&&(child.nodeType==3||!dtd.$block[child.tagName])){nextNode=child.nextSibling;p.appendChild(child);child=nextNode;}if(p.firstChild){child=p;}}range.insertNode(child);nextNode=child.nextSibling;if(!hadBreak&&child.nodeType==domUtils.NODE_ELEMENT&&domUtils.isBlockElm(child)){parent=domUtils.findParent(child,function(node){return domUtils.isBlockElm(node);});if(parent&&parent.tagName.toLowerCase()!="body"&&!(dtd[parent.tagName][child.nodeName]&&child.parentNode===parent)){if(!dtd[parent.tagName][child.nodeName]){pre=parent;}else{tmp=child.parentNode;while(tmp!==parent){pre=tmp;tmp=tmp.parentNode;}}domUtils.breakParent(child,pre||tmp);//去掉break后前一个多余的节点  <p>|<[p> ==> <p></p><div></div><p>|</p>\nvar pre=child.previousSibling;domUtils.trimWhiteTextNode(pre);if(!pre.childNodes.length){domUtils.remove(pre);}//trace:2012,在非ie的情况，切开后剩下的节点有可能不能点入光标添加br占位\nif(!browser.ie&&(next=child.nextSibling)&&domUtils.isBlockElm(next)&&next.lastChild&&!domUtils.isBr(next.lastChild)){next.appendChild(me.document.createElement("br"));}hadBreak=1;}}var next=child.nextSibling;if(!div.firstChild&&next&&domUtils.isBlockElm(next)){range.setStart(next,0).collapse(true);break;}range.setEndAfter(child).collapse();}child=range.startContainer;if(nextNode&&domUtils.isBr(nextNode)){domUtils.remove(nextNode);}//用chrome可能有空白展位符\nif(domUtils.isBlockElm(child)&&domUtils.isEmptyNode(child)){if(nextNode=child.nextSibling){domUtils.remove(child);if(nextNode.nodeType==1&&dtd.$block[nextNode.tagName]){range.setStart(nextNode,0).collapse(true).shrinkBoundary();}}else{try{child.innerHTML=browser.ie?domUtils.fillChar:"<br/>";}catch(e){range.setStartBefore(child);domUtils.remove(child);}}}//加上true因为在删除表情等时会删两次，第一次是删的fillData\ntry{range.select(true);}catch(e){}}setTimeout(function(){range=me.selection.getRange();range.scrollToView(me.autoHeightEnabled,me.autoHeightEnabled?domUtils.getXY(me.iframe).y:0);me.fireEvent("afterinserthtml",html);},200);}};// plugins/autotypeset.js\n/**\n * 自动排版\n * @file\n * @since 1.2.6.1\n *//**\n * 对当前编辑器的内容执行自动排版， 排版的行为根据config配置文件里的“autotypeset”选项进行控制。\n * @command autotypeset\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'autotypeset\' );\n * ```\n */UE.plugins["autotypeset"]=function(){this.setOpt({autotypeset:{mergeEmptyline:true,//合并空行\nremoveClass:true,//去掉冗余的class\nremoveEmptyline:false,//去掉空行\ntextAlign:"left",//段落的排版方式，可以是 left,right,center,justify 去掉这个属性表示不执行排版\nimageBlockLine:"center",//图片的浮动方式，独占一行剧中,左右浮动，默认: center,left,right,none 去掉这个属性表示不执行排版\npasteFilter:false,//根据规则过滤没事粘贴进来的内容\nclearFontSize:false,//去掉所有的内嵌字号，使用编辑器默认的字号\nclearFontFamily:false,//去掉所有的内嵌字体，使用编辑器默认的字体\nremoveEmptyNode:false,// 去掉空节点\n//可以去掉的标签\nremoveTagNames:utils.extend({div:1},dtd.$removeEmpty),indent:false,// 行首缩进\nindentValue:"2em",//行首缩进的大小\nbdc2sb:false,tobdc:false}});var me=this,opt=me.options.autotypeset,remainClass={selectTdClass:1,pagebreak:1,anchorclass:1},remainTag={li:1},tags={div:1,p:1,//trace:2183 这些也认为是行\nblockquote:1,center:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,span:1},highlightCont;//升级了版本，但配置项目里没有autotypeset\nif(!opt){return;}readLocalOpts();function isLine(node,notEmpty){if(!node||node.nodeType==3)return 0;if(domUtils.isBr(node))return 1;if(node&&node.parentNode&&tags[node.tagName.toLowerCase()]){if(highlightCont&&highlightCont.contains(node)||node.getAttribute("pagebreak")){return 0;}return notEmpty?!domUtils.isEmptyBlock(node):domUtils.isEmptyBlock(node,new RegExp("[\\\\s"+domUtils.fillChar+"]","g"));}}function removeNotAttributeSpan(node){if(!node.style.cssText){domUtils.removeAttributes(node,["style"]);if(node.tagName.toLowerCase()=="span"&&domUtils.hasNoAttributes(node)){domUtils.remove(node,true);}}}function autotype(type,html){var me=this,cont;if(html){if(!opt.pasteFilter){return;}cont=me.document.createElement("div");cont.innerHTML=html.html;}else{cont=me.document.body;}var nodes=domUtils.getElementsByTagName(cont,"*");// 行首缩进，段落方向，段间距，段内间距\nfor(var i=0,ci;ci=nodes[i++];){if(me.fireEvent("excludeNodeinautotype",ci)===true){continue;}//font-size\nif(opt.clearFontSize&&ci.style.fontSize){domUtils.removeStyle(ci,"font-size");removeNotAttributeSpan(ci);}//font-family\nif(opt.clearFontFamily&&ci.style.fontFamily){domUtils.removeStyle(ci,"font-family");removeNotAttributeSpan(ci);}if(isLine(ci)){//合并空行\nif(opt.mergeEmptyline){var next=ci.nextSibling,tmpNode,isBr=domUtils.isBr(ci);while(isLine(next)){tmpNode=next;next=tmpNode.nextSibling;if(isBr&&(!next||next&&!domUtils.isBr(next))){break;}domUtils.remove(tmpNode);}}//去掉空行，保留占位的空行\nif(opt.removeEmptyline&&domUtils.inDoc(ci,cont)&&!remainTag[ci.parentNode.tagName.toLowerCase()]){if(domUtils.isBr(ci)){next=ci.nextSibling;if(next&&!domUtils.isBr(next)){continue;}}domUtils.remove(ci);continue;}}if(isLine(ci,true)&&ci.tagName!="SPAN"){if(opt.indent){ci.style.textIndent=opt.indentValue;}if(opt.textAlign){ci.style.textAlign=opt.textAlign;}// if(opt.lineHeight)\n//     ci.style.lineHeight = opt.lineHeight + \'cm\';\n}//去掉class,保留的class不去掉\nif(opt.removeClass&&ci.className&&!remainClass[ci.className.toLowerCase()]){if(highlightCont&&highlightCont.contains(ci)){continue;}domUtils.removeAttributes(ci,["class"]);}//表情不处理\nif(opt.imageBlockLine&&ci.tagName.toLowerCase()=="img"&&!ci.getAttribute("emotion")){if(html){var img=ci;switch(opt.imageBlockLine){case"left":case"right":case"none":var pN=img.parentNode,tmpNode,pre,next;while(dtd.$inline[pN.tagName]||pN.tagName=="A"){pN=pN.parentNode;}tmpNode=pN;if(tmpNode.tagName=="P"&&domUtils.getStyle(tmpNode,"text-align")=="center"){if(!domUtils.isBody(tmpNode)&&domUtils.getChildCount(tmpNode,function(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1){pre=tmpNode.previousSibling;next=tmpNode.nextSibling;if(pre&&next&&pre.nodeType==1&&next.nodeType==1&&pre.tagName==next.tagName&&domUtils.isBlockElm(pre)){pre.appendChild(tmpNode.firstChild);while(next.firstChild){pre.appendChild(next.firstChild);}domUtils.remove(tmpNode);domUtils.remove(next);}else{domUtils.setStyle(tmpNode,"text-align","");}}}domUtils.setStyle(img,"float",opt.imageBlockLine);break;case"center":if(me.queryCommandValue("imagefloat")!="center"){pN=img.parentNode;domUtils.setStyle(img,"float","none");tmpNode=img;while(pN&&domUtils.getChildCount(pN,function(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1&&(dtd.$inline[pN.tagName]||pN.tagName=="A")){tmpNode=pN;pN=pN.parentNode;}var pNode=me.document.createElement("p");domUtils.setAttributes(pNode,{style:"text-align:center"});tmpNode.parentNode.insertBefore(pNode,tmpNode);pNode.appendChild(tmpNode);domUtils.setStyle(tmpNode,"float","");}}}else{var range=me.selection.getRange();range.selectNode(ci).select();me.execCommand("imagefloat",opt.imageBlockLine);}}//去掉冗余的标签\nif(opt.removeEmptyNode){if(opt.removeTagNames[ci.tagName.toLowerCase()]&&domUtils.hasNoAttributes(ci)&&domUtils.isEmptyBlock(ci)){domUtils.remove(ci);}}}if(opt.tobdc){var root=UE.htmlparser(cont.innerHTML);root.traversal(function(node){if(node.type=="text"){node.data=ToDBC(node.data);}});cont.innerHTML=root.toHtml();}if(opt.bdc2sb){var root=UE.htmlparser(cont.innerHTML);root.traversal(function(node){if(node.type=="text"){node.data=DBC2SB(node.data);}});cont.innerHTML=root.toHtml();}if(html){html.html=cont.innerHTML;}}if(opt.pasteFilter){me.addListener("beforepaste",autotype);}function DBC2SB(str){var result="";for(var i=0;i<str.length;i++){var code=str.charCodeAt(i);//获取当前字符的unicode编码\nif(code>=65281&&code<=65373){//在这个unicode编码范围中的是所有的英文字母已经各种字符\nresult+=String.fromCharCode(str.charCodeAt(i)-65248);//把全角字符的unicode编码转换为对应半角字符的unicode码\n}else if(code==12288){//空格\nresult+=String.fromCharCode(str.charCodeAt(i)-12288+32);}else{result+=str.charAt(i);}}return result;}function ToDBC(txtstring){txtstring=utils.html(txtstring);var tmp="";var mark="";/*用于判断,如果是html尖括里的标记,则不进行全角的转换*/for(var i=0;i<txtstring.length;i++){if(txtstring.charCodeAt(i)==32){tmp=tmp+String.fromCharCode(12288);}else if(txtstring.charCodeAt(i)<127){tmp=tmp+String.fromCharCode(txtstring.charCodeAt(i)+65248);}else{tmp+=txtstring.charAt(i);}}return tmp;}function readLocalOpts(){var cookieOpt=me.getPreferences("autotypeset");utils.extend(me.options.autotypeset,cookieOpt);}me.commands["autotypeset"]={execCommand:function execCommand(){me.removeListener("beforepaste",autotype);if(opt.pasteFilter){me.addListener("beforepaste",autotype);}autotype.call(me);}};};// plugins/autosubmit.js\n/**\n * 快捷键提交\n * @file\n * @since 1.2.6.1\n *//**\n * 提交表单\n * @command autosubmit\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'autosubmit\' );\n * ```\n */UE.plugin.register("autosubmit",function(){return{shortcutkey:{autosubmit:"ctrl+13"//手动提交\n},commands:{autosubmit:{execCommand:function execCommand(){var me=this,form=domUtils.findParentByTagName(me.iframe,"form",false);if(form){if(me.fireEvent("beforesubmit")===false){return;}me.sync();form.submit();}}}}};});// plugins/background.js\n/**\n * 背景插件，为UEditor提供设置背景功能\n * @file\n * @since 1.2.6.1\n */UE.plugin.register("background",function(){var me=this,cssRuleId="editor_background",isSetColored,reg=new RegExp("body[\\\\s]*\\\\{(.+)\\\\}","i");function stringToObj(str){var obj={},styles=str.split(";");utils.each(styles,function(v){var index=v.indexOf(":"),key=utils.trim(v.substr(0,index)).toLowerCase();key&&(obj[key]=utils.trim(v.substr(index+1)||""));});return obj;}function setBackground(obj){if(obj){var styles=[];for(var name in obj){if(obj.hasOwnProperty(name)){styles.push(name+":"+obj[name]+"; ");}}utils.cssRule(cssRuleId,styles.length?"body{"+styles.join("")+"}":"",me.document);}else{utils.cssRule(cssRuleId,"",me.document);}}//重写editor.hasContent方法\nvar orgFn=me.hasContents;me.hasContents=function(){if(me.queryCommandValue("background")){return true;}return orgFn.apply(me,arguments);};return{bindEvents:{getAllHtml:function getAllHtml(type,headHtml){var body=this.body,su=domUtils.getComputedStyle(body,"background-image"),url="";if(su.indexOf(me.options.imagePath)>0){url=su.substring(su.indexOf(me.options.imagePath),su.length-1).replace(/"|\\(|\\)/gi,"");}else{url=su!="none"?su.replace(/url\\("?|"?\\)/gi,""):"";}var html=\'<style type="text/css">body{\';var bgObj={"background-color":domUtils.getComputedStyle(body,"background-color")||"#ffffff","background-image":url?"url("+url+")":"","background-repeat":domUtils.getComputedStyle(body,"background-repeat")||"","background-position":browser.ie?domUtils.getComputedStyle(body,"background-position-x")+" "+domUtils.getComputedStyle(body,"background-position-y"):domUtils.getComputedStyle(body,"background-position"),height:domUtils.getComputedStyle(body,"height")};for(var name in bgObj){if(bgObj.hasOwnProperty(name)){html+=name+":"+bgObj[name]+"; ";}}html+="}</style> ";headHtml.push(html);},aftersetcontent:function aftersetcontent(){if(isSetColored==false)setBackground();}},inputRule:function inputRule(root){isSetColored=false;utils.each(root.getNodesByTagName("p"),function(p){var styles=p.getAttr("data-background");if(styles){isSetColored=true;setBackground(stringToObj(styles));p.parentNode.removeChild(p);}});},outputRule:function outputRule(root){var me=this,styles=(utils.cssRule(cssRuleId,me.document)||"").replace(/[\\n\\r]+/g,"").match(reg);if(styles){root.appendChild(UE.uNode.createElement(\'<p style="display:none;" data-background="\'+utils.trim(styles[1].replace(/"/g,"").replace(/[\\s]+/g," "))+\'"><br/></p>\'));}},commands:{background:{execCommand:function execCommand(cmd,obj){setBackground(obj);},queryCommandValue:function queryCommandValue(){var me=this,styles=(utils.cssRule(cssRuleId,me.document)||"").replace(/[\\n\\r]+/g,"").match(reg);return styles?stringToObj(styles[1]):null;},notNeedUndo:true}}};});// plugins/image.js\n/**\n * 图片插入、排版插件\n * @file\n * @since 1.2.6.1\n *//**\n * 图片对齐方式\n * @command imagefloat\n * @method execCommand\n * @remind 值center为独占一行居中\n * @param { String } cmd 命令字符串\n * @param { String } align 对齐方式，可传left、right、none、center\n * @remaind center表示图片独占一行\n * @example\n * ```javascript\n * editor.execCommand( \'imagefloat\', \'center\' );\n * ```\n *//**\n * 如果选区所在位置是图片区域\n * @command imagefloat\n * @method queryCommandValue\n * @param { String } cmd 命令字符串\n * @return { String } 返回图片对齐方式\n * @example\n * ```javascript\n * editor.queryCommandValue( \'imagefloat\' );\n * ```\n */UE.commands["imagefloat"]={execCommand:function execCommand(cmd,align){var me=this,range=me.selection.getRange();if(!range.collapsed){var img=range.getClosedNode();if(img&&img.tagName=="IMG"){switch(align){case"left":case"right":case"none":var pN=img.parentNode,tmpNode,pre,next;while(dtd.$inline[pN.tagName]||pN.tagName=="A"){pN=pN.parentNode;}tmpNode=pN;if(tmpNode.tagName=="P"&&domUtils.getStyle(tmpNode,"text-align")=="center"){if(!domUtils.isBody(tmpNode)&&domUtils.getChildCount(tmpNode,function(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1){pre=tmpNode.previousSibling;next=tmpNode.nextSibling;if(pre&&next&&pre.nodeType==1&&next.nodeType==1&&pre.tagName==next.tagName&&domUtils.isBlockElm(pre)){pre.appendChild(tmpNode.firstChild);while(next.firstChild){pre.appendChild(next.firstChild);}domUtils.remove(tmpNode);domUtils.remove(next);}else{domUtils.setStyle(tmpNode,"text-align","");}}range.selectNode(img).select();}domUtils.setStyle(img,"float",align=="none"?"":align);if(align=="none"){domUtils.removeAttributes(img,"align");}break;case"center":if(me.queryCommandValue("imagefloat")!="center"){pN=img.parentNode;domUtils.setStyle(img,"float","");domUtils.removeAttributes(img,"align");tmpNode=img;while(pN&&domUtils.getChildCount(pN,function(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1&&(dtd.$inline[pN.tagName]||pN.tagName=="A")){tmpNode=pN;pN=pN.parentNode;}range.setStartBefore(tmpNode).setCursor(false);pN=me.document.createElement("div");pN.appendChild(tmpNode);domUtils.setStyle(tmpNode,"float","");me.execCommand("insertHtml",\'<p id="_img_parent_tmp" style="text-align:center">\'+pN.innerHTML+"</p>");tmpNode=me.document.getElementById("_img_parent_tmp");tmpNode.removeAttribute("id");tmpNode=tmpNode.firstChild;range.selectNode(tmpNode).select();//去掉后边多余的元素\nnext=tmpNode.parentNode.nextSibling;if(next&&domUtils.isEmptyNode(next)){domUtils.remove(next);}}break;}}}},queryCommandValue:function queryCommandValue(){var range=this.selection.getRange(),startNode,floatStyle;if(range.collapsed){return"none";}startNode=range.getClosedNode();if(startNode&&startNode.nodeType==1&&startNode.tagName=="IMG"){floatStyle=domUtils.getComputedStyle(startNode,"float")||startNode.getAttribute("align");if(floatStyle=="none"){floatStyle=domUtils.getComputedStyle(startNode.parentNode,"text-align")=="center"?"center":floatStyle;}return{left:1,right:1,center:1}[floatStyle]?floatStyle:"none";}return"none";},queryCommandState:function queryCommandState(){var range=this.selection.getRange(),startNode;if(range.collapsed)return-1;startNode=range.getClosedNode();if(startNode&&startNode.nodeType==1&&startNode.tagName=="IMG"){return 0;}return-1;}};/**\n * 插入图片\n * @command insertimage\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { Object } opt 属性键值对，这些属性都将被复制到当前插入图片\n * @remind 该命令第二个参数可接受一个图片配置项对象的数组，可以插入多张图片，\n * 此时数组的每一个元素都是一个Object类型的图片属性集合。\n * @example\n * ```javascript\n * editor.execCommand( \'insertimage\', {\n *     src:\'a/b/c.jpg\',\n *     width:\'100\',\n *     height:\'100\'\n * } );\n * ```\n * @example\n * ```javascript\n * editor.execCommand( \'insertimage\', [{\n *     src:\'a/b/c.jpg\',\n *     width:\'100\',\n *     height:\'100\'\n * },{\n *     src:\'a/b/d.jpg\',\n *     width:\'100\',\n *     height:\'100\'\n * }] );\n * ```\n */UE.commands["insertimage"]={execCommand:function execCommand(cmd,opt){opt=utils.isArray(opt)?opt:[opt];if(!opt.length){return;}var me=this,range=me.selection.getRange(),img=range.getClosedNode();if(me.fireEvent("beforeinsertimage",opt)===true){return;}if(img&&/img/i.test(img.tagName)&&(img.className!="edui-faked-video"||img.className.indexOf("edui-upload-video")!=-1)&&!img.getAttribute("word_img")){var first=opt.shift();var floatStyle=first["floatStyle"];delete first["floatStyle"];////                img.style.border = (first.border||0) +"px solid #000";\n////                img.style.margin = (first.margin||0) +"px";\n//                img.style.cssText += \';margin:\' + (first.margin||0) +"px;" + \'border:\' + (first.border||0) +"px solid #000";\ndomUtils.setAttributes(img,first);me.execCommand("imagefloat",floatStyle);if(opt.length>0){range.setStartAfter(img).setCursor(false,true);me.execCommand("insertimage",opt);}}else{var html=[],str="",ci;ci=opt[0];if(opt.length==1){str=\'<img src="\'+ci.src+\'" \'+(ci._src?\' _src="\'+ci._src+\'" \':"")+(ci.width?\'width="\'+ci.width+\'" \':"")+(ci.height?\' height="\'+ci.height+\'" \':"")+(ci["floatStyle"]=="left"||ci["floatStyle"]=="right"?\' style="float:\'+ci["floatStyle"]+\';"\':"")+(ci.title&&ci.title!=""?\' title="\'+ci.title+\'"\':"")+(ci.border&&ci.border!="0"?\' border="\'+ci.border+\'"\':"")+(ci.alt&&ci.alt!=""?\' alt="\'+ci.alt+\'"\':"")+(ci.hspace&&ci.hspace!="0"?\' hspace = "\'+ci.hspace+\'"\':"")+(ci.vspace&&ci.vspace!="0"?\' vspace = "\'+ci.vspace+\'"\':"")+"/>";if(ci["floatStyle"]=="center"){str=\'<p style="text-align: center">\'+str+"</p>";}html.push(str);}else{for(var i=0;ci=opt[i++];){str="<p "+(ci["floatStyle"]=="center"?\'style="text-align: center" \':"")+\'><img src="\'+ci.src+\'" \'+(ci.width?\'width="\'+ci.width+\'" \':"")+(ci._src?\' _src="\'+ci._src+\'" \':"")+(ci.height?\' height="\'+ci.height+\'" \':"")+\' style="\'+(ci["floatStyle"]&&ci["floatStyle"]!="center"?"float:"+ci["floatStyle"]+";":"")+(ci.border||"")+\'" \'+(ci.title?\' title="\'+ci.title+\'"\':"")+" /></p>";html.push(str);}}me.execCommand("insertHtml",html.join(""));}me.fireEvent("afterinsertimage",opt);}};// plugins/justify.js\n/**\n * 段落格式\n * @file\n * @since 1.2.6.1\n *//**\n * 段落对齐方式\n * @command justify\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { String } align 对齐方式：left => 居左，right => 居右，center => 居中，justify => 两端对齐\n * @example\n * ```javascript\n * editor.execCommand( \'justify\', \'center\' );\n * ```\n *//**\n * 如果选区所在位置是段落区域，返回当前段落对齐方式\n * @command justify\n * @method queryCommandValue\n * @param { String } cmd 命令字符串\n * @return { String } 返回段落对齐方式\n * @example\n * ```javascript\n * editor.queryCommandValue( \'justify\' );\n * ```\n */UE.plugins["justify"]=function(){var me=this,block=domUtils.isBlockElm,defaultValue={left:1,right:1,center:1,justify:1},doJustify=function doJustify(range,style){var bookmark=range.createBookmark(),filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!="br"&&!domUtils.isBookmarkNode(node):!domUtils.isWhitespace(node);};range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode;while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){if(current.nodeType==3||!block(current)){tmpRange.setStartBefore(current);while(current&&current!==bookmark2.end&&!block(current)){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return!block(node);});}tmpRange.setEndAfter(tmpNode);var common=tmpRange.getCommonAncestor();if(!domUtils.isBody(common)&&block(common)){domUtils.setStyles(common,utils.isString(style)?{"text-align":style}:style);current=common;}else{var p=range.document.createElement("p");domUtils.setStyles(p,utils.isString(style)?{"text-align":style}:style);var frag=tmpRange.extractContents();p.appendChild(frag);tmpRange.insertNode(p);current=p;}current=domUtils.getNextDomNode(current,false,filterFn);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);};UE.commands["justify"]={execCommand:function execCommand(cmdName,align){var range=this.selection.getRange(),txt;//闭合时单独处理\nif(range.collapsed){txt=this.document.createTextNode("p");range.insertNode(txt);}doJustify(range,align);if(txt){range.setStartBefore(txt).collapse(true);domUtils.remove(txt);}range.select();return true;},queryCommandValue:function queryCommandValue(){var startNode=this.selection.getStart(),value=domUtils.getComputedStyle(startNode,"text-align");return defaultValue[value]?value:"left";},queryCommandState:function queryCommandState(){var start=this.selection.getStart(),cell=start&&domUtils.findParentByTagName(start,["td","th","caption"],true);return cell?-1:0;}};};// plugins/font.js\n/**\n * 字体颜色,背景色,字号,字体,下划线,删除线\n * @file\n * @since 1.2.6.1\n *//**\n * 字体颜色\n * @command forecolor\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { String } value 色值(必须十六进制)\n * @example\n * ```javascript\n * editor.execCommand( \'forecolor\', \'#000\' );\n * ```\n *//**\n * 返回选区字体颜色\n * @command forecolor\n * @method queryCommandValue\n * @param { String } cmd 命令字符串\n * @return { String } 返回字体颜色\n * @example\n * ```javascript\n * editor.queryCommandValue( \'forecolor\' );\n * ```\n *//**\n * 字体背景颜色\n * @command backcolor\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { String } value 色值(必须十六进制)\n * @example\n * ```javascript\n * editor.execCommand( \'backcolor\', \'#000\' );\n * ```\n *//**\n * 返回选区字体颜色\n * @command backcolor\n * @method queryCommandValue\n * @param { String } cmd 命令字符串\n * @return { String } 返回字体背景颜色\n * @example\n * ```javascript\n * editor.queryCommandValue( \'backcolor\' );\n * ```\n *//**\n * 字体大小\n * @command fontsize\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { String } value 字体大小\n * @example\n * ```javascript\n * editor.execCommand( \'fontsize\', \'14px\' );\n * ```\n *//**\n * 返回选区字体大小\n * @command fontsize\n * @method queryCommandValue\n * @param { String } cmd 命令字符串\n * @return { String } 返回字体大小\n * @example\n * ```javascript\n * editor.queryCommandValue( \'fontsize\' );\n * ```\n *//**\n * 字体样式\n * @command fontfamily\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { String } value 字体样式\n * @example\n * ```javascript\n * editor.execCommand( \'fontfamily\', \'微软雅黑\' );\n * ```\n *//**\n * 返回选区字体样式\n * @command fontfamily\n * @method queryCommandValue\n * @param { String } cmd 命令字符串\n * @return { String } 返回字体样式\n * @example\n * ```javascript\n * editor.queryCommandValue( \'fontfamily\' );\n * ```\n *//**\n * 字体下划线,与删除线互斥\n * @command underline\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'underline\' );\n * ```\n *//**\n * 字体删除线,与下划线互斥\n * @command strikethrough\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'strikethrough\' );\n * ```\n *//**\n * 字体边框\n * @command fontborder\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'fontborder\' );\n * ```\n */UE.plugins["font"]=function(){var me=this,fonts={forecolor:"color",backcolor:"background-color",fontsize:"font-size",fontfamily:"font-family",underline:"text-decoration",strikethrough:"text-decoration",fontborder:"border"},needCmd={underline:1,strikethrough:1,fontborder:1},needSetChild={forecolor:"color",backcolor:"background-color",fontsize:"font-size",fontfamily:"font-family"};me.setOpt({fontfamily:[{name:"songti",val:"宋体,SimSun"},{name:"yahei",val:"微软雅黑,Microsoft YaHei"},{name:"kaiti",val:"楷体,楷体_GB2312, SimKai"},{name:"heiti",val:"黑体, SimHei"},{name:"lishu",val:"隶书, SimLi"},{name:"andaleMono",val:"andale mono"},{name:"arial",val:"arial, helvetica,sans-serif"},{name:"arialBlack",val:"arial black,avant garde"},{name:"comicSansMs",val:"comic sans ms"},{name:"impact",val:"impact,chicago"},{name:"timesNewRoman",val:"times new roman"}],fontsize:[10,11,12,14,16,18,20,24,36]});function mergeWithParent(node){var parent;while(parent=node.parentNode){if(parent.tagName=="SPAN"&&domUtils.getChildCount(parent,function(child){return!domUtils.isBookmarkNode(child)&&!domUtils.isBr(child);})==1){parent.style.cssText+=node.style.cssText;domUtils.remove(node,true);node=parent;}else{break;}}}function mergeChild(rng,cmdName,value){if(needSetChild[cmdName]){rng.adjustmentBoundary();if(!rng.collapsed&&rng.startContainer.nodeType==1){var start=rng.startContainer.childNodes[rng.startOffset];if(start&&domUtils.isTagNode(start,"span")){var bk=rng.createBookmark();utils.each(domUtils.getElementsByTagName(start,"span"),function(span){if(!span.parentNode||domUtils.isBookmarkNode(span))return;if(cmdName=="backcolor"&&domUtils.getComputedStyle(span,"background-color").toLowerCase()===value){return;}domUtils.removeStyle(span,needSetChild[cmdName]);if(span.style.cssText.replace(/^\\s+$/,"").length==0){domUtils.remove(span,true);}});rng.moveToBookmark(bk);}}}}function mergesibling(rng,cmdName,value){var collapsed=rng.collapsed,bk=rng.createBookmark(),common;if(collapsed){common=bk.start.parentNode;while(dtd.$inline[common.tagName]){common=common.parentNode;}}else{common=domUtils.getCommonAncestor(bk.start,bk.end);}utils.each(domUtils.getElementsByTagName(common,"span"),function(span){if(!span.parentNode||domUtils.isBookmarkNode(span))return;if(/\\s*border\\s*:\\s*none;?\\s*/i.test(span.style.cssText)){if(/^\\s*border\\s*:\\s*none;?\\s*$/.test(span.style.cssText)){domUtils.remove(span,true);}else{domUtils.removeStyle(span,"border");}return;}if(/border/i.test(span.style.cssText)&&span.parentNode.tagName=="SPAN"&&/border/i.test(span.parentNode.style.cssText)){span.style.cssText=span.style.cssText.replace(/border[^:]*:[^;]+;?/gi,"");}if(!(cmdName=="fontborder"&&value=="none")){var next=span.nextSibling;while(next&&next.nodeType==1&&next.tagName=="SPAN"){if(domUtils.isBookmarkNode(next)&&cmdName=="fontborder"){span.appendChild(next);next=span.nextSibling;continue;}if(next.style.cssText==span.style.cssText){domUtils.moveChild(next,span);domUtils.remove(next);}if(span.nextSibling===next)break;next=span.nextSibling;}}mergeWithParent(span);if(browser.ie&&browser.version>8){//拷贝父亲们的特别的属性,这里只做背景颜色的处理\nvar parent=domUtils.findParent(span,function(n){return n.tagName=="SPAN"&&/background-color/.test(n.style.cssText);});if(parent&&!/background-color/.test(span.style.cssText)){span.style.backgroundColor=parent.style.backgroundColor;}}});rng.moveToBookmark(bk);mergeChild(rng,cmdName,value);}me.addInputRule(function(root){utils.each(root.getNodesByTagName("u s del font strike"),function(node){if(node.tagName=="font"){var cssStyle=[];for(var p in node.attrs){switch(p){case"size":cssStyle.push("font-size:"+({"1":"10","2":"12","3":"16","4":"18","5":"24","6":"32","7":"48"}[node.attrs[p]]||node.attrs[p])+"px");break;case"color":cssStyle.push("color:"+node.attrs[p]);break;case"face":cssStyle.push("font-family:"+node.attrs[p]);break;case"style":cssStyle.push(node.attrs[p]);}}node.attrs={style:cssStyle.join(";")};}else{var val=node.tagName=="u"?"underline":"line-through";node.attrs={style:(node.getAttr("style")||"")+"text-decoration:"+val+";"};}node.tagName="span";});//        utils.each(root.getNodesByTagName(\'span\'), function (node) {\n//            var val;\n//            if(val = node.getAttr(\'class\')){\n//                if(/fontstrikethrough/.test(val)){\n//                    node.setStyle(\'text-decoration\',\'line-through\');\n//                    if(node.attrs[\'class\']){\n//                        node.attrs[\'class\'] = node.attrs[\'class\'].replace(/fontstrikethrough/,\'\');\n//                    }else{\n//                        node.setAttr(\'class\')\n//                    }\n//                }\n//                if(/fontborder/.test(val)){\n//                    node.setStyle(\'border\',\'1px solid #000\');\n//                    if(node.attrs[\'class\']){\n//                        node.attrs[\'class\'] = node.attrs[\'class\'].replace(/fontborder/,\'\');\n//                    }else{\n//                        node.setAttr(\'class\')\n//                    }\n//                }\n//            }\n//        });\n});//    me.addOutputRule(function(root){\n//        utils.each(root.getNodesByTagName(\'span\'), function (node) {\n//            var val;\n//            if(val = node.getStyle(\'text-decoration\')){\n//                if(/line-through/.test(val)){\n//                    if(node.attrs[\'class\']){\n//                        node.attrs[\'class\'] += \' fontstrikethrough\';\n//                    }else{\n//                        node.setAttr(\'class\',\'fontstrikethrough\')\n//                    }\n//                }\n//\n//                node.setStyle(\'text-decoration\')\n//            }\n//            if(val = node.getStyle(\'border\')){\n//                if(/1px/.test(val) && /solid/.test(val)){\n//                    if(node.attrs[\'class\']){\n//                        node.attrs[\'class\'] += \' fontborder\';\n//\n//                    }else{\n//                        node.setAttr(\'class\',\'fontborder\')\n//                    }\n//                }\n//                node.setStyle(\'border\')\n//\n//            }\n//        });\n//    });\nfor(var p in fonts){(function(cmd,style){UE.commands[cmd]={execCommand:function execCommand(cmdName,value){value=value||(this.queryCommandState(cmdName)?"none":cmdName=="underline"?"underline":cmdName=="fontborder"?"1px solid #000":"line-through");var me=this,range=this.selection.getRange(),text;if(value=="default"){if(range.collapsed){text=me.document.createTextNode("font");range.insertNode(text).select();}me.execCommand("removeFormat","span,a",style);if(text){range.setStartBefore(text).collapse(true);domUtils.remove(text);}mergesibling(range,cmdName,value);range.select();}else{if(!range.collapsed){if(needCmd[cmd]&&me.queryCommandValue(cmd)){me.execCommand("removeFormat","span,a",style);}range=me.selection.getRange();range.applyInlineStyle("span",{style:style+":"+value});mergesibling(range,cmdName,value);range.select();}else{var span=domUtils.findParentByTagName(range.startContainer,"span",true);text=me.document.createTextNode("font");if(span&&!span.children.length&&!span[browser.ie?"innerText":"textContent"].replace(fillCharReg,"").length){//for ie hack when enter\nrange.insertNode(text);if(needCmd[cmd]){range.selectNode(text).select();me.execCommand("removeFormat","span,a",style,null);span=domUtils.findParentByTagName(text,"span",true);range.setStartBefore(text);}span&&(span.style.cssText+=";"+style+":"+value);range.collapse(true).select();}else{range.insertNode(text);range.selectNode(text).select();span=range.document.createElement("span");if(needCmd[cmd]){//a标签内的不处理跳过\nif(domUtils.findParentByTagName(text,"a",true)){range.setStartBefore(text).setCursor();domUtils.remove(text);return;}me.execCommand("removeFormat","span,a",style);}span.style.cssText=style+":"+value;text.parentNode.insertBefore(span,text);//修复，span套span 但样式不继承的问题\nif(!browser.ie||browser.ie&&browser.version==9){var spanParent=span.parentNode;while(!domUtils.isBlockElm(spanParent)){if(spanParent.tagName=="SPAN"){//opera合并style不会加入";"\nspan.style.cssText=spanParent.style.cssText+";"+span.style.cssText;}spanParent=spanParent.parentNode;}}if(opera){setTimeout(function(){range.setStart(span,0).collapse(true);mergesibling(range,cmdName,value);range.select();});}else{range.setStart(span,0).collapse(true);mergesibling(range,cmdName,value);range.select();}//trace:981\n//domUtils.mergeToParent(span)\n}domUtils.remove(text);}}return true;},queryCommandValue:function queryCommandValue(cmdName){var startNode=this.selection.getStart();//trace:946\nif(cmdName=="underline"||cmdName=="strikethrough"){var tmpNode=startNode,value;while(tmpNode&&!domUtils.isBlockElm(tmpNode)&&!domUtils.isBody(tmpNode)){if(tmpNode.nodeType==1){value=domUtils.getComputedStyle(tmpNode,style);if(value!="none"){return value;}}tmpNode=tmpNode.parentNode;}return"none";}if(cmdName=="fontborder"){var tmp=startNode,val;while(tmp&&dtd.$inline[tmp.tagName]){if(val=domUtils.getComputedStyle(tmp,"border")){if(/1px/.test(val)&&/solid/.test(val)){return val;}}tmp=tmp.parentNode;}return"";}if(cmdName=="FontSize"){var styleVal=domUtils.getComputedStyle(startNode,style),tmp=/^([\\d\\.]+)(\\w+)$/.exec(styleVal);if(tmp){return Math.floor(tmp[1])+tmp[2];}return styleVal;}return domUtils.getComputedStyle(startNode,style);},queryCommandState:function queryCommandState(cmdName){if(!needCmd[cmdName])return 0;var val=this.queryCommandValue(cmdName);if(cmdName=="fontborder"){return /1px/.test(val)&&/solid/.test(val);}else{return cmdName=="underline"?/underline/.test(val):/line\\-through/.test(val);}}};})(p,fonts[p]);}};// plugins/link.js\n/**\n * 超链接\n * @file\n * @since 1.2.6.1\n *//**\n * 插入超链接\n * @command link\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { Object } options   设置自定义属性，例如：url、title、target\n * @example\n * ```javascript\n * editor.execCommand( \'link\', \'{\n *     url:\'ueditor.baidu.com\',\n *     title:\'ueditor\',\n *     target:\'_blank\'\n * }\' );\n * ```\n *//**\n * 返回当前选中的第一个超链接节点\n * @command link\n * @method queryCommandValue\n * @param { String } cmd 命令字符串\n * @return { Element } 超链接节点\n * @example\n * ```javascript\n * editor.queryCommandValue( \'link\' );\n * ```\n *//**\n * 取消超链接\n * @command unlink\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'unlink\');\n * ```\n */UE.plugins["link"]=function(){function optimize(range){var start=range.startContainer,end=range.endContainer;if(start=domUtils.findParentByTagName(start,"a",true)){range.setStartBefore(start);}if(end=domUtils.findParentByTagName(end,"a",true)){range.setEndAfter(end);}}UE.commands["unlink"]={execCommand:function execCommand(){var range=this.selection.getRange(),bookmark;if(range.collapsed&&!domUtils.findParentByTagName(range.startContainer,"a",true)){return;}bookmark=range.createBookmark();optimize(range);range.removeInlineStyle("a").moveToBookmark(bookmark).select();},queryCommandState:function queryCommandState(){return!this.highlight&&this.queryCommandValue("link")?0:-1;}};function doLink(range,opt,me){var rngClone=range.cloneRange(),link=me.queryCommandValue("link");optimize(range=range.adjustmentBoundary());var start=range.startContainer;if(start.nodeType==1&&link){start=start.childNodes[range.startOffset];if(start&&start.nodeType==1&&start.tagName=="A"&&/^(?:https?|ftp|file)\\s*:\\s*\\/\\//.test(start[browser.ie?"innerText":"textContent"])){start[browser.ie?"innerText":"textContent"]=utils.html(opt.textValue||opt.href);}}if(!rngClone.collapsed||link){range.removeInlineStyle("a");rngClone=range.cloneRange();}if(rngClone.collapsed){var a=range.document.createElement("a"),text="";if(opt.textValue){text=utils.html(opt.textValue);delete opt.textValue;}else{text=utils.html(opt.href);}domUtils.setAttributes(a,opt);start=domUtils.findParentByTagName(rngClone.startContainer,"a",true);if(start&&domUtils.isInNodeEndBoundary(rngClone,start)){range.setStartAfter(start).collapse(true);}a[browser.ie?"innerText":"textContent"]=text;range.insertNode(a).selectNode(a);}else{range.applyInlineStyle("a",opt);}}UE.commands["link"]={execCommand:function execCommand(cmdName,opt){var range;opt._href&&(opt._href=utils.unhtml(opt._href,/[<">]/g));opt.href&&(opt.href=utils.unhtml(opt.href,/[<">]/g));opt.textValue&&(opt.textValue=utils.unhtml(opt.textValue,/[<">]/g));doLink(range=this.selection.getRange(),opt,this);//闭合都不加占位符，如果加了会在a后边多个占位符节点，导致a是图片背景组成的列表，出现空白问题\nrange.collapse().select(true);},queryCommandValue:function queryCommandValue(){var range=this.selection.getRange(),node;if(range.collapsed){//                    node = this.selection.getStart();\n//在ie下getstart()取值偏上了\nnode=range.startContainer;node=node.nodeType==1?node:node.parentNode;if(node&&(node=domUtils.findParentByTagName(node,"a",true))&&!domUtils.isInNodeEndBoundary(range,node)){return node;}}else{//trace:1111  如果是<p><a>xx</a></p> startContainer是p就会找不到a\nrange.shrinkBoundary();var start=range.startContainer.nodeType==3||!range.startContainer.childNodes[range.startOffset]?range.startContainer:range.startContainer.childNodes[range.startOffset],end=range.endContainer.nodeType==3||range.endOffset==0?range.endContainer:range.endContainer.childNodes[range.endOffset-1],common=range.getCommonAncestor();node=domUtils.findParentByTagName(common,"a",true);if(!node&&common.nodeType==1){var as=common.getElementsByTagName("a"),ps,pe;for(var i=0,ci;ci=as[i++];){ps=domUtils.getPosition(ci,start),pe=domUtils.getPosition(ci,end);if((ps&domUtils.POSITION_FOLLOWING||ps&domUtils.POSITION_CONTAINS)&&(pe&domUtils.POSITION_PRECEDING||pe&domUtils.POSITION_CONTAINS)){node=ci;break;}}}return node;}},queryCommandState:function queryCommandState(){//判断如果是视频的话连接不可用\n//fix 853\nvar img=this.selection.getRange().getClosedNode(),flag=img&&(img.className=="edui-faked-video"||img.className.indexOf("edui-upload-video")!=-1);return flag?-1:0;}};};// plugins/iframe.js\n///import core\n///import plugins\\inserthtml.js\n///commands 插入框架\n///commandsName  InsertFrame\n///commandsTitle  插入Iframe\n///commandsDialog  dialogs\\insertframe\nUE.plugins["insertframe"]=function(){var me=this;function deleteIframe(){me._iframe&&delete me._iframe;}me.addListener("selectionchange",function(){deleteIframe();});};// plugins/scrawl.js\n///import core\n///commands 涂鸦\n///commandsName  Scrawl\n///commandsTitle  涂鸦\n///commandsDialog  dialogs\\scrawl\nUE.commands["scrawl"]={queryCommandState:function queryCommandState(){return browser.ie&&browser.version<=8?-1:0;}};// plugins/removeformat.js\n/**\n * 清除格式\n * @file\n * @since 1.2.6.1\n *//**\n * 清除文字样式\n * @command removeformat\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param   {String}   tags     以逗号隔开的标签。如：strong\n * @param   {String}   style    样式如：color\n * @param   {String}   attrs    属性如:width\n * @example\n * ```javascript\n * editor.execCommand( \'removeformat\', \'strong\',\'color\',\'width\' );\n * ```\n */UE.plugins["removeformat"]=function(){var me=this;me.setOpt({removeFormatTags:"b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var",removeFormatAttributes:"class,style,lang,width,height,align,hspace,valign"});me.commands["removeformat"]={execCommand:function execCommand(cmdName,tags,style,attrs,notIncludeA){var tagReg=new RegExp("^(?:"+(tags||this.options.removeFormatTags).replace(/,/g,"|")+")$","i"),removeFormatAttributes=style?[]:(attrs||this.options.removeFormatAttributes).split(","),range=new dom.Range(this.document),bookmark,node,parent,filter=function filter(node){return node.nodeType==1;};function isRedundantSpan(node){if(node.nodeType==3||node.tagName.toLowerCase()!="span"){return 0;}if(browser.ie){//ie 下判断实效，所以只能简单用style来判断\n//return node.style.cssText == \'\' ? 1 : 0;\nvar attrs=node.attributes;if(attrs.length){for(var i=0,l=attrs.length;i<l;i++){if(attrs[i].specified){return 0;}}return 1;}}return!node.attributes.length;}function doRemove(range){var bookmark1=range.createBookmark();if(range.collapsed){range.enlarge(true);}//不能把a标签切了\nif(!notIncludeA){var aNode=domUtils.findParentByTagName(range.startContainer,"a",true);if(aNode){range.setStartBefore(aNode);}aNode=domUtils.findParentByTagName(range.endContainer,"a",true);if(aNode){range.setEndAfter(aNode);}}bookmark=range.createBookmark();node=bookmark.start;//切开始\nwhile((parent=node.parentNode)&&!domUtils.isBlockElm(parent)){domUtils.breakParent(node,parent);domUtils.clearEmptySibling(node);}if(bookmark.end){//切结束\nnode=bookmark.end;while((parent=node.parentNode)&&!domUtils.isBlockElm(parent)){domUtils.breakParent(node,parent);domUtils.clearEmptySibling(node);}//开始去除样式\nvar current=domUtils.getNextDomNode(bookmark.start,false,filter),next;while(current){if(current==bookmark.end){break;}next=domUtils.getNextDomNode(current,true,filter);if(!dtd.$empty[current.tagName.toLowerCase()]&&!domUtils.isBookmarkNode(current)){if(tagReg.test(current.tagName)){if(style){domUtils.removeStyle(current,style);if(isRedundantSpan(current)&&style!="text-decoration"){domUtils.remove(current,true);}}else{domUtils.remove(current,true);}}else{//trace:939  不能把list上的样式去掉\nif(!dtd.$tableContent[current.tagName]&&!dtd.$list[current.tagName]){domUtils.removeAttributes(current,removeFormatAttributes);if(isRedundantSpan(current)){domUtils.remove(current,true);}}}}current=next;}}//trace:1035\n//trace:1096 不能把td上的样式去掉，比如边框\nvar pN=bookmark.start.parentNode;if(domUtils.isBlockElm(pN)&&!dtd.$tableContent[pN.tagName]&&!dtd.$list[pN.tagName]){domUtils.removeAttributes(pN,removeFormatAttributes);}pN=bookmark.end.parentNode;if(bookmark.end&&domUtils.isBlockElm(pN)&&!dtd.$tableContent[pN.tagName]&&!dtd.$list[pN.tagName]){domUtils.removeAttributes(pN,removeFormatAttributes);}range.moveToBookmark(bookmark).moveToBookmark(bookmark1);//清除冗余的代码 <b><bookmark></b>\nvar node=range.startContainer,tmp,collapsed=range.collapsed;while(node.nodeType==1&&domUtils.isEmptyNode(node)&&dtd.$removeEmpty[node.tagName]){tmp=node.parentNode;range.setStartBefore(node);//trace:937\n//更新结束边界\nif(range.startContainer===range.endContainer){range.endOffset--;}domUtils.remove(node);node=tmp;}if(!collapsed){node=range.endContainer;while(node.nodeType==1&&domUtils.isEmptyNode(node)&&dtd.$removeEmpty[node.tagName]){tmp=node.parentNode;range.setEndBefore(node);domUtils.remove(node);node=tmp;}}}range=this.selection.getRange();doRemove(range);range.select();}};};// plugins/blockquote.js\n/**\n * 添加引用\n * @file\n * @since 1.2.6.1\n *//**\n * 添加引用\n * @command blockquote\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'blockquote\' );\n * ```\n *//**\n * 添加引用\n * @command blockquote\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { Object } attrs 节点属性\n * @example\n * ```javascript\n * editor.execCommand( \'blockquote\',{\n *     style: "color: red;"\n * } );\n * ```\n */UE.plugins["blockquote"]=function(){var me=this;function getObj(editor){return domUtils.filterNodeList(editor.selection.getStartElementPath(),"blockquote");}me.commands["blockquote"]={execCommand:function execCommand(cmdName,attrs){var range=this.selection.getRange(),obj=getObj(this),blockquote=dtd.blockquote,bookmark=range.createBookmark();if(obj){var start=range.startContainer,startBlock=domUtils.isBlockElm(start)?start:domUtils.findParent(start,function(node){return domUtils.isBlockElm(node);}),end=range.endContainer,endBlock=domUtils.isBlockElm(end)?end:domUtils.findParent(end,function(node){return domUtils.isBlockElm(node);});//处理一下li\nstartBlock=domUtils.findParentByTagName(startBlock,"li",true)||startBlock;endBlock=domUtils.findParentByTagName(endBlock,"li",true)||endBlock;if(startBlock.tagName=="LI"||startBlock.tagName=="TD"||startBlock===obj||domUtils.isBody(startBlock)){domUtils.remove(obj,true);}else{domUtils.breakParent(startBlock,obj);}if(startBlock!==endBlock){obj=domUtils.findParentByTagName(endBlock,"blockquote");if(obj){if(endBlock.tagName=="LI"||endBlock.tagName=="TD"||domUtils.isBody(endBlock)){obj.parentNode&&domUtils.remove(obj,true);}else{domUtils.breakParent(endBlock,obj);}}}var blockquotes=domUtils.getElementsByTagName(this.document,"blockquote");for(var i=0,bi;bi=blockquotes[i++];){if(!bi.childNodes.length){domUtils.remove(bi);}else if(domUtils.getPosition(bi,startBlock)&domUtils.POSITION_FOLLOWING&&domUtils.getPosition(bi,endBlock)&domUtils.POSITION_PRECEDING){domUtils.remove(bi,true);}}}else{var tmpRange=range.cloneRange(),node=tmpRange.startContainer.nodeType==1?tmpRange.startContainer:tmpRange.startContainer.parentNode,preNode=node,doEnd=1;//调整开始\nwhile(1){if(domUtils.isBody(node)){if(preNode!==node){if(range.collapsed){tmpRange.selectNode(preNode);doEnd=0;}else{tmpRange.setStartBefore(preNode);}}else{tmpRange.setStart(node,0);}break;}if(!blockquote[node.tagName]){if(range.collapsed){tmpRange.selectNode(preNode);}else{tmpRange.setStartBefore(preNode);}break;}preNode=node;node=node.parentNode;}//调整结束\nif(doEnd){preNode=node=node=tmpRange.endContainer.nodeType==1?tmpRange.endContainer:tmpRange.endContainer.parentNode;while(1){if(domUtils.isBody(node)){if(preNode!==node){tmpRange.setEndAfter(preNode);}else{tmpRange.setEnd(node,node.childNodes.length);}break;}if(!blockquote[node.tagName]){tmpRange.setEndAfter(preNode);break;}preNode=node;node=node.parentNode;}}node=range.document.createElement("blockquote");domUtils.setAttributes(node,attrs);node.appendChild(tmpRange.extractContents());tmpRange.insertNode(node);//去除重复的\nvar childs=domUtils.getElementsByTagName(node,"blockquote");for(var i=0,ci;ci=childs[i++];){if(ci.parentNode){domUtils.remove(ci,true);}}}range.moveToBookmark(bookmark).select();},queryCommandState:function queryCommandState(){return getObj(this)?1:0;}};};// plugins/convertcase.js\n/**\n * 大小写转换\n * @file\n * @since 1.2.6.1\n *//**\n * 把选区内文本变大写，与“tolowercase”命令互斥\n * @command touppercase\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'touppercase\' );\n * ```\n *//**\n * 把选区内文本变小写，与“touppercase”命令互斥\n * @command tolowercase\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'tolowercase\' );\n * ```\n */UE.commands["touppercase"]=UE.commands["tolowercase"]={execCommand:function execCommand(cmd){var me=this;var rng=me.selection.getRange();if(rng.collapsed){return rng;}var bk=rng.createBookmark(),bkEnd=bk.end,filterFn=function filterFn(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);},curNode=domUtils.getNextDomNode(bk.start,false,filterFn);while(curNode&&domUtils.getPosition(curNode,bkEnd)&domUtils.POSITION_PRECEDING){if(curNode.nodeType==3){curNode.nodeValue=curNode.nodeValue[cmd=="touppercase"?"toUpperCase":"toLowerCase"]();}curNode=domUtils.getNextDomNode(curNode,true,filterFn);if(curNode===bkEnd){break;}}rng.moveToBookmark(bk).select();}};// plugins/indent.js\n/**\n * 首行缩进\n * @file\n * @since 1.2.6.1\n *//**\n * 缩进\n * @command indent\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'indent\' );\n * ```\n */UE.commands["indent"]={execCommand:function execCommand(){var me=this,value=me.queryCommandState("indent")?"0em":me.options.indentValue||"2em";me.execCommand("Paragraph","p",{style:"text-indent:"+value});},queryCommandState:function queryCommandState(){var pN=domUtils.filterNodeList(this.selection.getStartElementPath(),"p h1 h2 h3 h4 h5 h6");return pN&&pN.style.textIndent&&parseInt(pN.style.textIndent)?1:0;}};// plugins/print.js\n/**\n * 打印\n * @file\n * @since 1.2.6.1\n *//**\n * 打印\n * @command print\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'print\' );\n * ```\n */UE.commands["print"]={execCommand:function execCommand(){this.window.print();},notNeedUndo:1};// plugins/preview.js\n/**\n * 预览\n * @file\n * @since 1.2.6.1\n *//**\n * 预览\n * @command preview\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'preview\' );\n * ```\n */UE.commands["preview"]={execCommand:function execCommand(){var w=window.open("","_blank",""),d=w.document;d.open();d.write(\'<!DOCTYPE html><html><head><meta charset="utf-8"/><script src="\'+this.options.UEDITOR_HOME_URL+\'ueditor.parse.js"><\/script><script>\'+"setTimeout(function(){uParse(\'div\',{rootPath: \'"+this.options.UEDITOR_HOME_URL+"\'})},300)"+"<\/script></head><body><div>"+this.getContent(null,null,true)+"</div></body></html>");d.close();},notNeedUndo:1};// plugins/selectall.js\n/**\n * 全选\n * @file\n * @since 1.2.6.1\n *//**\n * 选中所有内容\n * @command selectall\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'selectall\' );\n * ```\n */UE.plugins["selectall"]=function(){var me=this;me.commands["selectall"]={execCommand:function execCommand(){//去掉了原生的selectAll,因为会出现报错和当内容为空时，不能出现闭合状态的光标\nvar me=this,body=me.body,range=me.selection.getRange();range.selectNodeContents(body);if(domUtils.isEmptyBlock(body)){//opera不能自动合并到元素的里边，要手动处理一下\nif(browser.opera&&body.firstChild&&body.firstChild.nodeType==1){range.setStartAtFirst(body.firstChild);}range.collapse(true);}range.select(true);},notNeedUndo:1};//快捷键\nme.addshortcutkey({selectAll:"ctrl+65"});};// plugins/paragraph.js\n/**\n * 段落样式\n * @file\n * @since 1.2.6.1\n *//**\n * 段落格式\n * @command paragraph\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param {String}   style               标签值为：\'p\', \'h1\', \'h2\', \'h3\', \'h4\', \'h5\', \'h6\'\n * @param {Object}   attrs               标签的属性\n * @example\n * ```javascript\n * editor.execCommand( \'Paragraph\',\'h1\',\'{\n *     class:\'test\'\n * }\' );\n * ```\n *//**\n * 返回选区内节点标签名\n * @command paragraph\n * @method queryCommandValue\n * @param { String } cmd 命令字符串\n * @return { String } 节点标签名\n * @example\n * ```javascript\n * editor.queryCommandValue( \'Paragraph\' );\n * ```\n */UE.plugins["paragraph"]=function(){var me=this,block=domUtils.isBlockElm,notExchange=["TD","LI","PRE"],doParagraph=function doParagraph(range,style,attrs,sourceCmdName){var bookmark=range.createBookmark(),filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!="br"&&!domUtils.isBookmarkNode(node):!domUtils.isWhitespace(node);},para;range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode;while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){if(current.nodeType==3||!block(current)){tmpRange.setStartBefore(current);while(current&&current!==bookmark2.end&&!block(current)){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return!block(node);});}tmpRange.setEndAfter(tmpNode);para=range.document.createElement(style);if(attrs){domUtils.setAttributes(para,attrs);if(sourceCmdName&&sourceCmdName=="customstyle"&&attrs.style){para.style.cssText=attrs.style;}}para.appendChild(tmpRange.extractContents());//需要内容占位\nif(domUtils.isEmptyNode(para)){domUtils.fillChar(range.document,para);}tmpRange.insertNode(para);var parent=para.parentNode;//如果para上一级是一个block元素且不是body,td就删除它\nif(block(parent)&&!domUtils.isBody(para.parentNode)&&utils.indexOf(notExchange,parent.tagName)==-1){//存储dir,style\nif(!(sourceCmdName&&sourceCmdName=="customstyle")){parent.getAttribute("dir")&&para.setAttribute("dir",parent.getAttribute("dir"));//trace:1070\nparent.style.cssText&&(para.style.cssText=parent.style.cssText+";"+para.style.cssText);//trace:1030\nparent.style.textAlign&&!para.style.textAlign&&(para.style.textAlign=parent.style.textAlign);parent.style.textIndent&&!para.style.textIndent&&(para.style.textIndent=parent.style.textIndent);parent.style.padding&&!para.style.padding&&(para.style.padding=parent.style.padding);}//trace:1706 选择的就是h1-6要删除\nif(attrs&&/h\\d/i.test(parent.tagName)&&!/h\\d/i.test(para.tagName)){domUtils.setAttributes(parent,attrs);if(sourceCmdName&&sourceCmdName=="customstyle"&&attrs.style){parent.style.cssText=attrs.style;}domUtils.remove(para.parentNode,true);para=parent;}else{domUtils.remove(para.parentNode,true);}}if(utils.indexOf(notExchange,parent.tagName)!=-1){current=parent;}else{current=para;}current=domUtils.getNextDomNode(current,false,filterFn);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);};me.setOpt("paragraph",{p:"",h1:"",h2:"",h3:"",h4:"",h5:"",h6:""});me.commands["paragraph"]={execCommand:function execCommand(cmdName,style,attrs,sourceCmdName){var range=this.selection.getRange();//闭合时单独处理\nif(range.collapsed){var txt=this.document.createTextNode("p");range.insertNode(txt);//去掉冗余的fillchar\nif(browser.ie){var node=txt.previousSibling;if(node&&domUtils.isWhitespace(node)){domUtils.remove(node);}node=txt.nextSibling;if(node&&domUtils.isWhitespace(node)){domUtils.remove(node);}}}range=doParagraph(range,style,attrs,sourceCmdName);if(txt){range.setStartBefore(txt).collapse(true);pN=txt.parentNode;domUtils.remove(txt);if(domUtils.isBlockElm(pN)&&domUtils.isEmptyNode(pN)){domUtils.fillNode(this.document,pN);}}if(browser.gecko&&range.collapsed&&range.startContainer.nodeType==1){var child=range.startContainer.childNodes[range.startOffset];if(child&&child.nodeType==1&&child.tagName.toLowerCase()==style){range.setStart(child,0).collapse(true);}}//trace:1097 原来有true，原因忘了，但去了就不能清除多余的占位符了\nrange.select();return true;},queryCommandValue:function queryCommandValue(){var node=domUtils.filterNodeList(this.selection.getStartElementPath(),"p h1 h2 h3 h4 h5 h6");return node?node.tagName.toLowerCase():"";}};};// plugins/directionality.js\n/**\n * 设置文字输入的方向的插件\n * @file\n * @since 1.2.6.1\n */(function(){var block=domUtils.isBlockElm,getObj=function getObj(editor){//            var startNode = editor.selection.getStart(),\n//                parents;\n//            if ( startNode ) {\n//                //查找所有的是block的父亲节点\n//                parents = domUtils.findParents( startNode, true, block, true );\n//                for ( var i = 0,ci; ci = parents[i++]; ) {\n//                    if ( ci.getAttribute( \'dir\' ) ) {\n//                        return ci;\n//                    }\n//                }\n//            }\nreturn domUtils.filterNodeList(editor.selection.getStartElementPath(),function(n){return n&&n.nodeType==1&&n.getAttribute("dir");});},doDirectionality=function doDirectionality(range,editor,forward){var bookmark,filterFn=function filterFn(node){return node.nodeType==1?!domUtils.isBookmarkNode(node):!domUtils.isWhitespace(node);},obj=getObj(editor);if(obj&&range.collapsed){obj.setAttribute("dir",forward);return range;}bookmark=range.createBookmark();range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode;while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){if(current.nodeType==3||!block(current)){tmpRange.setStartBefore(current);while(current&&current!==bookmark2.end&&!block(current)){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return!block(node);});}tmpRange.setEndAfter(tmpNode);var common=tmpRange.getCommonAncestor();if(!domUtils.isBody(common)&&block(common)){//遍历到了block节点\ncommon.setAttribute("dir",forward);current=common;}else{//没有遍历到，添加一个block节点\nvar p=range.document.createElement("p");p.setAttribute("dir",forward);var frag=tmpRange.extractContents();p.appendChild(frag);tmpRange.insertNode(p);current=p;}current=domUtils.getNextDomNode(current,false,filterFn);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);};/**\n     * 文字输入方向\n     * @command directionality\n     * @method execCommand\n     * @param { String } cmdName 命令字符串\n     * @param { String } forward 传入\'ltr\'表示从左向右输入，传入\'rtl\'表示从右向左输入\n     * @example\n     * ```javascript\n     * editor.execCommand( \'directionality\', \'ltr\');\n     * ```\n     *//**\n     * 查询当前选区的文字输入方向\n     * @command directionality\n     * @method queryCommandValue\n     * @param { String } cmdName 命令字符串\n     * @return { String } 返回\'ltr\'表示从左向右输入，返回\'rtl\'表示从右向左输入\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( \'directionality\');\n     * ```\n     */UE.commands["directionality"]={execCommand:function execCommand(cmdName,forward){var range=this.selection.getRange();//闭合时单独处理\nif(range.collapsed){var txt=this.document.createTextNode("d");range.insertNode(txt);}doDirectionality(range,this,forward);if(txt){range.setStartBefore(txt).collapse(true);domUtils.remove(txt);}range.select();return true;},queryCommandValue:function queryCommandValue(){var node=getObj(this);return node?node.getAttribute("dir"):"ltr";}};})();// plugins/horizontal.js\n/**\n * 插入分割线插件\n * @file\n * @since 1.2.6.1\n *//**\n * 插入分割线\n * @command horizontal\n * @method execCommand\n * @param { String } cmdName 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'horizontal\' );\n * ```\n */UE.plugins["horizontal"]=function(){var me=this;me.commands["horizontal"]={execCommand:function execCommand(cmdName){var me=this;if(me.queryCommandState(cmdName)!==-1){me.execCommand("insertHtml","<hr>");var range=me.selection.getRange(),start=range.startContainer;if(start.nodeType==1&&!start.childNodes[range.startOffset]){var tmp;if(tmp=start.childNodes[range.startOffset-1]){if(tmp.nodeType==1&&tmp.tagName=="HR"){if(me.options.enterTag=="p"){tmp=me.document.createElement("p");range.insertNode(tmp);range.setStart(tmp,0).setCursor();}else{tmp=me.document.createElement("br");range.insertNode(tmp);range.setStartBefore(tmp).setCursor();}}}}return true;}},//边界在table里不能加分隔线\nqueryCommandState:function queryCommandState(){return domUtils.filterNodeList(this.selection.getStartElementPath(),"table")?-1:0;}};//    me.addListener(\'delkeyup\',function(){\n//        var rng = this.selection.getRange();\n//        if(browser.ie && browser.version > 8){\n//            rng.txtToElmBoundary(true);\n//            if(domUtils.isStartInblock(rng)){\n//                var tmpNode = rng.startContainer;\n//                var pre = tmpNode.previousSibling;\n//                if(pre && domUtils.isTagNode(pre,\'hr\')){\n//                    domUtils.remove(pre);\n//                    rng.select();\n//                    return;\n//                }\n//            }\n//        }\n//        if(domUtils.isBody(rng.startContainer)){\n//            var hr = rng.startContainer.childNodes[rng.startOffset -1];\n//            if(hr && hr.nodeName == \'HR\'){\n//                var next = hr.nextSibling;\n//                if(next){\n//                    rng.setStart(next,0)\n//                }else if(hr.previousSibling){\n//                    rng.setStartAtLast(hr.previousSibling)\n//                }else{\n//                    var p = this.document.createElement(\'p\');\n//                    hr.parentNode.insertBefore(p,hr);\n//                    domUtils.fillNode(this.document,p);\n//                    rng.setStart(p,0);\n//                }\n//                domUtils.remove(hr);\n//                rng.setCursor(false,true);\n//            }\n//        }\n//    })\nme.addListener("delkeydown",function(name,evt){var rng=this.selection.getRange();rng.txtToElmBoundary(true);if(domUtils.isStartInblock(rng)){var tmpNode=rng.startContainer;var pre=tmpNode.previousSibling;if(pre&&domUtils.isTagNode(pre,"hr")){domUtils.remove(pre);rng.select();domUtils.preventDefault(evt);return true;}}});};// plugins/time.js\n/**\n * 插入时间和日期\n * @file\n * @since 1.2.6.1\n *//**\n * 插入时间，默认格式：12:59:59\n * @command time\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'time\');\n * ```\n *//**\n * 插入日期，默认格式：2013-08-30\n * @command date\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'date\');\n * ```\n */UE.commands["time"]=UE.commands["date"]={execCommand:function execCommand(cmd,format){var date=new Date();function formatTime(date,format){var hh=("0"+date.getHours()).slice(-2),ii=("0"+date.getMinutes()).slice(-2),ss=("0"+date.getSeconds()).slice(-2);format=format||"hh:ii:ss";return format.replace(/hh/gi,hh).replace(/ii/gi,ii).replace(/ss/gi,ss);}function formatDate(date,format){var yyyy=("000"+date.getFullYear()).slice(-4),yy=yyyy.slice(-2),mm=("0"+(date.getMonth()+1)).slice(-2),dd=("0"+date.getDate()).slice(-2);format=format||"yyyy-mm-dd";return format.replace(/yyyy/gi,yyyy).replace(/yy/gi,yy).replace(/mm/gi,mm).replace(/dd/gi,dd);}this.execCommand("insertHtml",cmd=="time"?formatTime(date,format):formatDate(date,format));}};// plugins/rowspacing.js\n/**\n * 段前段后间距插件\n * @file\n * @since 1.2.6.1\n *//**\n * 设置段间距\n * @command rowspacing\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @param { String } value 段间距的值，以px为单位\n * @param { String } dir 间距位置，top或bottom，分别表示段前和段后\n * @example\n * ```javascript\n * editor.execCommand( \'rowspacing\', \'10\', \'top\' );\n * ```\n */UE.plugins["rowspacing"]=function(){var me=this;me.setOpt({rowspacingtop:["5","10","15","20","25"],rowspacingbottom:["5","10","15","20","25"]});me.commands["rowspacing"]={execCommand:function execCommand(cmdName,value,dir){this.execCommand("paragraph","p",{style:"margin-"+dir+":"+value+"px"});return true;},queryCommandValue:function queryCommandValue(cmdName,dir){var pN=domUtils.filterNodeList(this.selection.getStartElementPath(),function(node){return domUtils.isBlockElm(node);}),value;//trace:1026\nif(pN){value=domUtils.getComputedStyle(pN,"margin-"+dir).replace(/[^\\d]/g,"");return!value?0:value;}return 0;}};};// plugins/lineheight.js\n/**\n * 设置行内间距\n * @file\n * @since 1.2.6.1\n */UE.plugins["lineheight"]=function(){var me=this;me.setOpt({lineheight:["1","1.5","1.75","2","3","4","5"]});/**\n     * 行距\n     * @command lineheight\n     * @method execCommand\n     * @param { String } cmdName 命令字符串\n     * @param { String } value 传入的行高值， 该值是当前字体的倍数， 例如： 1.5, 1.75\n     * @example\n     * ```javascript\n     * editor.execCommand( \'lineheight\', 1.5);\n     * ```\n     *//**\n     * 查询当前选区内容的行高大小\n     * @command lineheight\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 返回当前行高大小\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( \'lineheight\' );\n     * ```\n     */me.commands["lineheight"]={execCommand:function execCommand(cmdName,value){this.execCommand("paragraph","p",{style:"line-height:"+(value=="1"?"normal":value+"em")});return true;},queryCommandValue:function queryCommandValue(){var pN=domUtils.filterNodeList(this.selection.getStartElementPath(),function(node){return domUtils.isBlockElm(node);});if(pN){var value=domUtils.getComputedStyle(pN,"line-height");return value=="normal"?1:value.replace(/[^\\d.]*/gi,"");}}};};// plugins/insertcode.js\n/**\n * 插入代码插件\n * @file\n * @since 1.2.6.1\n */UE.plugins["insertcode"]=function(){var me=this;me.ready(function(){utils.cssRule("pre","pre{margin:.5em 0;padding:.4em .6em;border-radius:8px;background:#f8f8f8;}",me.document);});me.setOpt("insertcode",{as3:"ActionScript3",bash:"Bash/Shell",cpp:"C/C++",css:"Css",cf:"CodeFunction","c#":"C#",delphi:"Delphi",diff:"Diff",erlang:"Erlang",groovy:"Groovy",html:"Html",java:"Java",jfx:"JavaFx",js:"Javascript",pl:"Perl",php:"Php",plain:"Plain Text",ps:"PowerShell",python:"Python",ruby:"Ruby",scala:"Scala",sql:"Sql",vb:"Vb",xml:"Xml"});/**\n     * 插入代码\n     * @command insertcode\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { String } lang 插入代码的语言\n     * @example\n     * ```javascript\n     * editor.execCommand( \'insertcode\', \'javascript\' );\n     * ```\n     *//**\n     * 如果选区所在位置是插入插入代码区域，返回代码的语言\n     * @command insertcode\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 返回代码的语言\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( \'insertcode\' );\n     * ```\n     */me.commands["insertcode"]={execCommand:function execCommand(cmd,lang){var me=this,rng=me.selection.getRange(),pre=domUtils.findParentByTagName(rng.startContainer,"pre",true);if(pre){pre.className="brush:"+lang+";toolbar:false;";}else{var code="";if(rng.collapsed){code=browser.ie&&browser.ie11below?browser.version<=8?"&nbsp;":"":"<br/>";}else{var frag=rng.extractContents();var div=me.document.createElement("div");div.appendChild(frag);utils.each(UE.filterNode(UE.htmlparser(div.innerHTML.replace(/[\\r\\t]/g,"")),me.options.filterTxtRules).children,function(node){if(browser.ie&&browser.ie11below&&browser.version>8){if(node.type=="element"){if(node.tagName=="br"){code+="\\n";}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=="element"){if(cn.tagName=="br"){code+="\\n";}else if(!dtd.$empty[node.tagName]){code+=cn.innerText();}}else{code+=cn.data;}});if(!/\\n$/.test(code)){code+="\\n";}}}else{code+=node.data+"\\n";}if(!node.nextSibling()&&/\\n$/.test(code)){code=code.replace(/\\n$/,"");}}else{if(browser.ie&&browser.ie11below){if(node.type=="element"){if(node.tagName=="br"){code+="<br>";}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=="element"){if(cn.tagName=="br"){code+="<br>";}else if(!dtd.$empty[node.tagName]){code+=cn.innerText();}}else{code+=cn.data;}});if(!/br>$/.test(code)){code+="<br>";}}}else{code+=node.data+"<br>";}if(!node.nextSibling()&&/<br>$/.test(code)){code=code.replace(/<br>$/,"");}}else{code+=node.type=="element"?dtd.$empty[node.tagName]?"":node.innerText():node.data;if(!/br\\/?\\s*>$/.test(code)){if(!node.nextSibling())return;code+="<br>";}}}});}me.execCommand("inserthtml",\'<pre id="coder"class="brush:\'+lang+\';toolbar:false">\'+code+"</pre>",true);pre=me.document.getElementById("coder");domUtils.removeAttributes(pre,"id");var tmpNode=pre.previousSibling;if(tmpNode&&(tmpNode.nodeType==3&&tmpNode.nodeValue.length==1&&browser.ie&&browser.version==6||domUtils.isEmptyBlock(tmpNode))){domUtils.remove(tmpNode);}var rng=me.selection.getRange();if(domUtils.isEmptyBlock(pre)){rng.setStart(pre,0).setCursor(false,true);}else{rng.selectNodeContents(pre).select();}}},queryCommandValue:function queryCommandValue(){var path=this.selection.getStartElementPath();var lang="";utils.each(path,function(node){if(node.nodeName=="PRE"){var match=node.className.match(/brush:([^;]+)/);lang=match&&match[1]?match[1]:"";return false;}});return lang;}};me.addInputRule(function(root){utils.each(root.getNodesByTagName("pre"),function(pre){var brs=pre.getNodesByTagName("br");if(brs.length){browser.ie&&browser.ie11below&&browser.version>8&&utils.each(brs,function(br){var txt=UE.uNode.createText("\\n");br.parentNode.insertBefore(txt,br);br.parentNode.removeChild(br);});return;}if(browser.ie&&browser.ie11below&&browser.version>8)return;var code=pre.innerText().split(/\\n/);pre.innerHTML("");utils.each(code,function(c){if(c.length){pre.appendChild(UE.uNode.createText(c));}pre.appendChild(UE.uNode.createElement("br"));});});});me.addOutputRule(function(root){utils.each(root.getNodesByTagName("pre"),function(pre){var code="";utils.each(pre.children,function(n){if(n.type=="text"){//在ie下文本内容有可能末尾带有\\n要去掉\n//trace:3396\ncode+=n.data.replace(/[ ]/g,"&nbsp;").replace(/\\n$/,"");}else{if(n.tagName=="br"){code+="\\n";}else{code+=!dtd.$empty[n.tagName]?"":n.innerText();}}});pre.innerText(code.replace(/(&nbsp;|\\n)+$/,""));});});//不需要判断highlight的command列表\nme.notNeedCodeQuery={help:1,undo:1,redo:1,source:1,print:1,searchreplace:1,fullscreen:1,preview:1,insertparagraph:1,elementpath:1,insertcode:1,inserthtml:1,selectall:1};//将queyCommamndState重置\nvar orgQuery=me.queryCommandState;me.queryCommandState=function(cmd){var me=this;if(!me.notNeedCodeQuery[cmd.toLowerCase()]&&me.selection&&me.queryCommandValue("insertcode")){return-1;}return UE.Editor.prototype.queryCommandState.apply(this,arguments);};me.addListener("beforeenterkeydown",function(){var rng=me.selection.getRange();var pre=domUtils.findParentByTagName(rng.startContainer,"pre",true);if(pre){me.fireEvent("saveScene");if(!rng.collapsed){rng.deleteContents();}if(!browser.ie||browser.ie9above){var tmpNode=me.document.createElement("br"),pre;rng.insertNode(tmpNode).setStartAfter(tmpNode).collapse(true);var next=tmpNode.nextSibling;if(!next&&(!browser.ie||browser.version>10)){rng.insertNode(tmpNode.cloneNode(false));}else{rng.setStartAfter(tmpNode);}pre=tmpNode.previousSibling;var tmp;while(pre){tmp=pre;pre=pre.previousSibling;if(!pre||pre.nodeName=="BR"){pre=tmp;break;}}if(pre){var str="";while(pre&&pre.nodeName!="BR"&&new RegExp("^[\\\\s"+domUtils.fillChar+"]*$").test(pre.nodeValue)){str+=pre.nodeValue;pre=pre.nextSibling;}if(pre.nodeName!="BR"){var match=pre.nodeValue.match(new RegExp("^([\\\\s"+domUtils.fillChar+"]+)"));if(match&&match[1]){str+=match[1];}}if(str){str=me.document.createTextNode(str);rng.insertNode(str).setStartAfter(str);}}rng.collapse(true).select(true);}else{if(browser.version>8){var txt=me.document.createTextNode("\\n");var start=rng.startContainer;if(rng.startOffset==0){var preNode=start.previousSibling;if(preNode){rng.insertNode(txt);var fillchar=me.document.createTextNode(" ");rng.setStartAfter(txt).insertNode(fillchar).setStart(fillchar,0).collapse(true).select(true);}}else{rng.insertNode(txt).setStartAfter(txt);var fillchar=me.document.createTextNode(" ");start=rng.startContainer.childNodes[rng.startOffset];if(start&&!/^\\n/.test(start.nodeValue)){rng.setStartBefore(txt);}rng.insertNode(fillchar).setStart(fillchar,0).collapse(true).select(true);}}else{var tmpNode=me.document.createElement("br");rng.insertNode(tmpNode);rng.insertNode(me.document.createTextNode(domUtils.fillChar));rng.setStartAfter(tmpNode);pre=tmpNode.previousSibling;var tmp;while(pre){tmp=pre;pre=pre.previousSibling;if(!pre||pre.nodeName=="BR"){pre=tmp;break;}}if(pre){var str="";while(pre&&pre.nodeName!="BR"&&new RegExp("^[ "+domUtils.fillChar+"]*$").test(pre.nodeValue)){str+=pre.nodeValue;pre=pre.nextSibling;}if(pre.nodeName!="BR"){var match=pre.nodeValue.match(new RegExp("^([ "+domUtils.fillChar+"]+)"));if(match&&match[1]){str+=match[1];}}str=me.document.createTextNode(str);rng.insertNode(str).setStartAfter(str);}rng.collapse(true).select();}}me.fireEvent("saveScene");return true;}});me.addListener("tabkeydown",function(cmd,evt){var rng=me.selection.getRange();var pre=domUtils.findParentByTagName(rng.startContainer,"pre",true);if(pre){me.fireEvent("saveScene");if(evt.shiftKey){}else{if(!rng.collapsed){var bk=rng.createBookmark();var start=bk.start.previousSibling;while(start){if(pre.firstChild===start&&!domUtils.isBr(start)){pre.insertBefore(me.document.createTextNode("    "),start);break;}if(domUtils.isBr(start)){pre.insertBefore(me.document.createTextNode("    "),start.nextSibling);break;}start=start.previousSibling;}var end=bk.end;start=bk.start.nextSibling;if(pre.firstChild===bk.start){pre.insertBefore(me.document.createTextNode("    "),start.nextSibling);}while(start&&start!==end){if(domUtils.isBr(start)&&start.nextSibling){if(start.nextSibling===end){break;}pre.insertBefore(me.document.createTextNode("    "),start.nextSibling);}start=start.nextSibling;}rng.moveToBookmark(bk).select();}else{var tmpNode=me.document.createTextNode("    ");rng.insertNode(tmpNode).setStartAfter(tmpNode).collapse(true).select(true);}}me.fireEvent("saveScene");return true;}});me.addListener("beforeinserthtml",function(evtName,html){var me=this,rng=me.selection.getRange(),pre=domUtils.findParentByTagName(rng.startContainer,"pre",true);if(pre){if(!rng.collapsed){rng.deleteContents();}var htmlstr="";if(browser.ie&&browser.version>8){utils.each(UE.filterNode(UE.htmlparser(html),me.options.filterTxtRules).children,function(node){if(node.type=="element"){if(node.tagName=="br"){htmlstr+="\\n";}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=="element"){if(cn.tagName=="br"){htmlstr+="\\n";}else if(!dtd.$empty[node.tagName]){htmlstr+=cn.innerText();}}else{htmlstr+=cn.data;}});if(!/\\n$/.test(htmlstr)){htmlstr+="\\n";}}}else{htmlstr+=node.data+"\\n";}if(!node.nextSibling()&&/\\n$/.test(htmlstr)){htmlstr=htmlstr.replace(/\\n$/,"");}});var tmpNode=me.document.createTextNode(utils.html(htmlstr.replace(/&nbsp;/g," ")));rng.insertNode(tmpNode).selectNode(tmpNode).select();}else{var frag=me.document.createDocumentFragment();utils.each(UE.filterNode(UE.htmlparser(html),me.options.filterTxtRules).children,function(node){if(node.type=="element"){if(node.tagName=="br"){frag.appendChild(me.document.createElement("br"));}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=="element"){if(cn.tagName=="br"){frag.appendChild(me.document.createElement("br"));}else if(!dtd.$empty[node.tagName]){frag.appendChild(me.document.createTextNode(utils.html(cn.innerText().replace(/&nbsp;/g," "))));}}else{frag.appendChild(me.document.createTextNode(utils.html(cn.data.replace(/&nbsp;/g," "))));}});if(frag.lastChild.nodeName!="BR"){frag.appendChild(me.document.createElement("br"));}}}else{frag.appendChild(me.document.createTextNode(utils.html(node.data.replace(/&nbsp;/g," "))));}if(!node.nextSibling()&&frag.lastChild.nodeName=="BR"){frag.removeChild(frag.lastChild);}});rng.insertNode(frag).select();}return true;}});//方向键的处理\nme.addListener("keydown",function(cmd,evt){var me=this,keyCode=evt.keyCode||evt.which;if(keyCode==40){var rng=me.selection.getRange(),pre,start=rng.startContainer;if(rng.collapsed&&(pre=domUtils.findParentByTagName(rng.startContainer,"pre",true))&&!pre.nextSibling){var last=pre.lastChild;while(last&&last.nodeName=="BR"){last=last.previousSibling;}if(last===start||rng.startContainer===pre&&rng.startOffset==pre.childNodes.length){me.execCommand("insertparagraph");domUtils.preventDefault(evt);}}}});//trace:3395\nme.addListener("delkeydown",function(type,evt){var rng=this.selection.getRange();rng.txtToElmBoundary(true);var start=rng.startContainer;if(domUtils.isTagNode(start,"pre")&&rng.collapsed&&domUtils.isStartInblock(rng)){var p=me.document.createElement("p");domUtils.fillNode(me.document,p);start.parentNode.insertBefore(p,start);domUtils.remove(start);rng.setStart(p,0).setCursor(false,true);domUtils.preventDefault(evt);return true;}});};// plugins/cleardoc.js\n/**\n * 清空文档插件\n * @file\n * @since 1.2.6.1\n *//**\n * 清空文档\n * @command cleardoc\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * //editor 是编辑器实例\n * editor.execCommand(\'cleardoc\');\n * ```\n */UE.commands["cleardoc"]={execCommand:function execCommand(cmdName){var me=this,enterTag=me.options.enterTag,range=me.selection.getRange();if(enterTag=="br"){me.body.innerHTML="<br/>";range.setStart(me.body,0).setCursor();}else{me.body.innerHTML="<p>"+(ie?"":"<br/>")+"</p>";range.setStart(me.body.firstChild,0).setCursor(false,true);}setTimeout(function(){me.fireEvent("clearDoc");},0);}};// plugins/anchor.js\n/**\n * 锚点插件，为UEditor提供插入锚点支持\n * @file\n * @since 1.2.6.1\n */UE.plugin.register("anchor",function(){return{bindEvents:{ready:function ready(){utils.cssRule("anchor",".anchorclass{background: url(\'"+this.options.themePath+this.options.theme+"/images/anchor.gif\') no-repeat scroll left center transparent;cursor: auto;display: inline-block;height: 16px;width: 15px;}",this.document);}},outputRule:function outputRule(root){utils.each(root.getNodesByTagName("img"),function(a){var val;if(val=a.getAttr("anchorname")){a.tagName="a";a.setAttr({anchorname:"",name:val,class:""});}});},inputRule:function inputRule(root){utils.each(root.getNodesByTagName("a"),function(a){var val;if((val=a.getAttr("name"))&&!a.getAttr("href")){//过滤掉word冗余标签\n//_Toc\\d+有可能勿命中\nif(/^\\_Toc\\d+$/.test(val)){a.parentNode.removeChild(a);return;}a.tagName="img";a.setAttr({anchorname:a.getAttr("name"),class:"anchorclass"});a.setAttr("name");}});},commands:{/**\n            * 插入锚点\n            * @command anchor\n            * @method execCommand\n            * @param { String } cmd 命令字符串\n            * @param { String } name 锚点名称字符串\n            * @example\n            * ```javascript\n            * //editor 是编辑器实例\n            * editor.execCommand(\'anchor\', \'anchor1\');\n            * ```\n            */anchor:{execCommand:function execCommand(cmd,name){var range=this.selection.getRange(),img=range.getClosedNode();if(img&&img.getAttribute("anchorname")){if(name){img.setAttribute("anchorname",name);}else{range.setStartBefore(img).setCursor();domUtils.remove(img);}}else{if(name){//只在选区的开始插入\nvar anchor=this.document.createElement("img");range.collapse(true);domUtils.setAttributes(anchor,{anchorname:name,class:"anchorclass"});range.insertNode(anchor).setStartAfter(anchor).setCursor(false,true);}}}}}};});// plugins/wordcount.js\n///import core\n///commands 字数统计\n///commandsName  WordCount,wordCount\n///commandsTitle  字数统计\n/*\n * Created by JetBrains WebStorm.\n * User: taoqili\n * Date: 11-9-7\n * Time: 下午8:18\n * To change this template use File | Settings | File Templates.\n */UE.plugins["wordcount"]=function(){var me=this;me.setOpt("wordCount",true);me.addListener("contentchange",function(){me.fireEvent("wordcount");});var timer;me.addListener("ready",function(){var me=this;domUtils.on(me.body,"keyup",function(evt){var code=evt.keyCode||evt.which,//忽略的按键,ctr,alt,shift,方向键\nignores={"16":1,"18":1,"20":1,"37":1,"38":1,"39":1,"40":1};if(code in ignores)return;clearTimeout(timer);timer=setTimeout(function(){me.fireEvent("wordcount");},200);});});};// plugins/pagebreak.js\n/**\n * 分页功能插件\n * @file\n * @since 1.2.6.1\n */UE.plugins["pagebreak"]=function(){var me=this,notBreakTags=["td"];me.setOpt("pageBreakTag","_ueditor_page_break_tag_");function fillNode(node){if(domUtils.isEmptyBlock(node)){var firstChild=node.firstChild,tmpNode;while(firstChild&&firstChild.nodeType==1&&domUtils.isEmptyBlock(firstChild)){tmpNode=firstChild;firstChild=firstChild.firstChild;}!tmpNode&&(tmpNode=node);domUtils.fillNode(me.document,tmpNode);}}//分页符样式添加\nme.ready(function(){utils.cssRule("pagebreak",".pagebreak{display:block;clear:both !important;cursor:default !important;width: 100% !important;margin:0;}",me.document);});function isHr(node){return node&&node.nodeType==1&&node.tagName=="HR"&&node.className=="pagebreak";}me.addInputRule(function(root){root.traversal(function(node){if(node.type=="text"&&node.data==me.options.pageBreakTag){var hr=UE.uNode.createElement(\'<hr class="pagebreak" noshade="noshade" size="5" style="-webkit-user-select: none;">\');node.parentNode.insertBefore(hr,node);node.parentNode.removeChild(node);}});});me.addOutputRule(function(node){utils.each(node.getNodesByTagName("hr"),function(n){if(n.getAttr("class")=="pagebreak"){var txt=UE.uNode.createText(me.options.pageBreakTag);n.parentNode.insertBefore(txt,n);n.parentNode.removeChild(n);}});});/**\n     * 插入分页符\n     * @command pagebreak\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @remind 在表格中插入分页符会把表格切分成两部分\n     * @remind 获取编辑器内的数据时， 编辑器会把分页符转换成“_ueditor_page_break_tag_”字符串，\n     *          以便于提交数据到服务器端后处理分页。\n     * @example\n     * ```javascript\n     * editor.execCommand( \'pagebreak\'); //插入一个hr标签，带有样式类名pagebreak\n     * ```\n     */me.commands["pagebreak"]={execCommand:function execCommand(){var range=me.selection.getRange(),hr=me.document.createElement("hr");domUtils.setAttributes(hr,{class:"pagebreak",noshade:"noshade",size:"5"});domUtils.unSelectable(hr);//table单独处理\nvar node=domUtils.findParentByTagName(range.startContainer,notBreakTags,true),parents=[],pN;if(node){switch(node.tagName){case"TD":pN=node.parentNode;if(!pN.previousSibling){var table=domUtils.findParentByTagName(pN,"table");//                            var tableWrapDiv = table.parentNode;\n//                            if(tableWrapDiv && tableWrapDiv.nodeType == 1\n//                                && tableWrapDiv.tagName == \'DIV\'\n//                                && tableWrapDiv.getAttribute(\'dropdrag\')\n//                                ){\n//                                domUtils.remove(tableWrapDiv,true);\n//                            }\ntable.parentNode.insertBefore(hr,table);parents=domUtils.findParents(hr,true);}else{pN.parentNode.insertBefore(hr,pN);parents=domUtils.findParents(hr);}pN=parents[1];if(hr!==pN){domUtils.breakParent(hr,pN);}//table要重写绑定一下拖拽\nme.fireEvent("afteradjusttable",me.document);}}else{if(!range.collapsed){range.deleteContents();var start=range.startContainer;while(!domUtils.isBody(start)&&domUtils.isBlockElm(start)&&domUtils.isEmptyNode(start)){range.setStartBefore(start).collapse(true);domUtils.remove(start);start=range.startContainer;}}range.insertNode(hr);var pN=hr.parentNode,nextNode;while(!domUtils.isBody(pN)){domUtils.breakParent(hr,pN);nextNode=hr.nextSibling;if(nextNode&&domUtils.isEmptyBlock(nextNode)){domUtils.remove(nextNode);}pN=hr.parentNode;}nextNode=hr.nextSibling;var pre=hr.previousSibling;if(isHr(pre)){domUtils.remove(pre);}else{pre&&fillNode(pre);}if(!nextNode){var p=me.document.createElement("p");hr.parentNode.appendChild(p);domUtils.fillNode(me.document,p);range.setStart(p,0).collapse(true);}else{if(isHr(nextNode)){domUtils.remove(nextNode);}else{fillNode(nextNode);}range.setEndAfter(hr).collapse(false);}range.select(true);}}};};// plugins/wordimage.js\n///import core\n///commands 本地图片引导上传\n///commandsName  WordImage\n///commandsTitle  本地图片引导上传\n///commandsDialog  dialogs\\wordimage\nUE.plugin.register("wordimage",function(){var me=this,images=[];return{commands:{wordimage:{execCommand:function execCommand(){var images=domUtils.getElementsByTagName(me.body,"img");var urlList=[];for(var i=0,ci;ci=images[i++];){var url=ci.getAttribute("word_img");url&&urlList.push(url);}return urlList;},queryCommandState:function queryCommandState(){images=domUtils.getElementsByTagName(me.body,"img");for(var i=0,ci;ci=images[i++];){if(ci.getAttribute("word_img")){return 1;}}return-1;},notNeedUndo:true}},inputRule:function inputRule(root){utils.each(root.getNodesByTagName("img"),function(img){var attrs=img.attrs,flag=parseInt(attrs.width)<128||parseInt(attrs.height)<43,opt=me.options,src=opt.UEDITOR_HOME_URL+"themes/default/images/spacer.gif";if(attrs["src"]&&/^(?:(file:\\/+))/.test(attrs["src"])){img.setAttr({width:attrs.width,height:attrs.height,alt:attrs.alt,word_img:attrs.src,src:src,style:"background:url("+(flag?opt.themePath+opt.theme+"/images/word.gif":opt.langPath+opt.lang+"/images/localimage.png")+") no-repeat center center;border:1px solid #ddd"});}});}};});// plugins/dragdrop.js\nUE.plugins["dragdrop"]=function(){var me=this;me.ready(function(){domUtils.on(this.body,"dragend",function(){var rng=me.selection.getRange();var node=rng.getClosedNode()||me.selection.getStart();if(node&&node.tagName=="IMG"){var pre=node.previousSibling,next;while(next=node.nextSibling){if(next.nodeType==1&&next.tagName=="SPAN"&&!next.firstChild){domUtils.remove(next);}else{break;}}if((pre&&pre.nodeType==1&&!domUtils.isEmptyBlock(pre)||!pre)&&(!next||next&&!domUtils.isEmptyBlock(next))){if(pre&&pre.tagName=="P"&&!domUtils.isEmptyBlock(pre)){pre.appendChild(node);domUtils.moveChild(next,pre);domUtils.remove(next);}else if(next&&next.tagName=="P"&&!domUtils.isEmptyBlock(next)){next.insertBefore(node,next.firstChild);}if(pre&&pre.tagName=="P"&&domUtils.isEmptyBlock(pre)){domUtils.remove(pre);}if(next&&next.tagName=="P"&&domUtils.isEmptyBlock(next)){domUtils.remove(next);}rng.selectNode(node).select();me.fireEvent("saveScene");}}});});me.addListener("keyup",function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==13){var rng=me.selection.getRange(),node;if(node=domUtils.findParentByTagName(rng.startContainer,"p",true)){if(domUtils.getComputedStyle(node,"text-align")=="center"){domUtils.removeStyle(node,"text-align");}}}});};// plugins/undo.js\n/**\n * undo redo\n * @file\n * @since 1.2.6.1\n *//**\n * 撤销上一次执行的命令\n * @command undo\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'undo\' );\n * ```\n *//**\n * 重做上一次执行的命令\n * @command redo\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'redo\' );\n * ```\n */UE.plugins["undo"]=function(){var saveSceneTimer;var me=this,maxUndoCount=me.options.maxUndoCount||20,maxInputCount=me.options.maxInputCount||20,fillchar=new RegExp(domUtils.fillChar+"|</hr>","gi");// ie会产生多余的</hr>\nvar noNeedFillCharTags={ol:1,ul:1,table:1,tbody:1,tr:1,body:1};var orgState=me.options.autoClearEmptyNode;function compareAddr(indexA,indexB){if(indexA.length!=indexB.length)return 0;for(var i=0,l=indexA.length;i<l;i++){if(indexA[i]!=indexB[i])return 0;}return 1;}function compareRangeAddress(rngAddrA,rngAddrB){if(rngAddrA.collapsed!=rngAddrB.collapsed){return 0;}if(!compareAddr(rngAddrA.startAddress,rngAddrB.startAddress)||!compareAddr(rngAddrA.endAddress,rngAddrB.endAddress)){return 0;}return 1;}function UndoManager(){this.list=[];this.index=0;this.hasUndo=false;this.hasRedo=false;this.undo=function(){if(this.hasUndo){if(!this.list[this.index-1]&&this.list.length==1){this.reset();return;}while(this.list[this.index].content==this.list[this.index-1].content){this.index--;if(this.index==0){return this.restore(0);}}this.restore(--this.index);}};this.redo=function(){if(this.hasRedo){while(this.list[this.index].content==this.list[this.index+1].content){this.index++;if(this.index==this.list.length-1){return this.restore(this.index);}}this.restore(++this.index);}};this.restore=function(){var me=this.editor;var scene=this.list[this.index];var root=UE.htmlparser(scene.content.replace(fillchar,""));me.options.autoClearEmptyNode=false;me.filterInputRule(root);me.options.autoClearEmptyNode=orgState;//trace:873\n//去掉展位符\nme.document.body.innerHTML=root.toHtml();me.fireEvent("afterscencerestore");//处理undo后空格不展位的问题\nif(browser.ie){utils.each(domUtils.getElementsByTagName(me.document,"td th caption p"),function(node){if(domUtils.isEmptyNode(node)){domUtils.fillNode(me.document,node);}});}try{var rng=new dom.Range(me.document).moveToAddress(scene.address);rng.select(noNeedFillCharTags[rng.startContainer.nodeName.toLowerCase()]);}catch(e){}this.update();this.clearKey();//不能把自己reset了\nme.fireEvent("reset",true);};this.getScene=function(){var me=this.editor;var rng=me.selection.getRange(),rngAddress=rng.createAddress(false,true);me.fireEvent("beforegetscene");var root=UE.htmlparser(me.body.innerHTML);me.options.autoClearEmptyNode=false;me.filterOutputRule(root);me.options.autoClearEmptyNode=orgState;var cont=root.toHtml();//trace:3461\n//这个会引起回退时导致空格丢失的情况\n//            browser.ie && (cont = cont.replace(/>&nbsp;</g, \'><\').replace(/\\s*</g, \'<\').replace(/>\\s*/g, \'>\'));\nme.fireEvent("aftergetscene");return{address:rngAddress,content:cont};};this.save=function(notCompareRange,notSetCursor){clearTimeout(saveSceneTimer);var currentScene=this.getScene(notSetCursor),lastScene=this.list[this.index];if(lastScene&&lastScene.content!=currentScene.content){me.trigger("contentchange");}//内容相同位置相同不存\nif(lastScene&&lastScene.content==currentScene.content&&(notCompareRange?1:compareRangeAddress(lastScene.address,currentScene.address))){return;}this.list=this.list.slice(0,this.index+1);this.list.push(currentScene);//如果大于最大数量了，就把最前的剔除\nif(this.list.length>maxUndoCount){this.list.shift();}this.index=this.list.length-1;this.clearKey();//跟新undo/redo状态\nthis.update();};this.update=function(){this.hasRedo=!!this.list[this.index+1];this.hasUndo=!!this.list[this.index-1];};this.reset=function(){this.list=[];this.index=0;this.hasUndo=false;this.hasRedo=false;this.clearKey();};this.clearKey=function(){keycont=0;lastKeyCode=null;};}me.undoManger=new UndoManager();me.undoManger.editor=me;function saveScene(){this.undoManger.save();}me.addListener("saveScene",function(){var args=Array.prototype.splice.call(arguments,1);this.undoManger.save.apply(this.undoManger,args);});//    me.addListener(\'beforeexeccommand\', saveScene);\n//    me.addListener(\'afterexeccommand\', saveScene);\nme.addListener("reset",function(type,exclude){if(!exclude){this.undoManger.reset();}});me.commands["redo"]=me.commands["undo"]={execCommand:function execCommand(cmdName){this.undoManger[cmdName]();},queryCommandState:function queryCommandState(cmdName){return this.undoManger["has"+(cmdName.toLowerCase()=="undo"?"Undo":"Redo")]?0:-1;},notNeedUndo:1};var keys={//  /*Backspace*/ 8:1, /*Delete*/ 46:1,\n/*Shift*/16:1,/*Ctrl*/17:1,/*Alt*/18:1,37:1,38:1,39:1,40:1},keycont=0,lastKeyCode;//输入法状态下不计算字符数\nvar inputType=false;me.addListener("ready",function(){domUtils.on(this.body,"compositionstart",function(){inputType=true;});domUtils.on(this.body,"compositionend",function(){inputType=false;});});//快捷键\nme.addshortcutkey({Undo:"ctrl+90",//undo\nRedo:"ctrl+89"//redo\n});var isCollapsed=true;me.addListener("keydown",function(type,evt){var me=this;var keyCode=evt.keyCode||evt.which;if(!keys[keyCode]&&!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey){var save=function save(cont){cont.undoManger.save(false,true);cont.fireEvent("selectionchange");};if(inputType)return;if(!me.selection.getRange().collapsed){me.undoManger.save(false,true);isCollapsed=false;return;}if(me.undoManger.list.length==0){me.undoManger.save(true);}clearTimeout(saveSceneTimer);saveSceneTimer=setTimeout(function(){if(inputType){var interalTimer=setInterval(function(){if(!inputType){save(me);clearInterval(interalTimer);}},300);return;}save(me);},200);lastKeyCode=keyCode;keycont++;if(keycont>=maxInputCount){save(me);}}});me.addListener("keyup",function(type,evt){var keyCode=evt.keyCode||evt.which;if(!keys[keyCode]&&!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey){if(inputType)return;if(!isCollapsed){this.undoManger.save(false,true);isCollapsed=true;}}});//扩展实例，添加关闭和开启命令undo\nme.stopCmdUndo=function(){me.__hasEnterExecCommand=true;};me.startCmdUndo=function(){me.__hasEnterExecCommand=false;};};// plugins/copy.js\nUE.plugin.register("copy",function(){var me=this;function initZeroClipboard(){ZeroClipboard.config({debug:false,swfPath:me.options.UEDITOR_HOME_URL+"third-party/zeroclipboard/ZeroClipboard.swf"});var client=me.zeroclipboard=new ZeroClipboard();// 复制内容\nclient.on("copy",function(e){var client=e.client,rng=me.selection.getRange(),div=document.createElement("div");div.appendChild(rng.cloneContents());client.setText(div.innerText||div.textContent);client.setHtml(div.innerHTML);rng.select();});// hover事件传递到target\nclient.on("mouseover mouseout",function(e){var target=e.target;if(target){if(e.type=="mouseover"){domUtils.addClass(target,"edui-state-hover");}else if(e.type=="mouseout"){domUtils.removeClasses(target,"edui-state-hover");}}});// flash加载不成功\nclient.on("wrongflash noflash",function(){ZeroClipboard.destroy();});// 触发事件\nme.fireEvent("zeroclipboardready",client);}return{bindEvents:{ready:function ready(){if(!browser.ie){if(window.ZeroClipboard){initZeroClipboard();}else{utils.loadFile(document,{src:me.options.UEDITOR_HOME_URL+"third-party/zeroclipboard/ZeroClipboard.js",tag:"script",type:"text/javascript",defer:"defer"},function(){initZeroClipboard();});}}}},commands:{copy:{execCommand:function execCommand(cmd){if(!me.document.execCommand("copy")){alert(me.getLang("copymsg"));}}}}};});// plugins/paste.js\n///import core\n///import plugins/inserthtml.js\n///import plugins/undo.js\n///import plugins/serialize.js\n///commands 粘贴\n///commandsName  PastePlain\n///commandsTitle  纯文本粘贴模式\n/**\n * @description 粘贴\n * @author zhanyi\n */UE.plugins["paste"]=function(){function getClipboardData(callback){var doc=this.document;if(doc.getElementById("baidu_pastebin")){return;}var range=this.selection.getRange(),bk=range.createBookmark(),//创建剪贴的容器div\npastebin=doc.createElement("div");pastebin.id="baidu_pastebin";// Safari 要求div必须有内容，才能粘贴内容进来\nbrowser.webkit&&pastebin.appendChild(doc.createTextNode(domUtils.fillChar+domUtils.fillChar));doc.body.appendChild(pastebin);//trace:717 隐藏的span不能得到top\n//bk.start.innerHTML = \'&nbsp;\';\nbk.start.style.display="";pastebin.style.cssText="position:absolute;width:1px;height:1px;overflow:hidden;left:-1000px;white-space:nowrap;top:"+//要在现在光标平行的位置加入，否则会出现跳动的问题\ndomUtils.getXY(bk.start).y+"px";range.selectNodeContents(pastebin).select(true);setTimeout(function(){if(browser.webkit){for(var i=0,pastebins=doc.querySelectorAll("#baidu_pastebin"),pi;pi=pastebins[i++];){if(domUtils.isEmptyNode(pi)){domUtils.remove(pi);}else{pastebin=pi;break;}}}try{pastebin.parentNode.removeChild(pastebin);}catch(e){}range.moveToBookmark(bk).select(true);callback(pastebin);},0);}var me=this;me.setOpt({retainOnlyLabelPasted:false});var txtContent,htmlContent,address;function getPureHtml(html){return html.replace(/<(\\/?)([\\w\\-]+)([^>]*)>/gi,function(a,b,tagName,attrs){tagName=tagName.toLowerCase();if({img:1}[tagName]){return a;}attrs=attrs.replace(/([\\w\\-]*?)\\s*=\\s*(("([^"]*)")|(\'([^\']*)\')|([^\\s>]+))/gi,function(str,atr,val){if({src:1,href:1,name:1}[atr.toLowerCase()]){return atr+"="+val+" ";}return"";});if({span:1,div:1}[tagName]){return"";}else{return"<"+b+tagName+" "+utils.trim(attrs)+">";}});}function filter(div){var html;if(div.firstChild){//去掉cut中添加的边界值\nvar nodes=domUtils.getElementsByTagName(div,"span");for(var i=0,ni;ni=nodes[i++];){if(ni.id=="_baidu_cut_start"||ni.id=="_baidu_cut_end"){domUtils.remove(ni);}}if(browser.webkit){var brs=div.querySelectorAll("div br");for(var i=0,bi;bi=brs[i++];){var pN=bi.parentNode;if(pN.tagName=="DIV"&&pN.childNodes.length==1){pN.innerHTML="<p><br/></p>";domUtils.remove(pN);}}var divs=div.querySelectorAll("#baidu_pastebin");for(var i=0,di;di=divs[i++];){var tmpP=me.document.createElement("p");di.parentNode.insertBefore(tmpP,di);while(di.firstChild){tmpP.appendChild(di.firstChild);}domUtils.remove(di);}var metas=div.querySelectorAll("meta");for(var i=0,ci;ci=metas[i++];){domUtils.remove(ci);}var brs=div.querySelectorAll("br");for(i=0;ci=brs[i++];){if(/^apple-/i.test(ci.className)){domUtils.remove(ci);}}}if(browser.gecko){var dirtyNodes=div.querySelectorAll("[_moz_dirty]");for(i=0;ci=dirtyNodes[i++];){ci.removeAttribute("_moz_dirty");}}if(!browser.ie){var spans=div.querySelectorAll("span.Apple-style-span");for(var i=0,ci;ci=spans[i++];){domUtils.remove(ci,true);}}//ie下使用innerHTML会产生多余的\\r\\n字符，也会产生&nbsp;这里过滤掉\nhtml=div.innerHTML;//.replace(/>(?:(\\s|&nbsp;)*?)</g,\'><\');\n//过滤word粘贴过来的冗余属性\nhtml=UE.filterWord(html);//取消了忽略空白的第二个参数，粘贴过来的有些是有空白的，会被套上相关的标签\nvar root=UE.htmlparser(html);//如果给了过滤规则就先进行过滤\nif(me.options.filterRules){UE.filterNode(root,me.options.filterRules);}//执行默认的处理\nme.filterInputRule(root);//针对chrome的处理\nif(browser.webkit){var br=root.lastChild();if(br&&br.type=="element"&&br.tagName=="br"){root.removeChild(br);}utils.each(me.body.querySelectorAll("div"),function(node){if(domUtils.isEmptyBlock(node)){domUtils.remove(node,true);}});}html={html:root.toHtml()};me.fireEvent("beforepaste",html,root);//抢了默认的粘贴，那后边的内容就不执行了，比如表格粘贴\nif(!html.html){return;}root=UE.htmlparser(html.html,true);//如果开启了纯文本模式\nif(me.queryCommandState("pasteplain")===1){me.execCommand("insertHtml",UE.filterNode(root,me.options.filterTxtRules).toHtml(),true);}else{//文本模式\nUE.filterNode(root,me.options.filterTxtRules);txtContent=root.toHtml();//完全模式\nhtmlContent=html.html;address=me.selection.getRange().createAddress(true);me.execCommand("insertHtml",me.getOpt("retainOnlyLabelPasted")===true?getPureHtml(htmlContent):htmlContent,true);}me.fireEvent("afterpaste",html);}}me.addListener("pasteTransfer",function(cmd,plainType){if(address&&txtContent&&htmlContent&&txtContent!=htmlContent){var range=me.selection.getRange();range.moveToAddress(address,true);if(!range.collapsed){while(!domUtils.isBody(range.startContainer)){var start=range.startContainer;if(start.nodeType==1){start=start.childNodes[range.startOffset];if(!start){range.setStartBefore(range.startContainer);continue;}var pre=start.previousSibling;if(pre&&pre.nodeType==3&&new RegExp("^[\\n\\r\\t "+domUtils.fillChar+"]*$").test(pre.nodeValue)){range.setStartBefore(pre);}}if(range.startOffset==0){range.setStartBefore(range.startContainer);}else{break;}}while(!domUtils.isBody(range.endContainer)){var end=range.endContainer;if(end.nodeType==1){end=end.childNodes[range.endOffset];if(!end){range.setEndAfter(range.endContainer);continue;}var next=end.nextSibling;if(next&&next.nodeType==3&&new RegExp("^[\\n\\r\\t"+domUtils.fillChar+"]*$").test(next.nodeValue)){range.setEndAfter(next);}}if(range.endOffset==range.endContainer[range.endContainer.nodeType==3?"nodeValue":"childNodes"].length){range.setEndAfter(range.endContainer);}else{break;}}}range.deleteContents();range.select(true);me.__hasEnterExecCommand=true;var html=htmlContent;if(plainType===2){html=getPureHtml(html);}else if(plainType){html=txtContent;}me.execCommand("inserthtml",html,true);me.__hasEnterExecCommand=false;var rng=me.selection.getRange();while(!domUtils.isBody(rng.startContainer)&&!rng.startOffset&&rng.startContainer[rng.startContainer.nodeType==3?"nodeValue":"childNodes"].length){rng.setStartBefore(rng.startContainer);}var tmpAddress=rng.createAddress(true);address.endAddress=tmpAddress.startAddress;}});me.addListener("ready",function(){domUtils.on(me.body,"cut",function(){var range=me.selection.getRange();if(!range.collapsed&&me.undoManger){me.undoManger.save();}});//ie下beforepaste在点击右键时也会触发，所以用监控键盘才处理\ndomUtils.on(me.body,browser.ie||browser.opera?"keydown":"paste",function(e){if((browser.ie||browser.opera)&&(!e.ctrlKey&&!e.metaKey||e.keyCode!="86")){return;}getClipboardData.call(me,function(div){filter(div);});});});me.commands["paste"]={execCommand:function execCommand(cmd){if(browser.ie){getClipboardData.call(me,function(div){filter(div);});me.document.execCommand("paste");}else{alert(me.getLang("pastemsg"));}}};};// plugins/puretxtpaste.js\n/**\n * 纯文本粘贴插件\n * @file\n * @since 1.2.6.1\n */UE.plugins["pasteplain"]=function(){var me=this;me.setOpt({pasteplain:false,filterTxtRules:function(){function transP(node){node.tagName="p";node.setStyle();}function removeNode(node){node.parentNode.removeChild(node,true);}return{//直接删除及其字节点内容\n"-":"script style object iframe embed input select",p:{$:{}},br:{$:{}},div:function div(node){var tmpNode,p=UE.uNode.createElement("p");while(tmpNode=node.firstChild()){if(tmpNode.type=="text"||!UE.dom.dtd.$block[tmpNode.tagName]){p.appendChild(tmpNode);}else{if(p.firstChild()){node.parentNode.insertBefore(p,node);p=UE.uNode.createElement("p");}else{node.parentNode.insertBefore(tmpNode,node);}}}if(p.firstChild()){node.parentNode.insertBefore(p,node);}node.parentNode.removeChild(node);},ol:removeNode,ul:removeNode,dl:removeNode,dt:removeNode,dd:removeNode,li:removeNode,caption:transP,th:transP,tr:transP,h1:transP,h2:transP,h3:transP,h4:transP,h5:transP,h6:transP,td:function td(node){//没有内容的td直接删掉\nvar txt=!!node.innerText();if(txt){node.parentNode.insertAfter(UE.uNode.createText(" &nbsp; &nbsp;"),node);}node.parentNode.removeChild(node,node.innerText());}};}()});//暂时这里支持一下老版本的属性\nvar pasteplain=me.options.pasteplain;/**\n     * 启用或取消纯文本粘贴模式\n     * @command pasteplain\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.queryCommandState( \'pasteplain\' );\n     * ```\n     *//**\n     * 查询当前是否处于纯文本粘贴模式\n     * @command pasteplain\n     * @method queryCommandState\n     * @param { String } cmd 命令字符串\n     * @return { int } 如果处于纯文本模式，返回1，否则，返回0\n     * @example\n     * ```javascript\n     * editor.queryCommandState( \'pasteplain\' );\n     * ```\n     */me.commands["pasteplain"]={queryCommandState:function queryCommandState(){return pasteplain?1:0;},execCommand:function execCommand(){pasteplain=!pasteplain|0;},notNeedUndo:1};};// plugins/list.js\n/**\n * 有序列表,无序列表插件\n * @file\n * @since 1.2.6.1\n */UE.plugins["list"]=function(){var me=this,notExchange={TD:1,PRE:1,BLOCKQUOTE:1};var customStyle={cn:"cn-1-",cn1:"cn-2-",cn2:"cn-3-",num:"num-1-",num1:"num-2-",num2:"num-3-",dash:"dash",dot:"dot"};me.setOpt({autoTransWordToList:false,insertorderedlist:{num:"",num1:"",num2:"",cn:"",cn1:"",cn2:"",decimal:"","lower-alpha":"","lower-roman":"","upper-alpha":"","upper-roman":""},insertunorderedlist:{circle:"",disc:"",square:"",dash:"",dot:""},listDefaultPaddingLeft:"30",listiconpath:"http://bs.baidu.com/listicon/",maxListLevel:-1,//-1不限制\ndisablePInList:false});function listToArray(list){var arr=[];for(var p in list){arr.push(p);}return arr;}var listStyle={OL:listToArray(me.options.insertorderedlist),UL:listToArray(me.options.insertunorderedlist)};var liiconpath=me.options.listiconpath;//根据用户配置，调整customStyle\nfor(var s in customStyle){if(!me.options.insertorderedlist.hasOwnProperty(s)&&!me.options.insertunorderedlist.hasOwnProperty(s)){delete customStyle[s];}}me.ready(function(){var customCss=[];for(var p in customStyle){if(p=="dash"||p=="dot"){customCss.push("li.list-"+customStyle[p]+"{background-image:url("+liiconpath+customStyle[p]+".gif)}");customCss.push("ul.custom_"+p+"{list-style:none;}ul.custom_"+p+" li{background-position:0 3px;background-repeat:no-repeat}");}else{for(var i=0;i<99;i++){customCss.push("li.list-"+customStyle[p]+i+"{background-image:url("+liiconpath+"list-"+customStyle[p]+i+".gif)}");}customCss.push("ol.custom_"+p+"{list-style:none;}ol.custom_"+p+" li{background-position:0 3px;background-repeat:no-repeat}");}switch(p){case"cn":customCss.push("li.list-"+p+"-paddingleft-1{padding-left:25px}");customCss.push("li.list-"+p+"-paddingleft-2{padding-left:40px}");customCss.push("li.list-"+p+"-paddingleft-3{padding-left:55px}");break;case"cn1":customCss.push("li.list-"+p+"-paddingleft-1{padding-left:30px}");customCss.push("li.list-"+p+"-paddingleft-2{padding-left:40px}");customCss.push("li.list-"+p+"-paddingleft-3{padding-left:55px}");break;case"cn2":customCss.push("li.list-"+p+"-paddingleft-1{padding-left:40px}");customCss.push("li.list-"+p+"-paddingleft-2{padding-left:55px}");customCss.push("li.list-"+p+"-paddingleft-3{padding-left:68px}");break;case"num":case"num1":customCss.push("li.list-"+p+"-paddingleft-1{padding-left:25px}");break;case"num2":customCss.push("li.list-"+p+"-paddingleft-1{padding-left:35px}");customCss.push("li.list-"+p+"-paddingleft-2{padding-left:40px}");break;case"dash":customCss.push("li.list-"+p+"-paddingleft{padding-left:35px}");break;case"dot":customCss.push("li.list-"+p+"-paddingleft{padding-left:20px}");}}customCss.push(".list-paddingleft-1{padding-left:0}");customCss.push(".list-paddingleft-2{padding-left:"+me.options.listDefaultPaddingLeft+"px}");customCss.push(".list-paddingleft-3{padding-left:"+me.options.listDefaultPaddingLeft*2+"px}");//如果不给宽度会在自定应样式里出现滚动条\nutils.cssRule("list","ol,ul{margin:0;pading:0;"+(browser.ie?"":"width:95%")+"}li{clear:both;}"+customCss.join("\\n"),me.document);});//单独处理剪切的问题\nme.ready(function(){domUtils.on(me.body,"cut",function(){setTimeout(function(){var rng=me.selection.getRange(),li;//trace:3416\nif(!rng.collapsed){if(li=domUtils.findParentByTagName(rng.startContainer,"li",true)){if(!li.nextSibling&&domUtils.isEmptyBlock(li)){var pn=li.parentNode,node;if(node=pn.previousSibling){domUtils.remove(pn);rng.setStartAtLast(node).collapse(true);rng.select(true);}else if(node=pn.nextSibling){domUtils.remove(pn);rng.setStartAtFirst(node).collapse(true);rng.select(true);}else{var tmpNode=me.document.createElement("p");domUtils.fillNode(me.document,tmpNode);pn.parentNode.insertBefore(tmpNode,pn);domUtils.remove(pn);rng.setStart(tmpNode,0).collapse(true);rng.select(true);}}}}});});});function getStyle(node){var cls=node.className;if(domUtils.hasClass(node,/custom_/)){return cls.match(/custom_(\\w+)/)[1];}return domUtils.getStyle(node,"list-style-type");}me.addListener("beforepaste",function(type,html){var me=this,rng=me.selection.getRange(),li;var root=UE.htmlparser(html.html,true);if(li=domUtils.findParentByTagName(rng.startContainer,"li",true)){var list=li.parentNode,tagName=list.tagName=="OL"?"ul":"ol";utils.each(root.getNodesByTagName(tagName),function(n){n.tagName=list.tagName;n.setAttr();if(n.parentNode===root){type=getStyle(list)||(list.tagName=="OL"?"decimal":"disc");}else{var className=n.parentNode.getAttr("class");if(className&&/custom_/.test(className)){type=className.match(/custom_(\\w+)/)[1];}else{type=n.parentNode.getStyle("list-style-type");}if(!type){type=list.tagName=="OL"?"decimal":"disc";}}var index=utils.indexOf(listStyle[list.tagName],type);if(n.parentNode!==root)index=index+1==listStyle[list.tagName].length?0:index+1;var currentStyle=listStyle[list.tagName][index];if(customStyle[currentStyle]){n.setAttr("class","custom_"+currentStyle);}else{n.setStyle("list-style-type",currentStyle);}});}html.html=root.toHtml();});//导出时，去掉p标签\nme.getOpt("disablePInList")===true&&me.addOutputRule(function(root){utils.each(root.getNodesByTagName("li"),function(li){var newChildrens=[],index=0;utils.each(li.children,function(n){if(n.tagName=="p"){var tmpNode;while(tmpNode=n.children.pop()){newChildrens.splice(index,0,tmpNode);tmpNode.parentNode=li;lastNode=tmpNode;}tmpNode=newChildrens[newChildrens.length-1];if(!tmpNode||tmpNode.type!="element"||tmpNode.tagName!="br"){var br=UE.uNode.createElement("br");br.parentNode=li;newChildrens.push(br);}index=newChildrens.length;}});if(newChildrens.length){li.children=newChildrens;}});});//进入编辑器的li要套p标签\nme.addInputRule(function(root){utils.each(root.getNodesByTagName("li"),function(li){var tmpP=UE.uNode.createElement("p");for(var i=0,ci;ci=li.children[i];){if(ci.type=="text"||dtd.p[ci.tagName]){tmpP.appendChild(ci);}else{if(tmpP.firstChild()){li.insertBefore(tmpP,ci);tmpP=UE.uNode.createElement("p");i=i+2;}else{i++;}}}if(tmpP.firstChild()&&!tmpP.parentNode||!li.firstChild()){li.appendChild(tmpP);}//trace:3357\n//p不能为空\nif(!tmpP.firstChild()){tmpP.innerHTML(browser.ie?"&nbsp;":"<br/>");}//去掉末尾的空白\nvar p=li.firstChild();var lastChild=p.lastChild();if(lastChild&&lastChild.type=="text"&&/^\\s*$/.test(lastChild.data)){p.removeChild(lastChild);}});if(me.options.autoTransWordToList){var checkListType=function checkListType(content,container){var span=container.firstChild();if(span&&span.type=="element"&&span.tagName=="span"&&/Wingdings|Symbol/.test(span.getStyle("font-family"))){for(var p in unorderlisttype){if(unorderlisttype[p]==span.data){return p;}}return"disc";}for(var p in orderlisttype){if(orderlisttype[p].test(content)){return p;}}};var orderlisttype={num1:/^\\d+\\)/,decimal:/^\\d+\\./,"lower-alpha":/^[a-z]+\\)/,"upper-alpha":/^[A-Z]+\\./,cn:/^[\\u4E00\\u4E8C\\u4E09\\u56DB\\u516d\\u4e94\\u4e03\\u516b\\u4e5d]+[\\u3001]/,cn2:/^\\([\\u4E00\\u4E8C\\u4E09\\u56DB\\u516d\\u4e94\\u4e03\\u516b\\u4e5d]+\\)/},unorderlisttype={square:"n"};utils.each(root.getNodesByTagName("p"),function(node){if(node.getAttr("class")!="MsoListParagraph"){return;}//word粘贴过来的会带有margin要去掉,但这样也可能会误命中一些央视\nnode.setStyle("margin","");node.setStyle("margin-left","");node.setAttr("class","");function appendLi(list,p,type){if(list.tagName=="ol"){if(browser.ie){var first=p.firstChild();if(first.type=="element"&&first.tagName=="span"&&orderlisttype[type].test(first.innerText())){p.removeChild(first);}}else{p.innerHTML(p.innerHTML().replace(orderlisttype[type],""));}}else{p.removeChild(p.firstChild());}var li=UE.uNode.createElement("li");li.appendChild(p);list.appendChild(li);}var tmp=node,type,cacheNode=node;if(node.parentNode.tagName!="li"&&(type=checkListType(node.innerText(),node))){var list=UE.uNode.createElement(me.options.insertorderedlist.hasOwnProperty(type)?"ol":"ul");if(customStyle[type]){list.setAttr("class","custom_"+type);}else{list.setStyle("list-style-type",type);}while(node&&node.parentNode.tagName!="li"&&checkListType(node.innerText(),node)){tmp=node.nextSibling();if(!tmp){node.parentNode.insertBefore(list,node);}appendLi(list,node,type);node=tmp;}if(!list.parentNode&&node&&node.parentNode){node.parentNode.insertBefore(list,node);}}var span=cacheNode.firstChild();if(span&&span.type=="element"&&span.tagName=="span"&&/^\\s*(&nbsp;)+\\s*$/.test(span.innerText())){span.parentNode.removeChild(span);}});}});//调整索引标签\nme.addListener("contentchange",function(){adjustListStyle(me.document);});function adjustListStyle(doc,ignore){utils.each(domUtils.getElementsByTagName(doc,"ol ul"),function(node){if(!domUtils.inDoc(node,doc))return;var parent=node.parentNode;if(parent.tagName==node.tagName){var nodeStyleType=getStyle(node)||(node.tagName=="OL"?"decimal":"disc"),parentStyleType=getStyle(parent)||(parent.tagName=="OL"?"decimal":"disc");if(nodeStyleType==parentStyleType){var styleIndex=utils.indexOf(listStyle[node.tagName],nodeStyleType);styleIndex=styleIndex+1==listStyle[node.tagName].length?0:styleIndex+1;setListStyle(node,listStyle[node.tagName][styleIndex]);}}var index=0,type=2;if(domUtils.hasClass(node,/custom_/)){if(!(/[ou]l/i.test(parent.tagName)&&domUtils.hasClass(parent,/custom_/))){type=1;}}else{if(/[ou]l/i.test(parent.tagName)&&domUtils.hasClass(parent,/custom_/)){type=3;}}var style=domUtils.getStyle(node,"list-style-type");style&&(node.style.cssText="list-style-type:"+style);node.className=utils.trim(node.className.replace(/list-paddingleft-\\w+/,""))+" list-paddingleft-"+type;utils.each(domUtils.getElementsByTagName(node,"li"),function(li){li.style.cssText&&(li.style.cssText="");if(!li.firstChild){domUtils.remove(li);return;}if(li.parentNode!==node){return;}index++;if(domUtils.hasClass(node,/custom_/)){var paddingLeft=1,currentStyle=getStyle(node);if(node.tagName=="OL"){if(currentStyle){switch(currentStyle){case"cn":case"cn1":case"cn2":if(index>10&&(index%10==0||index>10&&index<20)){paddingLeft=2;}else if(index>20){paddingLeft=3;}break;case"num2":if(index>9){paddingLeft=2;}}}li.className="list-"+customStyle[currentStyle]+index+" "+"list-"+currentStyle+"-paddingleft-"+paddingLeft;}else{li.className="list-"+customStyle[currentStyle]+" "+"list-"+currentStyle+"-paddingleft";}}else{li.className=li.className.replace(/list-[\\w\\-]+/gi,"");}var className=li.getAttribute("class");if(className!==null&&!className.replace(/\\s/g,"")){domUtils.removeAttributes(li,"class");}});!ignore&&adjustList(node,node.tagName.toLowerCase(),getStyle(node)||domUtils.getStyle(node,"list-style-type"),true);});}function adjustList(list,tag,style,ignoreEmpty){var nextList=list.nextSibling;if(nextList&&nextList.nodeType==1&&nextList.tagName.toLowerCase()==tag&&(getStyle(nextList)||domUtils.getStyle(nextList,"list-style-type")||(tag=="ol"?"decimal":"disc"))==style){domUtils.moveChild(nextList,list);if(nextList.childNodes.length==0){domUtils.remove(nextList);}}if(nextList&&domUtils.isFillChar(nextList)){domUtils.remove(nextList);}var preList=list.previousSibling;if(preList&&preList.nodeType==1&&preList.tagName.toLowerCase()==tag&&(getStyle(preList)||domUtils.getStyle(preList,"list-style-type")||(tag=="ol"?"decimal":"disc"))==style){domUtils.moveChild(list,preList);}if(preList&&domUtils.isFillChar(preList)){domUtils.remove(preList);}!ignoreEmpty&&domUtils.isEmptyBlock(list)&&domUtils.remove(list);if(getStyle(list)){adjustListStyle(list.ownerDocument,true);}}function setListStyle(list,style){if(customStyle[style]){list.className="custom_"+style;}try{domUtils.setStyle(list,"list-style-type",style);}catch(e){}}function clearEmptySibling(node){var tmpNode=node.previousSibling;if(tmpNode&&domUtils.isEmptyBlock(tmpNode)){domUtils.remove(tmpNode);}tmpNode=node.nextSibling;if(tmpNode&&domUtils.isEmptyBlock(tmpNode)){domUtils.remove(tmpNode);}}me.addListener("keydown",function(type,evt){function preventAndSave(){evt.preventDefault?evt.preventDefault():evt.returnValue=false;me.fireEvent("contentchange");me.undoManger&&me.undoManger.save();}function findList(node,filterFn){while(node&&!domUtils.isBody(node)){if(filterFn(node)){return null;}if(node.nodeType==1&&/[ou]l/i.test(node.tagName)){return node;}node=node.parentNode;}return null;}var keyCode=evt.keyCode||evt.which;if(keyCode==13&&!evt.shiftKey){//回车\nvar rng=me.selection.getRange(),parent=domUtils.findParent(rng.startContainer,function(node){return domUtils.isBlockElm(node);},true),li=domUtils.findParentByTagName(rng.startContainer,"li",true);if(parent&&parent.tagName!="PRE"&&!li){var html=parent.innerHTML.replace(new RegExp(domUtils.fillChar,"g"),"");if(/^\\s*1\\s*\\.[^\\d]/.test(html)){parent.innerHTML=html.replace(/^\\s*1\\s*\\./,"");rng.setStartAtLast(parent).collapse(true).select();me.__hasEnterExecCommand=true;me.execCommand("insertorderedlist");me.__hasEnterExecCommand=false;}}var range=me.selection.getRange(),start=findList(range.startContainer,function(node){return node.tagName=="TABLE";}),end=range.collapsed?start:findList(range.endContainer,function(node){return node.tagName=="TABLE";});if(start&&end&&start===end){if(!range.collapsed){start=domUtils.findParentByTagName(range.startContainer,"li",true);end=domUtils.findParentByTagName(range.endContainer,"li",true);if(start&&end&&start===end){range.deleteContents();li=domUtils.findParentByTagName(range.startContainer,"li",true);if(li&&domUtils.isEmptyBlock(li)){pre=li.previousSibling;next=li.nextSibling;p=me.document.createElement("p");domUtils.fillNode(me.document,p);parentList=li.parentNode;if(pre&&next){range.setStart(next,0).collapse(true).select(true);domUtils.remove(li);}else{if(!pre&&!next||!pre){parentList.parentNode.insertBefore(p,parentList);}else{li.parentNode.parentNode.insertBefore(p,parentList.nextSibling);}domUtils.remove(li);if(!parentList.firstChild){domUtils.remove(parentList);}range.setStart(p,0).setCursor();}preventAndSave();return;}}else{var tmpRange=range.cloneRange(),bk=tmpRange.collapse(false).createBookmark();range.deleteContents();tmpRange.moveToBookmark(bk);var li=domUtils.findParentByTagName(tmpRange.startContainer,"li",true);clearEmptySibling(li);tmpRange.select();preventAndSave();return;}}li=domUtils.findParentByTagName(range.startContainer,"li",true);if(li){if(domUtils.isEmptyBlock(li)){bk=range.createBookmark();var parentList=li.parentNode;if(li!==parentList.lastChild){domUtils.breakParent(li,parentList);clearEmptySibling(li);}else{parentList.parentNode.insertBefore(li,parentList.nextSibling);if(domUtils.isEmptyNode(parentList)){domUtils.remove(parentList);}}//嵌套不处理\nif(!dtd.$list[li.parentNode.tagName]){if(!domUtils.isBlockElm(li.firstChild)){p=me.document.createElement("p");li.parentNode.insertBefore(p,li);while(li.firstChild){p.appendChild(li.firstChild);}domUtils.remove(li);}else{domUtils.remove(li,true);}}range.moveToBookmark(bk).select();}else{var first=li.firstChild;if(!first||!domUtils.isBlockElm(first)){var p=me.document.createElement("p");!li.firstChild&&domUtils.fillNode(me.document,p);while(li.firstChild){p.appendChild(li.firstChild);}li.appendChild(p);first=p;}var span=me.document.createElement("span");range.insertNode(span);domUtils.breakParent(span,li);var nextLi=span.nextSibling;first=nextLi.firstChild;if(!first){p=me.document.createElement("p");domUtils.fillNode(me.document,p);nextLi.appendChild(p);first=p;}if(domUtils.isEmptyNode(first)){first.innerHTML="";domUtils.fillNode(me.document,first);}range.setStart(first,0).collapse(true).shrinkBoundary().select();domUtils.remove(span);var pre=nextLi.previousSibling;if(pre&&domUtils.isEmptyBlock(pre)){pre.innerHTML="<p></p>";domUtils.fillNode(me.document,pre.firstChild);}}//                        }\npreventAndSave();}}}if(keyCode==8){//修中ie中li下的问题\nrange=me.selection.getRange();if(range.collapsed&&domUtils.isStartInblock(range)){tmpRange=range.cloneRange().trimBoundary();li=domUtils.findParentByTagName(range.startContainer,"li",true);//要在li的最左边，才能处理\nif(li&&domUtils.isStartInblock(tmpRange)){start=domUtils.findParentByTagName(range.startContainer,"p",true);if(start&&start!==li.firstChild){var parentList=domUtils.findParentByTagName(start,["ol","ul"]);domUtils.breakParent(start,parentList);clearEmptySibling(start);me.fireEvent("contentchange");range.setStart(start,0).setCursor(false,true);me.fireEvent("saveScene");domUtils.preventDefault(evt);return;}if(li&&(pre=li.previousSibling)){if(keyCode==46&&li.childNodes.length){return;}//有可能上边的兄弟节点是个2级菜单，要追加到2级菜单的最后的li\nif(dtd.$list[pre.tagName]){pre=pre.lastChild;}me.undoManger&&me.undoManger.save();first=li.firstChild;if(domUtils.isBlockElm(first)){if(domUtils.isEmptyNode(first)){//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);\npre.appendChild(first);range.setStart(first,0).setCursor(false,true);//first不是唯一的节点\nwhile(li.firstChild){pre.appendChild(li.firstChild);}}else{span=me.document.createElement("span");range.insertNode(span);//判断pre是否是空的节点,如果是<p><br/></p>类型的空节点，干掉p标签防止它占位\nif(domUtils.isEmptyBlock(pre)){pre.innerHTML="";}domUtils.moveChild(li,pre);range.setStartBefore(span).collapse(true).select(true);domUtils.remove(span);}}else{if(domUtils.isEmptyNode(li)){var p=me.document.createElement("p");pre.appendChild(p);range.setStart(p,0).setCursor();//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);\n}else{range.setEnd(pre,pre.childNodes.length).collapse().select(true);while(li.firstChild){pre.appendChild(li.firstChild);}}}domUtils.remove(li);me.fireEvent("contentchange");me.fireEvent("saveScene");domUtils.preventDefault(evt);return;}//trace:980\nif(li&&!li.previousSibling){var parentList=li.parentNode;var bk=range.createBookmark();if(domUtils.isTagNode(parentList.parentNode,"ol ul")){parentList.parentNode.insertBefore(li,parentList);if(domUtils.isEmptyNode(parentList)){domUtils.remove(parentList);}}else{while(li.firstChild){parentList.parentNode.insertBefore(li.firstChild,parentList);}domUtils.remove(li);if(domUtils.isEmptyNode(parentList)){domUtils.remove(parentList);}}range.moveToBookmark(bk).setCursor(false,true);me.fireEvent("contentchange");me.fireEvent("saveScene");domUtils.preventDefault(evt);return;}}}}});me.addListener("keyup",function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==8){var rng=me.selection.getRange(),list;if(list=domUtils.findParentByTagName(rng.startContainer,["ol","ul"],true)){adjustList(list,list.tagName.toLowerCase(),getStyle(list)||domUtils.getComputedStyle(list,"list-style-type"),true);}}});//处理tab键\nme.addListener("tabkeydown",function(){var range=me.selection.getRange();//控制级数\nfunction checkLevel(li){if(me.options.maxListLevel!=-1){var level=li.parentNode,levelNum=0;while(/[ou]l/i.test(level.tagName)){levelNum++;level=level.parentNode;}if(levelNum>=me.options.maxListLevel){return true;}}}//只以开始为准\n//todo 后续改进\nvar li=domUtils.findParentByTagName(range.startContainer,"li",true);if(li){var bk;if(range.collapsed){if(checkLevel(li))return true;var parentLi=li.parentNode,list=me.document.createElement(parentLi.tagName),index=utils.indexOf(listStyle[list.tagName],getStyle(parentLi)||domUtils.getComputedStyle(parentLi,"list-style-type"));index=index+1==listStyle[list.tagName].length?0:index+1;var currentStyle=listStyle[list.tagName][index];setListStyle(list,currentStyle);if(domUtils.isStartInblock(range)){me.fireEvent("saveScene");bk=range.createBookmark();parentLi.insertBefore(list,li);list.appendChild(li);adjustList(list,list.tagName.toLowerCase(),currentStyle);me.fireEvent("contentchange");range.moveToBookmark(bk).select(true);return true;}}else{me.fireEvent("saveScene");bk=range.createBookmark();for(var i=0,closeList,parents=domUtils.findParents(li),ci;ci=parents[i++];){if(domUtils.isTagNode(ci,"ol ul")){closeList=ci;break;}}var current=li;if(bk.end){while(current&&!(domUtils.getPosition(current,bk.end)&domUtils.POSITION_FOLLOWING)){if(checkLevel(current)){current=domUtils.getNextDomNode(current,false,null,function(node){return node!==closeList;});continue;}var parentLi=current.parentNode,list=me.document.createElement(parentLi.tagName),index=utils.indexOf(listStyle[list.tagName],getStyle(parentLi)||domUtils.getComputedStyle(parentLi,"list-style-type"));var currentIndex=index+1==listStyle[list.tagName].length?0:index+1;var currentStyle=listStyle[list.tagName][currentIndex];setListStyle(list,currentStyle);parentLi.insertBefore(list,current);while(current&&!(domUtils.getPosition(current,bk.end)&domUtils.POSITION_FOLLOWING)){li=current.nextSibling;list.appendChild(current);if(!li||domUtils.isTagNode(li,"ol ul")){if(li){while(li=li.firstChild){if(li.tagName=="LI"){break;}}}else{li=domUtils.getNextDomNode(current,false,null,function(node){return node!==closeList;});}break;}current=li;}adjustList(list,list.tagName.toLowerCase(),currentStyle);current=li;}}me.fireEvent("contentchange");range.moveToBookmark(bk).select();return true;}}});function getLi(start){while(start&&!domUtils.isBody(start)){if(start.nodeName=="TABLE"){return null;}if(start.nodeName=="LI"){return start;}start=start.parentNode;}}/**\n     * 有序列表，与“insertunorderedlist”命令互斥\n     * @command insertorderedlist\n     * @method execCommand\n     * @param { String } command 命令字符串\n     * @param { String } style 插入的有序列表类型，值为：decimal,lower-alpha,lower-roman,upper-alpha,upper-roman,cn,cn1,cn2,num,num1,num2\n     * @example\n     * ```javascript\n     * editor.execCommand( \'insertorderedlist\',\'decimal\');\n     * ```\n     *//**\n     * 查询当前选区内容是否有序列表\n     * @command insertorderedlist\n     * @method queryCommandState\n     * @param { String } cmd 命令字符串\n     * @return { int } 如果当前选区是有序列表返回1，否则返回0\n     * @example\n     * ```javascript\n     * editor.queryCommandState( \'insertorderedlist\' );\n     * ```\n     *//**\n     * 查询当前选区内容是否有序列表\n     * @command insertorderedlist\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 返回当前有序列表的类型，值为null或decimal,lower-alpha,lower-roman,upper-alpha,upper-roman,cn,cn1,cn2,num,num1,num2\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( \'insertorderedlist\' );\n     * ```\n     *//**\n     * 无序列表，与“insertorderedlist”命令互斥\n     * @command insertunorderedlist\n     * @method execCommand\n     * @param { String } command 命令字符串\n     * @param { String } style 插入的无序列表类型，值为：circle,disc,square,dash,dot\n     * @example\n     * ```javascript\n     * editor.execCommand( \'insertunorderedlist\',\'circle\');\n     * ```\n     *//**\n     * 查询当前是否有word文档粘贴进来的图片\n     * @command insertunorderedlist\n     * @method insertunorderedlist\n     * @param { String } command 命令字符串\n     * @return { int } 如果当前选区是无序列表返回1，否则返回0\n     * @example\n     * ```javascript\n     * editor.queryCommandState( \'insertunorderedlist\' );\n     * ```\n     *//**\n     * 查询当前选区内容是否有序列表\n     * @command insertunorderedlist\n     * @method queryCommandValue\n     * @param { String } command 命令字符串\n     * @return { String } 返回当前无序列表的类型，值为null或circle,disc,square,dash,dot\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( \'insertunorderedlist\' );\n     * ```\n     */me.commands["insertorderedlist"]=me.commands["insertunorderedlist"]={execCommand:function execCommand(command,style){if(!style){style=command.toLowerCase()=="insertorderedlist"?"decimal":"disc";}var me=this,range=this.selection.getRange(),filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!="br":!domUtils.isWhitespace(node);},tag=command.toLowerCase()=="insertorderedlist"?"ol":"ul",frag=me.document.createDocumentFragment();//去掉是因为会出现选到末尾，导致adjustmentBoundary缩到ol/ul的位置\n//range.shrinkBoundary();//.adjustmentBoundary();\nrange.adjustmentBoundary().shrinkBoundary();var bko=range.createBookmark(true),start=getLi(me.document.getElementById(bko.start)),modifyStart=0,end=getLi(me.document.getElementById(bko.end)),modifyEnd=0,startParent,endParent,list,tmp;if(start||end){start&&(startParent=start.parentNode);if(!bko.end){end=start;}end&&(endParent=end.parentNode);if(startParent===endParent){while(start!==end){tmp=start;start=start.nextSibling;if(!domUtils.isBlockElm(tmp.firstChild)){var p=me.document.createElement("p");while(tmp.firstChild){p.appendChild(tmp.firstChild);}tmp.appendChild(p);}frag.appendChild(tmp);}tmp=me.document.createElement("span");startParent.insertBefore(tmp,end);if(!domUtils.isBlockElm(end.firstChild)){p=me.document.createElement("p");while(end.firstChild){p.appendChild(end.firstChild);}end.appendChild(p);}frag.appendChild(end);domUtils.breakParent(tmp,startParent);if(domUtils.isEmptyNode(tmp.previousSibling)){domUtils.remove(tmp.previousSibling);}if(domUtils.isEmptyNode(tmp.nextSibling)){domUtils.remove(tmp.nextSibling);}var nodeStyle=getStyle(startParent)||domUtils.getComputedStyle(startParent,"list-style-type")||(command.toLowerCase()=="insertorderedlist"?"decimal":"disc");if(startParent.tagName.toLowerCase()==tag&&nodeStyle==style){for(var i=0,ci,tmpFrag=me.document.createDocumentFragment();ci=frag.firstChild;){if(domUtils.isTagNode(ci,"ol ul")){//                                  删除时，子列表不处理\n//                                  utils.each(domUtils.getElementsByTagName(ci,\'li\'),function(li){\n//                                        while(li.firstChild){\n//                                            tmpFrag.appendChild(li.firstChild);\n//                                        }\n//\n//                                    });\ntmpFrag.appendChild(ci);}else{while(ci.firstChild){tmpFrag.appendChild(ci.firstChild);domUtils.remove(ci);}}}tmp.parentNode.insertBefore(tmpFrag,tmp);}else{list=me.document.createElement(tag);setListStyle(list,style);list.appendChild(frag);tmp.parentNode.insertBefore(list,tmp);}domUtils.remove(tmp);list&&adjustList(list,tag,style);range.moveToBookmark(bko).select();return;}//开始\nif(start){while(start){tmp=start.nextSibling;if(domUtils.isTagNode(start,"ol ul")){frag.appendChild(start);}else{var tmpfrag=me.document.createDocumentFragment(),hasBlock=0;while(start.firstChild){if(domUtils.isBlockElm(start.firstChild)){hasBlock=1;}tmpfrag.appendChild(start.firstChild);}if(!hasBlock){var tmpP=me.document.createElement("p");tmpP.appendChild(tmpfrag);frag.appendChild(tmpP);}else{frag.appendChild(tmpfrag);}domUtils.remove(start);}start=tmp;}startParent.parentNode.insertBefore(frag,startParent.nextSibling);if(domUtils.isEmptyNode(startParent)){range.setStartBefore(startParent);domUtils.remove(startParent);}else{range.setStartAfter(startParent);}modifyStart=1;}if(end&&domUtils.inDoc(endParent,me.document)){//结束\nstart=endParent.firstChild;while(start&&start!==end){tmp=start.nextSibling;if(domUtils.isTagNode(start,"ol ul")){frag.appendChild(start);}else{tmpfrag=me.document.createDocumentFragment();hasBlock=0;while(start.firstChild){if(domUtils.isBlockElm(start.firstChild)){hasBlock=1;}tmpfrag.appendChild(start.firstChild);}if(!hasBlock){tmpP=me.document.createElement("p");tmpP.appendChild(tmpfrag);frag.appendChild(tmpP);}else{frag.appendChild(tmpfrag);}domUtils.remove(start);}start=tmp;}var tmpDiv=domUtils.createElement(me.document,"div",{tmpDiv:1});domUtils.moveChild(end,tmpDiv);frag.appendChild(tmpDiv);domUtils.remove(end);endParent.parentNode.insertBefore(frag,endParent);range.setEndBefore(endParent);if(domUtils.isEmptyNode(endParent)){domUtils.remove(endParent);}modifyEnd=1;}}if(!modifyStart){range.setStartBefore(me.document.getElementById(bko.start));}if(bko.end&&!modifyEnd){range.setEndAfter(me.document.getElementById(bko.end));}range.enlarge(true,function(node){return notExchange[node.tagName];});frag=me.document.createDocumentFragment();var bk=range.createBookmark(),current=domUtils.getNextDomNode(bk.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode,block=domUtils.isBlockElm;while(current&&current!==bk.end&&domUtils.getPosition(current,bk.end)&domUtils.POSITION_PRECEDING){if(current.nodeType==3||dtd.li[current.tagName]){if(current.nodeType==1&&dtd.$list[current.tagName]){while(current.firstChild){frag.appendChild(current.firstChild);}tmpNode=domUtils.getNextDomNode(current,false,filterFn);domUtils.remove(current);current=tmpNode;continue;}tmpNode=current;tmpRange.setStartBefore(current);while(current&&current!==bk.end&&(!block(current)||domUtils.isBookmarkNode(current))){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return!notExchange[node.tagName];});}if(current&&block(current)){tmp=domUtils.getNextDomNode(tmpNode,false,filterFn);if(tmp&&domUtils.isBookmarkNode(tmp)){current=domUtils.getNextDomNode(tmp,false,filterFn);tmpNode=tmp;}}tmpRange.setEndAfter(tmpNode);current=domUtils.getNextDomNode(tmpNode,false,filterFn);var li=range.document.createElement("li");li.appendChild(tmpRange.extractContents());if(domUtils.isEmptyNode(li)){var tmpNode=range.document.createElement("p");while(li.firstChild){tmpNode.appendChild(li.firstChild);}li.appendChild(tmpNode);}frag.appendChild(li);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}range.moveToBookmark(bk).collapse(true);list=me.document.createElement(tag);setListStyle(list,style);list.appendChild(frag);range.insertNode(list);//当前list上下看能否合并\nadjustList(list,tag,style);//去掉冗余的tmpDiv\nfor(var i=0,ci,tmpDivs=domUtils.getElementsByTagName(list,"div");ci=tmpDivs[i++];){if(ci.getAttribute("tmpDiv")){domUtils.remove(ci,true);}}range.moveToBookmark(bko).select();},queryCommandState:function queryCommandState(command){var tag=command.toLowerCase()=="insertorderedlist"?"ol":"ul";var path=this.selection.getStartElementPath();for(var i=0,ci;ci=path[i++];){if(ci.nodeName=="TABLE"){return 0;}if(tag==ci.nodeName.toLowerCase()){return 1;}}return 0;},queryCommandValue:function queryCommandValue(command){var tag=command.toLowerCase()=="insertorderedlist"?"ol":"ul";var path=this.selection.getStartElementPath(),node;for(var i=0,ci;ci=path[i++];){if(ci.nodeName=="TABLE"){node=null;break;}if(tag==ci.nodeName.toLowerCase()){node=ci;break;}}return node?getStyle(node)||domUtils.getComputedStyle(node,"list-style-type"):null;}};};// plugins/source.js\n/**\n * 源码编辑插件\n * @file\n * @since 1.2.6.1\n */(function(){var sourceEditors={textarea:function textarea(editor,holder){var textarea=holder.ownerDocument.createElement("textarea");textarea.style.cssText="position:absolute;resize:none;width:100%;height:100%;border:0;padding:0;margin:0;overflow-y:auto;";// todo: IE下只有onresize属性可用... 很纠结\nif(browser.ie&&browser.version<8){textarea.style.width=holder.offsetWidth+"px";textarea.style.height=holder.offsetHeight+"px";holder.onresize=function(){textarea.style.width=holder.offsetWidth+"px";textarea.style.height=holder.offsetHeight+"px";};}holder.appendChild(textarea);return{setContent:function setContent(content){textarea.value=content;},getContent:function getContent(){return textarea.value;},select:function select(){var range;if(browser.ie){range=textarea.createTextRange();range.collapse(true);range.select();}else{//todo: chrome下无法设置焦点\ntextarea.setSelectionRange(0,0);textarea.focus();}},dispose:function dispose(){holder.removeChild(textarea);// todo\nholder.onresize=null;textarea=null;holder=null;},focus:function focus(){textarea.focus();},blur:function blur(){textarea.blur();}};},codemirror:function codemirror(editor,holder){var codeEditor=window.CodeMirror(holder,{mode:"text/html",tabMode:"indent",lineNumbers:true,lineWrapping:true});var dom=codeEditor.getWrapperElement();dom.style.cssText=\'position:absolute;left:0;top:0;width:100%;height:100%;font-family:consolas,"Courier new",monospace;font-size:13px;\';codeEditor.getScrollerElement().style.cssText="position:absolute;left:0;top:0;width:100%;height:100%;";codeEditor.refresh();return{getCodeMirror:function getCodeMirror(){return codeEditor;},setContent:function setContent(content){codeEditor.setValue(content);},getContent:function getContent(){return codeEditor.getValue();},select:function select(){codeEditor.focus();},dispose:function dispose(){holder.removeChild(dom);dom=null;codeEditor=null;},focus:function focus(){codeEditor.focus();},blur:function blur(){// codeEditor.blur();\n// since codemirror not support blur()\ncodeEditor.setOption(\'readOnly\',true);codeEditor.setOption(\'readOnly\',false);}};}};UE.plugins["source"]=function(){var me=this;var opt=this.options;var sourceMode=false;var sourceEditor;var orgSetContent;var orgFocus;var orgBlur;opt.sourceEditor=browser.ie?"textarea":opt.sourceEditor||"codemirror";me.setOpt({sourceEditorFirst:false});function createSourceEditor(holder){return sourceEditors[opt.sourceEditor=="codemirror"&&window.CodeMirror?"codemirror":"textarea"](me,holder);}var bakCssText;//解决在源码模式下getContent不能得到最新的内容问题\nvar oldGetContent,bakAddress;/**\n         * 切换源码模式和编辑模式\n         * @command source\n         * @method execCommand\n         * @param { String } cmd 命令字符串\n         * @example\n         * ```javascript\n         * editor.execCommand( \'source\');\n         * ```\n         *//**\n         * 查询当前编辑区域的状态是源码模式还是可视化模式\n         * @command source\n         * @method queryCommandState\n         * @param { String } cmd 命令字符串\n         * @return { int } 如果当前是源码编辑模式，返回1，否则返回0\n         * @example\n         * ```javascript\n         * editor.queryCommandState( \'source\' );\n         * ```\n         */me.commands["source"]={execCommand:function execCommand(){sourceMode=!sourceMode;if(sourceMode){bakAddress=me.selection.getRange().createAddress(false,true);me.undoManger&&me.undoManger.save(true);if(browser.gecko){me.body.contentEditable=false;}bakCssText=me.iframe.style.cssText;me.iframe.style.cssText+="position:absolute;left:-32768px;top:-32768px;";me.fireEvent("beforegetcontent");var root=UE.htmlparser(me.body.innerHTML);me.filterOutputRule(root);root.traversal(function(node){if(node.type=="element"){switch(node.tagName){case"td":case"th":case"caption":if(node.children&&node.children.length==1){if(node.firstChild().tagName=="br"){node.removeChild(node.firstChild());}}break;case"pre":node.innerText(node.innerText().replace(/&nbsp;/g," "));}}});me.fireEvent("aftergetcontent");var content=root.toHtml(true);sourceEditor=createSourceEditor(me.iframe.parentNode);sourceEditor.setContent(content);orgSetContent=me.setContent;me.setContent=function(html){//这里暂时不触发事件，防止报错\nvar root=UE.htmlparser(html);me.filterInputRule(root);html=root.toHtml();sourceEditor.setContent(html);};setTimeout(function(){sourceEditor.select();me.addListener("fullscreenchanged",function(){try{sourceEditor.getCodeMirror().refresh();}catch(e){}});});//重置getContent，源码模式下取值也能是最新的数据\noldGetContent=me.getContent;me.getContent=function(){return sourceEditor.getContent()||"<p>"+(browser.ie?"":"<br/>")+"</p>";};orgFocus=me.focus;orgBlur=me.blur;me.focus=function(){sourceEditor.focus();};me.blur=function(){orgBlur.call(me);sourceEditor.blur();};}else{me.iframe.style.cssText=bakCssText;var cont=sourceEditor.getContent()||"<p>"+(browser.ie?"":"<br/>")+"</p>";//处理掉block节点前后的空格,有可能会误命中，暂时不考虑\ncont=cont.replace(new RegExp("[\\\\r\\\\t\\\\n ]*</?(\\\\w+)\\\\s*(?:[^>]*)>","g"),function(a,b){if(b&&!dtd.$inlineWithA[b.toLowerCase()]){return a.replace(/(^[\\n\\r\\t ]*)|([\\n\\r\\t ]*$)/g,"");}return a.replace(/(^[\\n\\r\\t]*)|([\\n\\r\\t]*$)/g,"");});me.setContent=orgSetContent;me.setContent(cont);sourceEditor.dispose();sourceEditor=null;//还原getContent方法\nme.getContent=oldGetContent;me.focus=orgFocus;me.blur=orgBlur;var first=me.body.firstChild;//trace:1106 都删除空了，下边会报错，所以补充一个p占位\nif(!first){me.body.innerHTML="<p>"+(browser.ie?"":"<br/>")+"</p>";first=me.body.firstChild;}//要在ifm为显示时ff才能取到selection,否则报错\n//这里不能比较位置了\nme.undoManger&&me.undoManger.save(true);if(browser.gecko){var input=document.createElement("input");input.style.cssText="position:absolute;left:0;top:-32768px";document.body.appendChild(input);me.body.contentEditable=false;setTimeout(function(){domUtils.setViewportOffset(input,{left:-32768,top:0});input.focus();setTimeout(function(){me.body.contentEditable=true;me.selection.getRange().moveToAddress(bakAddress).select(true);domUtils.remove(input);});});}else{//ie下有可能报错，比如在代码顶头的情况\ntry{me.selection.getRange().moveToAddress(bakAddress).select(true);}catch(e){}}}this.fireEvent("sourcemodechanged",sourceMode);},queryCommandState:function queryCommandState(){return sourceMode|0;},notNeedUndo:1};var oldQueryCommandState=me.queryCommandState;me.queryCommandState=function(cmdName){cmdName=cmdName.toLowerCase();if(sourceMode){//源码模式下可以开启的命令\nreturn cmdName in{source:1,fullscreen:1}?1:-1;}return oldQueryCommandState.apply(this,arguments);};if(opt.sourceEditor=="codemirror"){me.addListener("ready",function(){utils.loadFile(document,{src:opt.codeMirrorJsUrl||opt.UEDITOR_HOME_URL+"third-party/codemirror/codemirror.js",tag:"script",type:"text/javascript",defer:"defer"},function(){if(opt.sourceEditorFirst){setTimeout(function(){me.execCommand("source");},0);}});utils.loadFile(document,{tag:"link",rel:"stylesheet",type:"text/css",href:opt.codeMirrorCssUrl||opt.UEDITOR_HOME_URL+"third-party/codemirror/codemirror.css"});});}};})();// plugins/enterkey.js\n///import core\n///import plugins/undo.js\n///commands 设置回车标签p或br\n///commandsName  EnterKey\n///commandsTitle  设置回车标签p或br\n/**\n * @description 处理回车\n * @author zhanyi\n */UE.plugins["enterkey"]=function(){var hTag,me=this,tag=me.options.enterTag;me.addListener("keyup",function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==13){var range=me.selection.getRange(),start=range.startContainer,doSave;//修正在h1-h6里边回车后不能嵌套p的问题\nif(!browser.ie){if(/h\\d/i.test(hTag)){if(browser.gecko){var h=domUtils.findParentByTagName(start,["h1","h2","h3","h4","h5","h6","blockquote","caption","table"],true);if(!h){me.document.execCommand("formatBlock",false,"<p>");doSave=1;}}else{//chrome remove div\nif(start.nodeType==1){var tmp=me.document.createTextNode(""),div;range.insertNode(tmp);div=domUtils.findParentByTagName(tmp,"div",true);if(div){var p=me.document.createElement("p");while(div.firstChild){p.appendChild(div.firstChild);}div.parentNode.insertBefore(p,div);domUtils.remove(div);range.setStartBefore(tmp).setCursor();doSave=1;}domUtils.remove(tmp);}}if(me.undoManger&&doSave){me.undoManger.save();}}//没有站位符，会出现多行的问题\nbrowser.opera&&range.select();}else{me.fireEvent("saveScene",true,true);}}});me.addListener("keydown",function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==13){//回车\nif(me.fireEvent("beforeenterkeydown")){domUtils.preventDefault(evt);return;}me.fireEvent("saveScene",true,true);hTag="";var range=me.selection.getRange();if(!range.collapsed){//跨td不能删\nvar start=range.startContainer,end=range.endContainer,startTd=domUtils.findParentByTagName(start,"td",true),endTd=domUtils.findParentByTagName(end,"td",true);if(startTd&&endTd&&startTd!==endTd||!startTd&&endTd||startTd&&!endTd){evt.preventDefault?evt.preventDefault():evt.returnValue=false;return;}}if(tag=="p"){if(!browser.ie){start=domUtils.findParentByTagName(range.startContainer,["ol","ul","p","h1","h2","h3","h4","h5","h6","blockquote","caption"],true);//opera下执行formatblock会在table的场景下有问题，回车在opera原生支持很好，所以暂时在opera去掉调用这个原生的command\n//trace:2431\nif(!start&&!browser.opera){me.document.execCommand("formatBlock",false,"<p>");if(browser.gecko){range=me.selection.getRange();start=domUtils.findParentByTagName(range.startContainer,"p",true);start&&domUtils.removeDirtyAttr(start);}}else{hTag=start.tagName;start.tagName.toLowerCase()=="p"&&browser.gecko&&domUtils.removeDirtyAttr(start);}}}else{evt.preventDefault?evt.preventDefault():evt.returnValue=false;if(!range.collapsed){range.deleteContents();start=range.startContainer;if(start.nodeType==1&&(start=start.childNodes[range.startOffset])){while(start.nodeType==1){if(dtd.$empty[start.tagName]){range.setStartBefore(start).setCursor();if(me.undoManger){me.undoManger.save();}return false;}if(!start.firstChild){var br=range.document.createElement("br");start.appendChild(br);range.setStart(start,0).setCursor();if(me.undoManger){me.undoManger.save();}return false;}start=start.firstChild;}if(start===range.startContainer.childNodes[range.startOffset]){br=range.document.createElement("br");range.insertNode(br).setCursor();}else{range.setStart(start,0).setCursor();}}else{br=range.document.createElement("br");range.insertNode(br).setStartAfter(br).setCursor();}}else{br=range.document.createElement("br");range.insertNode(br);var parent=br.parentNode;if(parent.lastChild===br){br.parentNode.insertBefore(br.cloneNode(true),br);range.setStartBefore(br);}else{range.setStartAfter(br);}range.setCursor();}}}});};// plugins/keystrokes.js\n/* 处理特殊键的兼容性问题 */UE.plugins["keystrokes"]=function(){var me=this;var collapsed=true;me.addListener("keydown",function(type,evt){var keyCode=evt.keyCode||evt.which,rng=me.selection.getRange();//处理全选的情况\nif(!rng.collapsed&&!(evt.ctrlKey||evt.shiftKey||evt.altKey||evt.metaKey)&&(keyCode>=65&&keyCode<=90||keyCode>=48&&keyCode<=57||keyCode>=96&&keyCode<=111||{13:1,8:1,46:1}[keyCode])){var tmpNode=rng.startContainer;if(domUtils.isFillChar(tmpNode)){rng.setStartBefore(tmpNode);}tmpNode=rng.endContainer;if(domUtils.isFillChar(tmpNode)){rng.setEndAfter(tmpNode);}rng.txtToElmBoundary();//结束边界可能放到了br的前边，要把br包含进来\n// x[xxx]<br/>\nif(rng.endContainer&&rng.endContainer.nodeType==1){tmpNode=rng.endContainer.childNodes[rng.endOffset];if(tmpNode&&domUtils.isBr(tmpNode)){rng.setEndAfter(tmpNode);}}if(rng.startOffset==0){tmpNode=rng.startContainer;if(domUtils.isBoundaryNode(tmpNode,"firstChild")){tmpNode=rng.endContainer;if(rng.endOffset==(tmpNode.nodeType==3?tmpNode.nodeValue.length:tmpNode.childNodes.length)&&domUtils.isBoundaryNode(tmpNode,"lastChild")){me.fireEvent("saveScene");me.body.innerHTML="<p>"+(browser.ie?"":"<br/>")+"</p>";rng.setStart(me.body.firstChild,0).setCursor(false,true);me._selectionChange();return;}}}}//处理backspace\nif(keyCode==keymap.Backspace){rng=me.selection.getRange();collapsed=rng.collapsed;if(me.fireEvent("delkeydown",evt)){return;}var start,end;//避免按两次删除才能生效的问题\nif(rng.collapsed&&rng.inFillChar()){start=rng.startContainer;if(domUtils.isFillChar(start)){rng.setStartBefore(start).shrinkBoundary(true).collapse(true);domUtils.remove(start);}else{start.nodeValue=start.nodeValue.replace(new RegExp("^"+domUtils.fillChar),"");rng.startOffset--;rng.collapse(true).select(true);}}//解决选中control元素不能删除的问题\nif(start=rng.getClosedNode()){me.fireEvent("saveScene");rng.setStartBefore(start);domUtils.remove(start);rng.setCursor();me.fireEvent("saveScene");domUtils.preventDefault(evt);return;}//阻止在table上的删除\nif(!browser.ie){start=domUtils.findParentByTagName(rng.startContainer,"table",true);end=domUtils.findParentByTagName(rng.endContainer,"table",true);if(start&&!end||!start&&end||start!==end){evt.preventDefault();return;}}}//处理tab键的逻辑\nif(keyCode==keymap.Tab){//不处理以下标签\nvar excludeTagNameForTabKey={ol:1,ul:1,table:1};//处理组件里的tab按下事件\nif(me.fireEvent("tabkeydown",evt)){domUtils.preventDefault(evt);return;}var range=me.selection.getRange();me.fireEvent("saveScene");for(var i=0,txt="",tabSize=me.options.tabSize||4,tabNode=me.options.tabNode||"&nbsp;";i<tabSize;i++){txt+=tabNode;}var span=me.document.createElement("span");span.innerHTML=txt+domUtils.fillChar;if(range.collapsed){range.insertNode(span.cloneNode(true).firstChild).setCursor(true);}else{var filterFn=function filterFn(node){return domUtils.isBlockElm(node)&&!excludeTagNameForTabKey[node.tagName.toLowerCase()];};//普通的情况\nstart=domUtils.findParent(range.startContainer,filterFn,true);end=domUtils.findParent(range.endContainer,filterFn,true);if(start&&end&&start===end){range.deleteContents();range.insertNode(span.cloneNode(true).firstChild).setCursor(true);}else{var bookmark=range.createBookmark();range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn);while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){current.insertBefore(span.cloneNode(true).firstChild,current.firstChild);current=domUtils.getNextDomNode(current,false,filterFn);}range.moveToBookmark(bookmark2).moveToBookmark(bookmark).select();}}domUtils.preventDefault(evt);}//trace:1634\n//ff的del键在容器空的时候，也会删除\nif(browser.gecko&&keyCode==46){range=me.selection.getRange();if(range.collapsed){start=range.startContainer;if(domUtils.isEmptyBlock(start)){var parent=start.parentNode;while(domUtils.getChildCount(parent)==1&&!domUtils.isBody(parent)){start=parent;parent=parent.parentNode;}if(start===parent.lastChild)evt.preventDefault();return;}}}/* 修复在编辑区域快捷键 (Mac:meta+alt+I; Win:ctrl+shift+I) 打不开 chrome 控制台的问题 */browser.chrome&&me.on("keydown",function(type,e){var keyCode=e.keyCode||e.which;if((e.metaKey&&e.altKey||e.ctrlKey&&e.shiftKey)&&keyCode==73){return true;}});});me.addListener("keyup",function(type,evt){var keyCode=evt.keyCode||evt.which,rng,me=this;if(keyCode==keymap.Backspace){if(me.fireEvent("delkeyup")){return;}rng=me.selection.getRange();if(rng.collapsed){var tmpNode,autoClearTagName=["h1","h2","h3","h4","h5","h6"];if(tmpNode=domUtils.findParentByTagName(rng.startContainer,autoClearTagName,true)){if(domUtils.isEmptyBlock(tmpNode)){var pre=tmpNode.previousSibling;if(pre&&pre.nodeName!="TABLE"){domUtils.remove(tmpNode);rng.setStartAtLast(pre).setCursor(false,true);return;}else{var next=tmpNode.nextSibling;if(next&&next.nodeName!="TABLE"){domUtils.remove(tmpNode);rng.setStartAtFirst(next).setCursor(false,true);return;}}}}//处理当删除到body时，要重新给p标签展位\nif(domUtils.isBody(rng.startContainer)){var tmpNode=domUtils.createElement(me.document,"p",{innerHTML:browser.ie?domUtils.fillChar:"<br/>"});rng.insertNode(tmpNode).setStart(tmpNode,0).setCursor(false,true);}}//chrome下如果删除了inline标签，浏览器会有记忆，在输入文字还是会套上刚才删除的标签，所以这里再选一次就不会了\nif(!collapsed&&(rng.startContainer.nodeType==3||rng.startContainer.nodeType==1&&domUtils.isEmptyBlock(rng.startContainer))){if(browser.ie){var span=rng.document.createElement("span");rng.insertNode(span).setStartBefore(span).collapse(true);rng.select();domUtils.remove(span);}else{rng.select();}}}});};// plugins/fiximgclick.js\n///import core\n///commands 修复chrome下图片不能点击的问题，出现八个角可改变大小\n///commandsName  FixImgClick\n///commandsTitle  修复chrome下图片不能点击的问题，出现八个角可改变大小\n//修复chrome下图片不能点击的问题，出现八个角可改变大小\nUE.plugins["fiximgclick"]=function(){var elementUpdated=false;function Scale(){this.editor=null;this.resizer=null;this.cover=null;this.doc=document;this.prePos={x:0,y:0};this.startPos={x:0,y:0};}(function(){var rect=[//[left, top, width, height]\n[0,0,-1,-1],[0,0,0,-1],[0,0,1,-1],[0,0,-1,0],[0,0,1,0],[0,0,-1,1],[0,0,0,1],[0,0,1,1]];Scale.prototype={init:function init(editor){var me=this;me.editor=editor;me.startPos=this.prePos={x:0,y:0};me.dragId=-1;var hands=[],cover=me.cover=document.createElement("div"),resizer=me.resizer=document.createElement("div");cover.id=me.editor.ui.id+"_imagescale_cover";cover.style.cssText="position:absolute;display:none;z-index:"+me.editor.options.zIndex+";filter:alpha(opacity=0); opacity:0;background:#CCC;";domUtils.on(cover,"mousedown click",function(){me.hide();});for(i=0;i<8;i++){hands.push(\'<span class="edui-editor-imagescale-hand\'+i+\'"></span>\');}resizer.id=me.editor.ui.id+"_imagescale";resizer.className="edui-editor-imagescale";resizer.innerHTML=hands.join("");resizer.style.cssText+=";display:none;border:1px solid #3b77ff;z-index:"+me.editor.options.zIndex+";";me.editor.ui.getDom().appendChild(cover);me.editor.ui.getDom().appendChild(resizer);me.initStyle();me.initEvents();},initStyle:function initStyle(){utils.cssRule("imagescale",".edui-editor-imagescale{display:none;position:absolute;border:1px solid #38B2CE;cursor:hand;-webkit-box-sizing: content-box;-moz-box-sizing: content-box;box-sizing: content-box;}"+".edui-editor-imagescale span{position:absolute;width:6px;height:6px;overflow:hidden;font-size:0px;display:block;background-color:#3C9DD0;}"+".edui-editor-imagescale .edui-editor-imagescale-hand0{cursor:nw-resize;top:0;margin-top:-4px;left:0;margin-left:-4px;}"+".edui-editor-imagescale .edui-editor-imagescale-hand1{cursor:n-resize;top:0;margin-top:-4px;left:50%;margin-left:-4px;}"+".edui-editor-imagescale .edui-editor-imagescale-hand2{cursor:ne-resize;top:0;margin-top:-4px;left:100%;margin-left:-3px;}"+".edui-editor-imagescale .edui-editor-imagescale-hand3{cursor:w-resize;top:50%;margin-top:-4px;left:0;margin-left:-4px;}"+".edui-editor-imagescale .edui-editor-imagescale-hand4{cursor:e-resize;top:50%;margin-top:-4px;left:100%;margin-left:-3px;}"+".edui-editor-imagescale .edui-editor-imagescale-hand5{cursor:sw-resize;top:100%;margin-top:-3px;left:0;margin-left:-4px;}"+".edui-editor-imagescale .edui-editor-imagescale-hand6{cursor:s-resize;top:100%;margin-top:-3px;left:50%;margin-left:-4px;}"+".edui-editor-imagescale .edui-editor-imagescale-hand7{cursor:se-resize;top:100%;margin-top:-3px;left:100%;margin-left:-3px;}");},initEvents:function initEvents(){var me=this;me.startPos.x=me.startPos.y=0;me.isDraging=false;},_eventHandler:function _eventHandler(e){var me=this;switch(e.type){case"mousedown":var hand=e.target||e.srcElement,hand;if(hand.className.indexOf("edui-editor-imagescale-hand")!=-1&&me.dragId==-1){me.dragId=hand.className.slice(-1);me.startPos.x=me.prePos.x=e.clientX;me.startPos.y=me.prePos.y=e.clientY;domUtils.on(me.doc,"mousemove",me.proxy(me._eventHandler,me));}break;case"mousemove":if(me.dragId!=-1){me.updateContainerStyle(me.dragId,{x:e.clientX-me.prePos.x,y:e.clientY-me.prePos.y});me.prePos.x=e.clientX;me.prePos.y=e.clientY;elementUpdated=true;me.updateTargetElement();}break;case"mouseup":if(me.dragId!=-1){me.updateContainerStyle(me.dragId,{x:e.clientX-me.prePos.x,y:e.clientY-me.prePos.y});me.updateTargetElement();if(me.target.parentNode)me.attachTo(me.target);me.dragId=-1;}domUtils.un(me.doc,"mousemove",me.proxy(me._eventHandler,me));//修复只是点击挪动点，但没有改变大小，不应该触发contentchange\nif(elementUpdated){elementUpdated=false;me.editor.fireEvent("contentchange");}break;default:break;}},updateTargetElement:function updateTargetElement(){var me=this;domUtils.setStyles(me.target,{width:me.resizer.style.width,height:me.resizer.style.height});me.target.width=parseInt(me.resizer.style.width);me.target.height=parseInt(me.resizer.style.height);me.attachTo(me.target);},updateContainerStyle:function updateContainerStyle(dir,offset){var me=this,dom=me.resizer,tmp;if(rect[dir][0]!=0){tmp=parseInt(dom.style.left)+offset.x;dom.style.left=me._validScaledProp("left",tmp)+"px";}if(rect[dir][1]!=0){tmp=parseInt(dom.style.top)+offset.y;dom.style.top=me._validScaledProp("top",tmp)+"px";}if(rect[dir][2]!=0){tmp=dom.clientWidth+rect[dir][2]*offset.x;dom.style.width=me._validScaledProp("width",tmp)+"px";}if(rect[dir][3]!=0){tmp=dom.clientHeight+rect[dir][3]*offset.y;dom.style.height=me._validScaledProp("height",tmp)+"px";}},_validScaledProp:function _validScaledProp(prop,value){var ele=this.resizer,wrap=document;value=isNaN(value)?0:value;switch(prop){case"left":return value<0?0:value+ele.clientWidth>wrap.clientWidth?wrap.clientWidth-ele.clientWidth:value;case"top":return value<0?0:value+ele.clientHeight>wrap.clientHeight?wrap.clientHeight-ele.clientHeight:value;case"width":return value<=0?1:value+ele.offsetLeft>wrap.clientWidth?wrap.clientWidth-ele.offsetLeft:value;case"height":return value<=0?1:value+ele.offsetTop>wrap.clientHeight?wrap.clientHeight-ele.offsetTop:value;}},hideCover:function hideCover(){this.cover.style.display="none";},showCover:function showCover(){var me=this,editorPos=domUtils.getXY(me.editor.ui.getDom()),iframePos=domUtils.getXY(me.editor.iframe);domUtils.setStyles(me.cover,{width:me.editor.iframe.offsetWidth+"px",height:me.editor.iframe.offsetHeight+"px",top:iframePos.y-editorPos.y+"px",left:iframePos.x-editorPos.x+"px",position:"absolute",display:""});},show:function show(targetObj){var me=this;me.resizer.style.display="block";if(targetObj)me.attachTo(targetObj);domUtils.on(this.resizer,"mousedown",me.proxy(me._eventHandler,me));domUtils.on(me.doc,"mouseup",me.proxy(me._eventHandler,me));me.showCover();me.editor.fireEvent("afterscaleshow",me);me.editor.fireEvent("saveScene");},hide:function hide(){var me=this;me.hideCover();me.resizer.style.display="none";domUtils.un(me.resizer,"mousedown",me.proxy(me._eventHandler,me));domUtils.un(me.doc,"mouseup",me.proxy(me._eventHandler,me));me.editor.fireEvent("afterscalehide",me);},proxy:function proxy(fn,context){return function(e){return fn.apply(context||this,arguments);};},attachTo:function attachTo(targetObj){var me=this,target=me.target=targetObj,resizer=this.resizer,imgPos=domUtils.getXY(target),iframePos=domUtils.getXY(me.editor.iframe),editorPos=domUtils.getXY(resizer.parentNode);domUtils.setStyles(resizer,{width:target.width+"px",height:target.height+"px",left:iframePos.x+imgPos.x-me.editor.document.body.scrollLeft-editorPos.x-parseInt(resizer.style.borderLeftWidth)+"px",top:iframePos.y+imgPos.y-me.editor.document.body.scrollTop-editorPos.y-parseInt(resizer.style.borderTopWidth)+"px"});}};})();return function(){var me=this,imageScale;me.setOpt("imageScaleEnabled",true);if(!browser.ie&&me.options.imageScaleEnabled){me.addListener("click",function(type,e){var range=me.selection.getRange(),img=range.getClosedNode();if(img&&img.tagName=="IMG"&&me.body.contentEditable!="false"){if(img.className.indexOf("edui-faked-music")!=-1||img.getAttribute("anchorname")||domUtils.hasClass(img,"loadingclass")||domUtils.hasClass(img,"loaderrorclass")){return;}if(!imageScale){imageScale=new Scale();imageScale.init(me);me.ui.getDom().appendChild(imageScale.resizer);var _keyDownHandler=function _keyDownHandler(e){imageScale.hide();if(imageScale.target)me.selection.getRange().selectNode(imageScale.target).select();},_mouseDownHandler=function _mouseDownHandler(e){var ele=e.target||e.srcElement;if(ele&&(ele.className===undefined||ele.className.indexOf("edui-editor-imagescale")==-1)){_keyDownHandler(e);}},timer;me.addListener("afterscaleshow",function(e){me.addListener("beforekeydown",_keyDownHandler);me.addListener("beforemousedown",_mouseDownHandler);domUtils.on(document,"keydown",_keyDownHandler);domUtils.on(document,"mousedown",_mouseDownHandler);me.selection.getNative().removeAllRanges();});me.addListener("afterscalehide",function(e){me.removeListener("beforekeydown",_keyDownHandler);me.removeListener("beforemousedown",_mouseDownHandler);domUtils.un(document,"keydown",_keyDownHandler);domUtils.un(document,"mousedown",_mouseDownHandler);var target=imageScale.target;if(target.parentNode){me.selection.getRange().selectNode(target).select();}});//TODO 有iframe的情况，mousedown不能往下传。。\ndomUtils.on(imageScale.resizer,"mousedown",function(e){me.selection.getNative().removeAllRanges();var ele=e.target||e.srcElement;if(ele&&ele.className.indexOf("edui-editor-imagescale-hand")==-1){timer=setTimeout(function(){imageScale.hide();if(imageScale.target)me.selection.getRange().selectNode(ele).select();},200);}});domUtils.on(imageScale.resizer,"mouseup",function(e){var ele=e.target||e.srcElement;if(ele&&ele.className.indexOf("edui-editor-imagescale-hand")==-1){clearTimeout(timer);}});}imageScale.show(img);}else{if(imageScale&&imageScale.resizer.style.display!="none")imageScale.hide();}});}if(browser.webkit){me.addListener("click",function(type,e){if(e.target.tagName=="IMG"&&me.body.contentEditable!="false"){var range=new dom.Range(me.document);range.selectNode(e.target).select();}});}};}();// plugins/autolink.js\n///import core\n///commands 为非ie浏览器自动添加a标签\n///commandsName  AutoLink\n///commandsTitle  自动增加链接\n/**\n * @description 为非ie浏览器自动添加a标签\n * @author zhanyi\n */UE.plugin.register("autolink",function(){var cont=0;return!browser.ie?{bindEvents:{reset:function reset(){cont=0;},keydown:function keydown(type,evt){var me=this;var keyCode=evt.keyCode||evt.which;if(keyCode==32||keyCode==13){var sel=me.selection.getNative(),range=sel.getRangeAt(0).cloneRange(),offset,charCode;var start=range.startContainer;while(start.nodeType==1&&range.startOffset>0){start=range.startContainer.childNodes[range.startOffset-1];if(!start){break;}range.setStart(start,start.nodeType==1?start.childNodes.length:start.nodeValue.length);range.collapse(true);start=range.startContainer;}do{if(range.startOffset==0){start=range.startContainer.previousSibling;while(start&&start.nodeType==1){start=start.lastChild;}if(!start||domUtils.isFillChar(start)){break;}offset=start.nodeValue.length;}else{start=range.startContainer;offset=range.startOffset;}range.setStart(start,offset-1);charCode=range.toString().charCodeAt(0);}while(charCode!=160&&charCode!=32);if(range.toString().replace(new RegExp(domUtils.fillChar,"g"),"").match(/(?:https?:\\/\\/|ssh:\\/\\/|ftp:\\/\\/|file:\\/|www\\.)/i)){while(range.toString().length){if(/^(?:https?:\\/\\/|ssh:\\/\\/|ftp:\\/\\/|file:\\/|www\\.)/i.test(range.toString())){break;}try{range.setStart(range.startContainer,range.startOffset+1);}catch(e){//trace:2121\nvar start=range.startContainer;while(!(next=start.nextSibling)){if(domUtils.isBody(start)){return;}start=start.parentNode;}range.setStart(next,0);}}//range的开始边界已经在a标签里的不再处理\nif(domUtils.findParentByTagName(range.startContainer,"a",true)){return;}var a=me.document.createElement("a"),text=me.document.createTextNode(" "),href;me.undoManger&&me.undoManger.save();a.appendChild(range.extractContents());a.href=a.innerHTML=a.innerHTML.replace(/<[^>]+>/g,"");href=a.getAttribute("href").replace(new RegExp(domUtils.fillChar,"g"),"");href=/^(?:https?:\\/\\/)/gi.test(href)?href:"http://"+href;a.setAttribute("_src",utils.html(href));a.href=utils.html(href);range.insertNode(a);a.parentNode.insertBefore(text,a.nextSibling);range.setStart(text,0);range.collapse(true);sel.removeAllRanges();sel.addRange(range);me.undoManger&&me.undoManger.save();}}}}}:{};},function(){var keyCodes={37:1,38:1,39:1,40:1,13:1,32:1};function checkIsCludeLink(node){if(node.nodeType==3){return null;}if(node.nodeName=="A"){return node;}var lastChild=node.lastChild;while(lastChild){if(lastChild.nodeName=="A"){return lastChild;}if(lastChild.nodeType==3){if(domUtils.isWhitespace(lastChild)){lastChild=lastChild.previousSibling;continue;}return null;}lastChild=lastChild.lastChild;}}browser.ie&&this.addListener("keyup",function(cmd,evt){var me=this,keyCode=evt.keyCode;if(keyCodes[keyCode]){var rng=me.selection.getRange();var start=rng.startContainer;if(keyCode==13){while(start&&!domUtils.isBody(start)&&!domUtils.isBlockElm(start)){start=start.parentNode;}if(start&&!domUtils.isBody(start)&&start.nodeName=="P"){var pre=start.previousSibling;if(pre&&pre.nodeType==1){var pre=checkIsCludeLink(pre);if(pre&&!pre.getAttribute("_href")){domUtils.remove(pre,true);}}}}else if(keyCode==32){if(start.nodeType==3&&/^\\s$/.test(start.nodeValue)){start=start.previousSibling;if(start&&start.nodeName=="A"&&!start.getAttribute("_href")){domUtils.remove(start,true);}}}else{start=domUtils.findParentByTagName(start,"a",true);if(start&&!start.getAttribute("_href")){var bk=rng.createBookmark();domUtils.remove(start,true);rng.moveToBookmark(bk).select(true);}}}});});// plugins/autoheight.js\n///import core\n///commands 当输入内容超过编辑器高度时，编辑器自动增高\n///commandsName  AutoHeight,autoHeightEnabled\n///commandsTitle  自动增高\n/**\n * @description 自动伸展\n * @author zhanyi\n */UE.plugins["autoheight"]=function(){var me=this;//提供开关，就算加载也可以关闭\nme.autoHeightEnabled=me.options.autoHeightEnabled!==false;if(!me.autoHeightEnabled){return;}var bakOverflow,lastHeight=0,options=me.options,currentHeight,timer;function adjustHeight(){var me=this;clearTimeout(timer);if(isFullscreen)return;if(!me.queryCommandState||me.queryCommandState&&me.queryCommandState("source")!=1){timer=setTimeout(function(){var node=me.body.lastChild;while(node&&node.nodeType!=1){node=node.previousSibling;}if(node&&node.nodeType==1){node.style.clear="both";currentHeight=Math.max(domUtils.getXY(node).y+node.offsetHeight+25,Math.max(options.minFrameHeight,options.initialFrameHeight));if(currentHeight!=lastHeight){if(currentHeight!==parseInt(me.iframe.parentNode.style.height)){me.iframe.parentNode.style.height=currentHeight+"px";}me.body.style.height=currentHeight+"px";lastHeight=currentHeight;}domUtils.removeStyle(node,"clear");}},50);}}var isFullscreen;me.addListener("fullscreenchanged",function(cmd,f){isFullscreen=f;});me.addListener("destroy",function(){domUtils.un(me.window,"scroll",fixedScrollTop);me.removeListener("contentchange afterinserthtml keyup mouseup",adjustHeight);});me.enableAutoHeight=function(){var me=this;if(!me.autoHeightEnabled){return;}var doc=me.document;me.autoHeightEnabled=true;bakOverflow=doc.body.style.overflowY;doc.body.style.overflowY="hidden";me.addListener("contentchange afterinserthtml keyup mouseup",adjustHeight);//ff不给事件算得不对\nsetTimeout(function(){adjustHeight.call(me);},browser.gecko?100:0);me.fireEvent("autoheightchanged",me.autoHeightEnabled);};me.disableAutoHeight=function(){me.body.style.overflowY=bakOverflow||"";me.removeListener("contentchange",adjustHeight);me.removeListener("keyup",adjustHeight);me.removeListener("mouseup",adjustHeight);me.autoHeightEnabled=false;me.fireEvent("autoheightchanged",me.autoHeightEnabled);};me.on("setHeight",function(){me.disableAutoHeight();});me.addListener("ready",function(){me.enableAutoHeight();//trace:1764\nvar timer;domUtils.on(browser.ie?me.body:me.document,browser.webkit?"dragover":"drop",function(){clearTimeout(timer);timer=setTimeout(function(){//trace:3681\nadjustHeight.call(me);},100);});//修复内容过多时，回到顶部，顶部内容被工具栏遮挡问题\ndomUtils.on(me.window,"scroll",fixedScrollTop);});var lastScrollY;function fixedScrollTop(){if(!me.window)return;if(lastScrollY===null){lastScrollY=me.window.scrollY;}else if(me.window.scrollY==0&&lastScrollY!=0){me.window.scrollTo(0,0);lastScrollY=null;}}};// plugins/autofloat.js\n///import core\n///commands 悬浮工具栏\n///commandsName  AutoFloat,autoFloatEnabled\n///commandsTitle  悬浮工具栏\n/**\n *  modified by chengchao01\n *  注意： 引入此功能后，在IE6下会将body的背景图片覆盖掉！\n */UE.plugins["autofloat"]=function(){var me=this,lang=me.getLang();me.setOpt({topOffset:0});var optsAutoFloatEnabled=me.options.autoFloatEnabled!==false,topOffset=me.options.topOffset;//如果不固定toolbar的位置，则直接退出\nif(!optsAutoFloatEnabled){return;}var uiUtils=UE.ui.uiUtils,LteIE6=browser.ie&&browser.version<=6,quirks=browser.quirks;function checkHasUI(){if(!UE.ui){alert(lang.autofloatMsg);return 0;}return 1;}function fixIE6FixedPos(){var docStyle=document.body.style;docStyle.backgroundImage=\'url("about:blank")\';docStyle.backgroundAttachment="fixed";}var bakCssText,placeHolder=document.createElement("div"),toolbarBox,orgTop,getPosition,flag=true;//ie7模式下需要偏移\nfunction setFloating(){var toobarBoxPos=domUtils.getXY(toolbarBox),origalFloat=domUtils.getComputedStyle(toolbarBox,"position"),origalLeft=domUtils.getComputedStyle(toolbarBox,"left");toolbarBox.style.width=toolbarBox.offsetWidth+"px";toolbarBox.style.zIndex=me.options.zIndex*1+1;toolbarBox.parentNode.insertBefore(placeHolder,toolbarBox);if(LteIE6||quirks&&browser.ie){if(toolbarBox.style.position!="absolute"){toolbarBox.style.position="absolute";}toolbarBox.style.top=(document.body.scrollTop||document.documentElement.scrollTop)-orgTop+topOffset+"px";}else{if(browser.ie7Compat&&flag){flag=false;toolbarBox.style.left=domUtils.getXY(toolbarBox).x-document.documentElement.getBoundingClientRect().left+2+"px";}if(toolbarBox.style.position!="fixed"){toolbarBox.style.position="fixed";toolbarBox.style.top=topOffset+"px";(origalFloat=="absolute"||origalFloat=="relative")&&parseFloat(origalLeft)&&(toolbarBox.style.left=toobarBoxPos.x+"px");}}}function unsetFloating(){flag=true;if(placeHolder.parentNode){placeHolder.parentNode.removeChild(placeHolder);}toolbarBox.style.cssText=bakCssText;}function updateFloating(){var rect3=getPosition(me.container);var offset=me.options.toolbarTopOffset||0;if(rect3.top<0&&rect3.bottom-toolbarBox.offsetHeight>offset){setFloating();}else{unsetFloating();}}var defer_updateFloating=utils.defer(function(){updateFloating();},browser.ie?200:100,true);me.addListener("destroy",function(){domUtils.un(window,["scroll","resize"],updateFloating);me.removeListener("keydown",defer_updateFloating);});me.addListener("ready",function(){if(checkHasUI(me)){//加载了ui组件，但在new时，没有加载ui，导致编辑器实例上没有ui类，所以这里做判断\nif(!me.ui){return;}getPosition=uiUtils.getClientRect;toolbarBox=me.ui.getDom("toolbarbox");orgTop=getPosition(toolbarBox).top;bakCssText=toolbarBox.style.cssText;placeHolder.style.height=toolbarBox.offsetHeight+"px";if(LteIE6){fixIE6FixedPos();}domUtils.on(window,["scroll","resize"],updateFloating);me.addListener("keydown",defer_updateFloating);me.addListener("beforefullscreenchange",function(t,enabled){if(enabled){unsetFloating();}});me.addListener("fullscreenchanged",function(t,enabled){if(!enabled){updateFloating();}});me.addListener("sourcemodechanged",function(t,enabled){setTimeout(function(){updateFloating();},0);});me.addListener("clearDoc",function(){setTimeout(function(){updateFloating();},0);});}});};// plugins/video.js\n/**\n * video插件， 为UEditor提供视频插入支持\n * @file\n * @since 1.2.6.1\n */UE.plugins["video"]=function(){var me=this;/**\n     * 创建插入视频字符窜\n     * @param url 视频地址\n     * @param width 视频宽度\n     * @param height 视频高度\n     * @param align 视频对齐\n     * @param toEmbed 是否以flash代替显示\n     * @param addParagraph  是否需要添加P 标签\n     */function creatInsertStr(url,width,height,id,align,classname,type){var str;switch(type){case"image":str="<img "+(id?\'id="\'+id+\'"\':"")+\' width="\'+width+\'" height="\'+height+\'" _url="\'+url+\'" class="\'+classname.replace(/\\bvideo-js\\b/,"")+\'"\'+\' src="\'+me.options.UEDITOR_HOME_URL+\'themes/default/images/spacer.gif" style="background:url(\'+me.options.UEDITOR_HOME_URL+"themes/default/images/videologo.gif) no-repeat center center; border:1px solid gray;"+(align?"float:"+align+";":"")+\'" />\';break;case"embed":str=\'<embed type="application/x-shockwave-flash" class="\'+classname+\'" pluginspage="http://www.macromedia.com/go/getflashplayer"\'+\' src="\'+utils.html(url)+\'" width="\'+width+\'" height="\'+height+\'"\'+(align?\' style="float:\'+align+\'"\':"")+\' wmode="transparent" play="true" loop="false" menu="false" allowscriptaccess="never" allowfullscreen="true" >\';break;case"video":var ext=url.substr(url.lastIndexOf(".")+1);if(ext=="ogv")ext="ogg";str="<video"+(id?\' id="\'+id+\'"\':"")+\' class="\'+classname+\' video-js" \'+(align?\' style="float:\'+align+\'"\':"")+\' controls preload="none" width="\'+width+\'" height="\'+height+\'" src="\'+url+\'" data-setup="{}">\'+\'<source src="\'+url+\'" type="video/\'+ext+\'" /></video>\';break;}return str;}function switchImgAndVideo(root,img2video){utils.each(root.getNodesByTagName(img2video?"img":"embed video"),function(node){var className=node.getAttr("class");if(className&&className.indexOf("edui-faked-video")!=-1){var html=creatInsertStr(img2video?node.getAttr("_url"):node.getAttr("src"),node.getAttr("width"),node.getAttr("height"),null,node.getStyle("float")||"",className,img2video?"embed":"image");node.parentNode.replaceChild(UE.uNode.createElement(html),node);}if(className&&className.indexOf("edui-upload-video")!=-1){var html=creatInsertStr(img2video?node.getAttr("_url"):node.getAttr("src"),node.getAttr("width"),node.getAttr("height"),null,node.getStyle("float")||"",className,img2video?"video":"image");node.parentNode.replaceChild(UE.uNode.createElement(html),node);}});}me.addOutputRule(function(root){switchImgAndVideo(root,true);});me.addInputRule(function(root){switchImgAndVideo(root);});/**\n     * 插入视频\n     * @command insertvideo\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { Object } videoAttr 键值对对象， 描述一个视频的所有属性\n     * @example\n     * ```javascript\n     *\n     * var videoAttr = {\n     *      //视频地址\n     *      url: \'http://www.youku.com/xxx\',\n     *      //视频宽高值， 单位px\n     *      width: 200,\n     *      height: 100\n     * };\n     *\n     * //editor 是编辑器实例\n     * //向编辑器插入单个视频\n     * editor.execCommand( \'insertvideo\', videoAttr );\n     * ```\n     *//**\n     * 插入视频\n     * @command insertvideo\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { Array } videoArr 需要插入的视频的数组， 其中的每一个元素都是一个键值对对象， 描述了一个视频的所有属性\n     * @example\n     * ```javascript\n     *\n     * var videoAttr1 = {\n     *      //视频地址\n     *      url: \'http://www.youku.com/xxx\',\n     *      //视频宽高值， 单位px\n     *      width: 200,\n     *      height: 100\n     * },\n     * videoAttr2 = {\n     *      //视频地址\n     *      url: \'http://www.youku.com/xxx\',\n     *      //视频宽高值， 单位px\n     *      width: 200,\n     *      height: 100\n     * }\n     *\n     * //editor 是编辑器实例\n     * //该方法将会向编辑器内插入两个视频\n     * editor.execCommand( \'insertvideo\', [ videoAttr1, videoAttr2 ] );\n     * ```\n     *//**\n     * 查询当前光标所在处是否是一个视频\n     * @command insertvideo\n     * @method queryCommandState\n     * @param { String } cmd 需要查询的命令字符串\n     * @return { int } 如果当前光标所在处的元素是一个视频对象， 则返回1，否则返回0\n     * @example\n     * ```javascript\n     *\n     * //editor 是编辑器实例\n     * editor.queryCommandState( \'insertvideo\' );\n     * ```\n     */me.commands["insertvideo"]={execCommand:function execCommand(cmd,videoObjs,type){videoObjs=utils.isArray(videoObjs)?videoObjs:[videoObjs];if(me.fireEvent("beforeinsertvideo",videoObjs)===true){return;}var html=[],id="tmpVedio",cl;for(var i=0,vi,len=videoObjs.length;i<len;i++){vi=videoObjs[i];cl=type=="upload"?"edui-upload-video video-js vjs-default-skin":"edui-faked-video";html.push(creatInsertStr(vi.url,vi.width||420,vi.height||280,id+i,null,cl,"image"));}me.execCommand("inserthtml",html.join(""),true);var rng=this.selection.getRange();for(var i=0,len=videoObjs.length;i<len;i++){var img=this.document.getElementById("tmpVedio"+i);domUtils.removeAttributes(img,"id");rng.selectNode(img).select();me.execCommand("imagefloat",videoObjs[i].align);}me.fireEvent("afterinsertvideo",videoObjs);},queryCommandState:function queryCommandState(){var img=me.selection.getRange().getClosedNode(),flag=img&&(img.className=="edui-faked-video"||img.className.indexOf("edui-upload-video")!=-1);return flag?1:0;}};};// plugins/table.core.js\n/**\n * Created with JetBrains WebStorm.\n * User: taoqili\n * Date: 13-1-18\n * Time: 上午11:09\n * To change this template use File | Settings | File Templates.\n *//**\n * UE表格操作类\n * @param table\n * @constructor\n */(function(){var UETable=UE.UETable=function(table){this.table=table;this.indexTable=[];this.selectedTds=[];this.cellsRange={};this.update(table);};//===以下为静态工具方法===\nUETable.removeSelectedClass=function(cells){utils.each(cells,function(cell){domUtils.removeClasses(cell,"selectTdClass");});};UETable.addSelectedClass=function(cells){utils.each(cells,function(cell){domUtils.addClass(cell,"selectTdClass");});};UETable.isEmptyBlock=function(node){var reg=new RegExp(domUtils.fillChar,"g");if(node[browser.ie?"innerText":"textContent"].replace(/^\\s*$/,"").replace(reg,"").length>0){return 0;}for(var i in dtd.$isNotEmpty){if(dtd.$isNotEmpty.hasOwnProperty(i)){if(node.getElementsByTagName(i).length){return 0;}}}return 1;};UETable.getWidth=function(cell){if(!cell)return 0;return parseInt(domUtils.getComputedStyle(cell,"width"),10);};/**\n     * 获取单元格或者单元格组的“对齐”状态。 如果当前的检测对象是一个单元格组， 只有在满足所有单元格的 水平和竖直 对齐属性都相同的\n     * 条件时才会返回其状态值，否则将返回null； 如果当前只检测了一个单元格， 则直接返回当前单元格的对齐状态；\n     * @param table cell or table cells , 支持单个单元格dom对象 或者 单元格dom对象数组\n     * @return { align: \'left\' || \'right\' || \'center\', valign: \'top\' || \'middle\' || \'bottom\' } 或者 null\n     */UETable.getTableCellAlignState=function(cells){!utils.isArray(cells)&&(cells=[cells]);var result={},status=["align","valign"],tempStatus=null,isSame=true;//状态是否相同\nutils.each(cells,function(cellNode){utils.each(status,function(currentState){tempStatus=cellNode.getAttribute(currentState);if(!result[currentState]&&tempStatus){result[currentState]=tempStatus;}else if(!result[currentState]||tempStatus!==result[currentState]){isSame=false;return false;}});return isSame;});return isSame?result:null;};/**\n     * 根据当前选区获取相关的table信息\n     * @return {Object}\n     */UETable.getTableItemsByRange=function(editor){var start=editor.selection.getStart();//ff下会选中bookmark\nif(start&&start.id&&start.id.indexOf("_baidu_bookmark_start_")===0&&start.nextSibling){start=start.nextSibling;}//在table或者td边缘有可能存在选中tr的情况\nvar cell=start&&domUtils.findParentByTagName(start,["td","th"],true),tr=cell&&cell.parentNode,table=tr&&domUtils.findParentByTagName(tr,["table"]),caption=table&&table.getElementsByTagName("caption")[0];return{cell:cell,tr:tr,table:table,caption:caption};};UETable.getUETableBySelected=function(editor){var table=UETable.getTableItemsByRange(editor).table;if(table&&table.ueTable&&table.ueTable.selectedTds.length){return table.ueTable;}return null;};UETable.getDefaultValue=function(editor,table){var borderMap={thin:"0px",medium:"1px",thick:"2px"},tableBorder,tdPadding,tdBorder,tmpValue;if(!table){table=editor.document.createElement("table");table.insertRow(0).insertCell(0).innerHTML="xxx";editor.body.appendChild(table);var td=table.getElementsByTagName("td")[0];tmpValue=domUtils.getComputedStyle(table,"border-left-width");tableBorder=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,"padding-left");tdPadding=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,"border-left-width");tdBorder=parseInt(borderMap[tmpValue]||tmpValue,10);domUtils.remove(table);return{tableBorder:tableBorder,tdPadding:tdPadding,tdBorder:tdBorder};}else{td=table.getElementsByTagName("td")[0];tmpValue=domUtils.getComputedStyle(table,"border-left-width");tableBorder=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,"padding-left");tdPadding=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,"border-left-width");tdBorder=parseInt(borderMap[tmpValue]||tmpValue,10);return{tableBorder:tableBorder,tdPadding:tdPadding,tdBorder:tdBorder};}};/**\n     * 根据当前点击的td或者table获取索引对象\n     * @param tdOrTable\n     */UETable.getUETable=function(tdOrTable){var tag=tdOrTable.tagName.toLowerCase();tdOrTable=tag=="td"||tag=="th"||tag=="caption"?domUtils.findParentByTagName(tdOrTable,"table",true):tdOrTable;if(!tdOrTable.ueTable){tdOrTable.ueTable=new UETable(tdOrTable);}return tdOrTable.ueTable;};UETable.cloneCell=function(cell,ignoreMerge,keepPro){if(!cell||utils.isString(cell)){return this.table.ownerDocument.createElement(cell||"td");}var flag=domUtils.hasClass(cell,"selectTdClass");flag&&domUtils.removeClasses(cell,"selectTdClass");var tmpCell=cell.cloneNode(true);if(ignoreMerge){tmpCell.rowSpan=tmpCell.colSpan=1;}//去掉宽高\n!keepPro&&domUtils.removeAttributes(tmpCell,"width height");!keepPro&&domUtils.removeAttributes(tmpCell,"style");tmpCell.style.borderLeftStyle="";tmpCell.style.borderTopStyle="";tmpCell.style.borderLeftColor=cell.style.borderRightColor;tmpCell.style.borderLeftWidth=cell.style.borderRightWidth;tmpCell.style.borderTopColor=cell.style.borderBottomColor;tmpCell.style.borderTopWidth=cell.style.borderBottomWidth;flag&&domUtils.addClass(cell,"selectTdClass");return tmpCell;};UETable.prototype={getMaxRows:function getMaxRows(){var rows=this.table.rows,maxLen=1;for(var i=0,row;row=rows[i];i++){var currentMax=1;for(var j=0,cj;cj=row.cells[j++];){currentMax=Math.max(cj.rowSpan||1,currentMax);}maxLen=Math.max(currentMax+i,maxLen);}return maxLen;},/**\n         * 获取当前表格的最大列数\n         */getMaxCols:function getMaxCols(){var rows=this.table.rows,maxLen=0,cellRows={};for(var i=0,row;row=rows[i];i++){var cellsNum=0;for(var j=0,cj;cj=row.cells[j++];){cellsNum+=cj.colSpan||1;if(cj.rowSpan&&cj.rowSpan>1){for(var k=1;k<cj.rowSpan;k++){if(!cellRows["row_"+(i+k)]){cellRows["row_"+(i+k)]=cj.colSpan||1;}else{cellRows["row_"+(i+k)]++;}}}}cellsNum+=cellRows["row_"+i]||0;maxLen=Math.max(cellsNum,maxLen);}return maxLen;},getCellColIndex:function getCellColIndex(cell){},/**\n         * 获取当前cell旁边的单元格，\n         * @param cell\n         * @param right\n         */getHSideCell:function getHSideCell(cell,right){try{var cellInfo=this.getCellInfo(cell),previewRowIndex,previewColIndex;var len=this.selectedTds.length,range=this.cellsRange;//首行或者首列没有前置单元格\nif(!right&&(!len?!cellInfo.colIndex:!range.beginColIndex)||right&&(!len?cellInfo.colIndex==this.colsNum-1:range.endColIndex==this.colsNum-1))return null;previewRowIndex=!len?cellInfo.rowIndex:range.beginRowIndex;previewColIndex=!right?!len?cellInfo.colIndex<1?0:cellInfo.colIndex-1:range.beginColIndex-1:!len?cellInfo.colIndex+1:range.endColIndex+1;return this.getCell(this.indexTable[previewRowIndex][previewColIndex].rowIndex,this.indexTable[previewRowIndex][previewColIndex].cellIndex);}catch(e){showError(e);}},getTabNextCell:function getTabNextCell(cell,preRowIndex){var cellInfo=this.getCellInfo(cell),rowIndex=preRowIndex||cellInfo.rowIndex,colIndex=cellInfo.colIndex+1+(cellInfo.colSpan-1),nextCell;try{nextCell=this.getCell(this.indexTable[rowIndex][colIndex].rowIndex,this.indexTable[rowIndex][colIndex].cellIndex);}catch(e){try{rowIndex=rowIndex*1+1;colIndex=0;nextCell=this.getCell(this.indexTable[rowIndex][colIndex].rowIndex,this.indexTable[rowIndex][colIndex].cellIndex);}catch(e){}}return nextCell;},/**\n         * 获取视觉上的后置单元格\n         * @param cell\n         * @param bottom\n         */getVSideCell:function getVSideCell(cell,bottom,ignoreRange){try{var cellInfo=this.getCellInfo(cell),nextRowIndex,nextColIndex;var len=this.selectedTds.length&&!ignoreRange,range=this.cellsRange;//末行或者末列没有后置单元格\nif(!bottom&&cellInfo.rowIndex==0||bottom&&(!len?cellInfo.rowIndex+cellInfo.rowSpan>this.rowsNum-1:range.endRowIndex==this.rowsNum-1))return null;nextRowIndex=!bottom?!len?cellInfo.rowIndex-1:range.beginRowIndex-1:!len?cellInfo.rowIndex+cellInfo.rowSpan:range.endRowIndex+1;nextColIndex=!len?cellInfo.colIndex:range.beginColIndex;return this.getCell(this.indexTable[nextRowIndex][nextColIndex].rowIndex,this.indexTable[nextRowIndex][nextColIndex].cellIndex);}catch(e){showError(e);}},/**\n         * 获取相同结束位置的单元格，xOrY指代了是获取x轴相同还是y轴相同\n         */getSameEndPosCells:function getSameEndPosCells(cell,xOrY){try{var flag=xOrY.toLowerCase()==="x",end=domUtils.getXY(cell)[flag?"x":"y"]+cell["offset"+(flag?"Width":"Height")],rows=this.table.rows,cells=null,returns=[];for(var i=0;i<this.rowsNum;i++){cells=rows[i].cells;for(var j=0,tmpCell;tmpCell=cells[j++];){var tmpEnd=domUtils.getXY(tmpCell)[flag?"x":"y"]+tmpCell["offset"+(flag?"Width":"Height")];//对应行的td已经被上面行rowSpan了\nif(tmpEnd>end&&flag)break;if(cell==tmpCell||end==tmpEnd){//只获取单一的单元格\n//todo 仅获取单一单元格在特定情况下会造成returns为空，从而影响后续的拖拽实现，修正这个。需考虑性能\nif(tmpCell[flag?"colSpan":"rowSpan"]==1){returns.push(tmpCell);}if(flag)break;}}}return returns;}catch(e){showError(e);}},setCellContent:function setCellContent(cell,content){cell.innerHTML=content||(browser.ie?domUtils.fillChar:"<br />");},cloneCell:UETable.cloneCell,/**\n         * 获取跟当前单元格的右边竖线为左边的所有未合并单元格\n         */getSameStartPosXCells:function getSameStartPosXCells(cell){try{var start=domUtils.getXY(cell).x+cell.offsetWidth,rows=this.table.rows,cells,returns=[];for(var i=0;i<this.rowsNum;i++){cells=rows[i].cells;for(var j=0,tmpCell;tmpCell=cells[j++];){var tmpStart=domUtils.getXY(tmpCell).x;if(tmpStart>start)break;if(tmpStart==start&&tmpCell.colSpan==1){returns.push(tmpCell);break;}}}return returns;}catch(e){showError(e);}},/**\n         * 更新table对应的索引表\n         */update:function update(table){this.table=table||this.table;this.selectedTds=[];this.cellsRange={};this.indexTable=[];var rows=this.table.rows,rowsNum=this.getMaxRows(),dNum=rowsNum-rows.length,colsNum=this.getMaxCols();while(dNum--){this.table.insertRow(rows.length);}this.rowsNum=rowsNum;this.colsNum=colsNum;for(var i=0,len=rows.length;i<len;i++){this.indexTable[i]=new Array(colsNum);}//填充索引表\nfor(var rowIndex=0,row;row=rows[rowIndex];rowIndex++){for(var cellIndex=0,cell,cells=row.cells;cell=cells[cellIndex];cellIndex++){//修正整行被rowSpan时导致的行数计算错误\nif(cell.rowSpan>rowsNum){cell.rowSpan=rowsNum;}var colIndex=cellIndex,rowSpan=cell.rowSpan||1,colSpan=cell.colSpan||1;//当已经被上一行rowSpan或者被前一列colSpan了，则跳到下一个单元格进行\nwhile(this.indexTable[rowIndex][colIndex]){colIndex++;}for(var j=0;j<rowSpan;j++){for(var k=0;k<colSpan;k++){this.indexTable[rowIndex+j][colIndex+k]={rowIndex:rowIndex,cellIndex:cellIndex,colIndex:colIndex,rowSpan:rowSpan,colSpan:colSpan};}}}}//修复残缺td\nfor(j=0;j<rowsNum;j++){for(k=0;k<colsNum;k++){if(this.indexTable[j][k]===undefined){row=rows[j];cell=row.cells[row.cells.length-1];cell=cell?cell.cloneNode(true):this.table.ownerDocument.createElement("td");this.setCellContent(cell);if(cell.colSpan!==1)cell.colSpan=1;if(cell.rowSpan!==1)cell.rowSpan=1;row.appendChild(cell);this.indexTable[j][k]={rowIndex:j,cellIndex:cell.cellIndex,colIndex:k,rowSpan:1,colSpan:1};}}}//当框选后删除行或者列后撤销，需要重建选区。\nvar tds=domUtils.getElementsByTagName(this.table,"td"),selectTds=[];utils.each(tds,function(td){if(domUtils.hasClass(td,"selectTdClass")){selectTds.push(td);}});if(selectTds.length){var start=selectTds[0],end=selectTds[selectTds.length-1],startInfo=this.getCellInfo(start),endInfo=this.getCellInfo(end);this.selectedTds=selectTds;this.cellsRange={beginRowIndex:startInfo.rowIndex,beginColIndex:startInfo.colIndex,endRowIndex:endInfo.rowIndex+endInfo.rowSpan-1,endColIndex:endInfo.colIndex+endInfo.colSpan-1};}//给第一行设置firstRow的样式名称,在排序图标的样式上使用到\nif(!domUtils.hasClass(this.table.rows[0],"firstRow")){domUtils.addClass(this.table.rows[0],"firstRow");for(var i=1;i<this.table.rows.length;i++){domUtils.removeClasses(this.table.rows[i],"firstRow");}}},/**\n         * 获取单元格的索引信息\n         */getCellInfo:function getCellInfo(cell){if(!cell)return;var cellIndex=cell.cellIndex,rowIndex=cell.parentNode.rowIndex,rowInfo=this.indexTable[rowIndex],numCols=this.colsNum;for(var colIndex=cellIndex;colIndex<numCols;colIndex++){var cellInfo=rowInfo[colIndex];if(cellInfo.rowIndex===rowIndex&&cellInfo.cellIndex===cellIndex){return cellInfo;}}},/**\n         * 根据行列号获取单元格\n         */getCell:function getCell(rowIndex,cellIndex){return rowIndex<this.rowsNum&&this.table.rows[rowIndex].cells[cellIndex]||null;},/**\n         * 删除单元格\n         */deleteCell:function deleteCell(cell,rowIndex){rowIndex=typeof rowIndex=="number"?rowIndex:cell.parentNode.rowIndex;var row=this.table.rows[rowIndex];row.deleteCell(cell.cellIndex);},/**\n         * 根据始末两个单元格获取被框选的所有单元格范围\n         */getCellsRange:function getCellsRange(cellA,cellB){function checkRange(beginRowIndex,beginColIndex,endRowIndex,endColIndex){var tmpBeginRowIndex=beginRowIndex,tmpBeginColIndex=beginColIndex,tmpEndRowIndex=endRowIndex,tmpEndColIndex=endColIndex,cellInfo,colIndex,rowIndex;// 通过indexTable检查是否存在超出TableRange上边界的情况\nif(beginRowIndex>0){for(colIndex=beginColIndex;colIndex<endColIndex;colIndex++){cellInfo=me.indexTable[beginRowIndex][colIndex];rowIndex=cellInfo.rowIndex;if(rowIndex<beginRowIndex){tmpBeginRowIndex=Math.min(rowIndex,tmpBeginRowIndex);}}}// 通过indexTable检查是否存在超出TableRange右边界的情况\nif(endColIndex<me.colsNum){for(rowIndex=beginRowIndex;rowIndex<endRowIndex;rowIndex++){cellInfo=me.indexTable[rowIndex][endColIndex];colIndex=cellInfo.colIndex+cellInfo.colSpan-1;if(colIndex>endColIndex){tmpEndColIndex=Math.max(colIndex,tmpEndColIndex);}}}// 检查是否有超出TableRange下边界的情况\nif(endRowIndex<me.rowsNum){for(colIndex=beginColIndex;colIndex<endColIndex;colIndex++){cellInfo=me.indexTable[endRowIndex][colIndex];rowIndex=cellInfo.rowIndex+cellInfo.rowSpan-1;if(rowIndex>endRowIndex){tmpEndRowIndex=Math.max(rowIndex,tmpEndRowIndex);}}}// 检查是否有超出TableRange左边界的情况\nif(beginColIndex>0){for(rowIndex=beginRowIndex;rowIndex<endRowIndex;rowIndex++){cellInfo=me.indexTable[rowIndex][beginColIndex];colIndex=cellInfo.colIndex;if(colIndex<beginColIndex){tmpBeginColIndex=Math.min(cellInfo.colIndex,tmpBeginColIndex);}}}//递归调用直至所有完成所有框选单元格的扩展\nif(tmpBeginRowIndex!=beginRowIndex||tmpBeginColIndex!=beginColIndex||tmpEndRowIndex!=endRowIndex||tmpEndColIndex!=endColIndex){return checkRange(tmpBeginRowIndex,tmpBeginColIndex,tmpEndRowIndex,tmpEndColIndex);}else{// 不需要扩展TableRange的情况\nreturn{beginRowIndex:beginRowIndex,beginColIndex:beginColIndex,endRowIndex:endRowIndex,endColIndex:endColIndex};}}try{var me=this,cellAInfo=me.getCellInfo(cellA);if(cellA===cellB){return{beginRowIndex:cellAInfo.rowIndex,beginColIndex:cellAInfo.colIndex,endRowIndex:cellAInfo.rowIndex+cellAInfo.rowSpan-1,endColIndex:cellAInfo.colIndex+cellAInfo.colSpan-1};}var cellBInfo=me.getCellInfo(cellB);// 计算TableRange的四个边\nvar beginRowIndex=Math.min(cellAInfo.rowIndex,cellBInfo.rowIndex),beginColIndex=Math.min(cellAInfo.colIndex,cellBInfo.colIndex),endRowIndex=Math.max(cellAInfo.rowIndex+cellAInfo.rowSpan-1,cellBInfo.rowIndex+cellBInfo.rowSpan-1),endColIndex=Math.max(cellAInfo.colIndex+cellAInfo.colSpan-1,cellBInfo.colIndex+cellBInfo.colSpan-1);return checkRange(beginRowIndex,beginColIndex,endRowIndex,endColIndex);}catch(e){//throw e;\n}},/**\n         * 依据cellsRange获取对应的单元格集合\n         */getCells:function getCells(range){//每次获取cells之前必须先清除上次的选择，否则会对后续获取操作造成影响\nthis.clearSelected();var beginRowIndex=range.beginRowIndex,beginColIndex=range.beginColIndex,endRowIndex=range.endRowIndex,endColIndex=range.endColIndex,cellInfo,rowIndex,colIndex,tdHash={},returnTds=[];for(var i=beginRowIndex;i<=endRowIndex;i++){for(var j=beginColIndex;j<=endColIndex;j++){cellInfo=this.indexTable[i][j];rowIndex=cellInfo.rowIndex;colIndex=cellInfo.colIndex;// 如果Cells里已经包含了此Cell则跳过\nvar key=rowIndex+"|"+colIndex;if(tdHash[key])continue;tdHash[key]=1;if(rowIndex<i||colIndex<j||rowIndex+cellInfo.rowSpan-1>endRowIndex||colIndex+cellInfo.colSpan-1>endColIndex){return null;}returnTds.push(this.getCell(rowIndex,cellInfo.cellIndex));}}return returnTds;},/**\n         * 清理已经选中的单元格\n         */clearSelected:function clearSelected(){UETable.removeSelectedClass(this.selectedTds);this.selectedTds=[];this.cellsRange={};},/**\n         * 根据range设置已经选中的单元格\n         */setSelected:function setSelected(range){var cells=this.getCells(range);UETable.addSelectedClass(cells);this.selectedTds=cells;this.cellsRange=range;},isFullRow:function isFullRow(){var range=this.cellsRange;return range.endColIndex-range.beginColIndex+1==this.colsNum;},isFullCol:function isFullCol(){var range=this.cellsRange,table=this.table,ths=table.getElementsByTagName("th"),rows=range.endRowIndex-range.beginRowIndex+1;return!ths.length?rows==this.rowsNum:rows==this.rowsNum||rows==this.rowsNum-1;},/**\n         * 获取视觉上的前置单元格，默认是左边，top传入时\n         * @param cell\n         * @param top\n         */getNextCell:function getNextCell(cell,bottom,ignoreRange){try{var cellInfo=this.getCellInfo(cell),nextRowIndex,nextColIndex;var len=this.selectedTds.length&&!ignoreRange,range=this.cellsRange;//末行或者末列没有后置单元格\nif(!bottom&&cellInfo.rowIndex==0||bottom&&(!len?cellInfo.rowIndex+cellInfo.rowSpan>this.rowsNum-1:range.endRowIndex==this.rowsNum-1))return null;nextRowIndex=!bottom?!len?cellInfo.rowIndex-1:range.beginRowIndex-1:!len?cellInfo.rowIndex+cellInfo.rowSpan:range.endRowIndex+1;nextColIndex=!len?cellInfo.colIndex:range.beginColIndex;return this.getCell(this.indexTable[nextRowIndex][nextColIndex].rowIndex,this.indexTable[nextRowIndex][nextColIndex].cellIndex);}catch(e){showError(e);}},getPreviewCell:function getPreviewCell(cell,top){try{var cellInfo=this.getCellInfo(cell),previewRowIndex,previewColIndex;var len=this.selectedTds.length,range=this.cellsRange;//首行或者首列没有前置单元格\nif(!top&&(!len?!cellInfo.colIndex:!range.beginColIndex)||top&&(!len?cellInfo.rowIndex>this.colsNum-1:range.endColIndex==this.colsNum-1))return null;previewRowIndex=!top?!len?cellInfo.rowIndex:range.beginRowIndex:!len?cellInfo.rowIndex<1?0:cellInfo.rowIndex-1:range.beginRowIndex;previewColIndex=!top?!len?cellInfo.colIndex<1?0:cellInfo.colIndex-1:range.beginColIndex-1:!len?cellInfo.colIndex:range.endColIndex+1;return this.getCell(this.indexTable[previewRowIndex][previewColIndex].rowIndex,this.indexTable[previewRowIndex][previewColIndex].cellIndex);}catch(e){showError(e);}},/**\n         * 移动单元格中的内容\n         */moveContent:function moveContent(cellTo,cellFrom){if(UETable.isEmptyBlock(cellFrom))return;if(UETable.isEmptyBlock(cellTo)){cellTo.innerHTML=cellFrom.innerHTML;return;}var child=cellTo.lastChild;if(child.nodeType==3||!dtd.$block[child.tagName]){cellTo.appendChild(cellTo.ownerDocument.createElement("br"));}while(child=cellFrom.firstChild){cellTo.appendChild(child);}},/**\n         * 向右合并单元格\n         */mergeRight:function mergeRight(cell){var cellInfo=this.getCellInfo(cell),rightColIndex=cellInfo.colIndex+cellInfo.colSpan,rightCellInfo=this.indexTable[cellInfo.rowIndex][rightColIndex],rightCell=this.getCell(rightCellInfo.rowIndex,rightCellInfo.cellIndex);//合并\ncell.colSpan=cellInfo.colSpan+rightCellInfo.colSpan;//被合并的单元格不应存在宽度属性\ncell.removeAttribute("width");//移动内容\nthis.moveContent(cell,rightCell);//删掉被合并的Cell\nthis.deleteCell(rightCell,rightCellInfo.rowIndex);this.update();},/**\n         * 向下合并单元格\n         */mergeDown:function mergeDown(cell){var cellInfo=this.getCellInfo(cell),downRowIndex=cellInfo.rowIndex+cellInfo.rowSpan,downCellInfo=this.indexTable[downRowIndex][cellInfo.colIndex],downCell=this.getCell(downCellInfo.rowIndex,downCellInfo.cellIndex);cell.rowSpan=cellInfo.rowSpan+downCellInfo.rowSpan;cell.removeAttribute("height");this.moveContent(cell,downCell);this.deleteCell(downCell,downCellInfo.rowIndex);this.update();},/**\n         * 合并整个range中的内容\n         */mergeRange:function mergeRange(){//由于合并操作可以在任意时刻进行，所以无法通过鼠标位置等信息实时生成range，只能通过缓存实例中的cellsRange对象来访问\nvar range=this.cellsRange,leftTopCell=this.getCell(range.beginRowIndex,this.indexTable[range.beginRowIndex][range.beginColIndex].cellIndex);// 这段关于行表头或者列表头的特殊处理会导致表头合并范围错误\n// 为什么有这段代码的原因未明，暂且注释掉，希望原作者看到后出面说明下\n// if (\n//   leftTopCell.tagName == "TH" &&\n//   range.endRowIndex !== range.beginRowIndex\n// ) {\n//   var index = this.indexTable,\n//     info = this.getCellInfo(leftTopCell);\n//   leftTopCell = this.getCell(1, index[1][info.colIndex].cellIndex);\n//   range = this.getCellsRange(\n//     leftTopCell,\n//     this.getCell(\n//       index[this.rowsNum - 1][info.colIndex].rowIndex,\n//       index[this.rowsNum - 1][info.colIndex].cellIndex\n//     )\n//   );\n// }\n// 删除剩余的Cells\nvar cells=this.getCells(range);for(var i=0,ci;ci=cells[i++];){if(ci!==leftTopCell){this.moveContent(leftTopCell,ci);this.deleteCell(ci);}}// 修改左上角Cell的rowSpan和colSpan，并调整宽度属性设置\nleftTopCell.rowSpan=range.endRowIndex-range.beginRowIndex+1;leftTopCell.rowSpan>1&&leftTopCell.removeAttribute("height");leftTopCell.colSpan=range.endColIndex-range.beginColIndex+1;leftTopCell.colSpan>1&&leftTopCell.removeAttribute("width");if(leftTopCell.rowSpan==this.rowsNum&&leftTopCell.colSpan!=1){leftTopCell.colSpan=1;}if(leftTopCell.colSpan==this.colsNum&&leftTopCell.rowSpan!=1){var rowIndex=leftTopCell.parentNode.rowIndex;//解决IE下的表格操作问题\nif(this.table.deleteRow){for(var i=rowIndex+1,curIndex=rowIndex+1,len=leftTopCell.rowSpan;i<len;i++){this.table.deleteRow(curIndex);}}else{for(var i=0,len=leftTopCell.rowSpan-1;i<len;i++){var row=this.table.rows[rowIndex+1];row.parentNode.removeChild(row);}}leftTopCell.rowSpan=1;}this.update();},/**\n         * 插入一行单元格\n         */insertRow:function insertRow(rowIndex,sourceCell){var numCols=this.colsNum,table=this.table,row=table.insertRow(rowIndex),cell,thead=null,isInsertTitle=typeof sourceCell=="string"&&sourceCell.toUpperCase()=="TH";function replaceTdToTh(colIndex,cell,tableRow){if(colIndex==0){var tr=tableRow.nextSibling||tableRow.previousSibling,th=tr.cells[colIndex];if(th.tagName=="TH"){th=cell.ownerDocument.createElement("th");th.appendChild(cell.firstChild);tableRow.insertBefore(th,cell);domUtils.remove(cell);}}else{if(cell.tagName=="TH"){var td=cell.ownerDocument.createElement("td");td.appendChild(cell.firstChild);tableRow.insertBefore(td,cell);domUtils.remove(cell);}}}//首行直接插入,无需考虑部分单元格被rowspan的情况\nif(rowIndex==0||rowIndex==this.rowsNum){for(var colIndex=0;colIndex<numCols;colIndex++){cell=this.cloneCell(sourceCell,true);this.setCellContent(cell);cell.getAttribute("vAlign")&&cell.setAttribute("vAlign",cell.getAttribute("vAlign"));row.appendChild(cell);if(!isInsertTitle)replaceTdToTh(colIndex,cell,row);}if(isInsertTitle){thead=table.createTHead();thead.insertBefore(row,thead.firstChild);}}else{var infoRow=this.indexTable[rowIndex],cellIndex=0;for(colIndex=0;colIndex<numCols;colIndex++){var cellInfo=infoRow[colIndex];//如果存在某个单元格的rowspan穿过待插入行的位置，则修改该单元格的rowspan即可，无需插入单元格\nif(cellInfo.rowIndex<rowIndex){cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);cell.rowSpan=cellInfo.rowSpan+1;}else{cell=this.cloneCell(sourceCell,true);this.setCellContent(cell);row.appendChild(cell);}if(!isInsertTitle)replaceTdToTh(colIndex,cell,row);}}//框选时插入不触发contentchange，需要手动更新索引。\nthis.update();return row;},/**\n         * 删除一行单元格\n         * @param rowIndex\n         */deleteRow:function deleteRow(rowIndex){var row=this.table.rows[rowIndex],infoRow=this.indexTable[rowIndex],colsNum=this.colsNum,count=0;//处理计数\nfor(var colIndex=0;colIndex<colsNum;){var cellInfo=infoRow[colIndex],cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);if(cell.rowSpan>1){if(cellInfo.rowIndex==rowIndex){var clone=cell.cloneNode(true);clone.rowSpan=cell.rowSpan-1;clone.innerHTML="";cell.rowSpan=1;var nextRowIndex=rowIndex+1,nextRow=this.table.rows[nextRowIndex],insertCellIndex,preMerged=this.getPreviewMergedCellsNum(nextRowIndex,colIndex)-count;if(preMerged<colIndex){insertCellIndex=colIndex-preMerged-1;//nextRow.insertCell(insertCellIndex);\ndomUtils.insertAfter(nextRow.cells[insertCellIndex],clone);}else{if(nextRow.cells.length)nextRow.insertBefore(clone,nextRow.cells[0]);}count+=1;//cell.parentNode.removeChild(cell);\n}}colIndex+=cell.colSpan||1;}var deleteTds=[],cacheMap={};for(colIndex=0;colIndex<colsNum;colIndex++){var tmpRowIndex=infoRow[colIndex].rowIndex,tmpCellIndex=infoRow[colIndex].cellIndex,key=tmpRowIndex+"_"+tmpCellIndex;if(cacheMap[key])continue;cacheMap[key]=1;cell=this.getCell(tmpRowIndex,tmpCellIndex);deleteTds.push(cell);}var mergeTds=[];utils.each(deleteTds,function(td){if(td.rowSpan==1){td.parentNode.removeChild(td);}else{mergeTds.push(td);}});utils.each(mergeTds,function(td){td.rowSpan--;});row.parentNode.removeChild(row);//浏览器方法本身存在bug,采用自定义方法删除\n//this.table.deleteRow(rowIndex);\nthis.update();},insertCol:function insertCol(colIndex,sourceCell,defaultValue){var rowsNum=this.rowsNum,rowIndex=0,tableRow,cell,backWidth=parseInt((this.table.offsetWidth-(this.colsNum+1)*20-(this.colsNum+1))/(this.colsNum+1),10),isInsertTitleCol=typeof sourceCell=="string"&&sourceCell.toUpperCase()=="TH";function replaceTdToTh(rowIndex,cell,tableRow){if(rowIndex==0){var th=cell.nextSibling||cell.previousSibling;if(th.tagName=="TH"){th=cell.ownerDocument.createElement("th");th.appendChild(cell.firstChild);tableRow.insertBefore(th,cell);domUtils.remove(cell);}}else{if(cell.tagName=="TH"){var td=cell.ownerDocument.createElement("td");td.appendChild(cell.firstChild);tableRow.insertBefore(td,cell);domUtils.remove(cell);}}}var preCell;if(colIndex==0||colIndex==this.colsNum){for(;rowIndex<rowsNum;rowIndex++){tableRow=this.table.rows[rowIndex];preCell=tableRow.cells[colIndex==0?colIndex:tableRow.cells.length];cell=this.cloneCell(sourceCell,true);//tableRow.insertCell(colIndex == 0 ? colIndex : tableRow.cells.length);\nthis.setCellContent(cell);cell.setAttribute("vAlign",cell.getAttribute("vAlign"));preCell&&cell.setAttribute("width",preCell.getAttribute("width"));if(!colIndex){tableRow.insertBefore(cell,tableRow.cells[0]);}else{domUtils.insertAfter(tableRow.cells[tableRow.cells.length-1],cell);}if(!isInsertTitleCol)replaceTdToTh(rowIndex,cell,tableRow);}}else{for(;rowIndex<rowsNum;rowIndex++){var cellInfo=this.indexTable[rowIndex][colIndex];if(cellInfo.colIndex<colIndex){cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);cell.colSpan=cellInfo.colSpan+1;}else{tableRow=this.table.rows[rowIndex];preCell=tableRow.cells[cellInfo.cellIndex];cell=this.cloneCell(sourceCell,true);//tableRow.insertCell(cellInfo.cellIndex);\nthis.setCellContent(cell);cell.setAttribute("vAlign",cell.getAttribute("vAlign"));preCell&&cell.setAttribute("width",preCell.getAttribute("width"));//防止IE下报错\npreCell?tableRow.insertBefore(cell,preCell):tableRow.appendChild(cell);}if(!isInsertTitleCol)replaceTdToTh(rowIndex,cell,tableRow);}}//框选时插入不触发contentchange，需要手动更新索引\nthis.update();this.updateWidth(backWidth,defaultValue||{tdPadding:10,tdBorder:1});},updateWidth:function updateWidth(width,defaultValue){var table=this.table,tmpWidth=UETable.getWidth(table)-defaultValue.tdPadding*2-defaultValue.tdBorder+width;if(tmpWidth<table.ownerDocument.body.offsetWidth){table.setAttribute("width",tmpWidth);return;}var tds=domUtils.getElementsByTagName(this.table,"td th");utils.each(tds,function(td){td.setAttribute("width",width);});},deleteCol:function deleteCol(colIndex){var indexTable=this.indexTable,tableRows=this.table.rows,backTableWidth=this.table.getAttribute("width"),backTdWidth=0,rowsNum=this.rowsNum,cacheMap={};for(var rowIndex=0;rowIndex<rowsNum;){var infoRow=indexTable[rowIndex],cellInfo=infoRow[colIndex],key=cellInfo.rowIndex+"_"+cellInfo.colIndex;// 跳过已经处理过的Cell\nif(cacheMap[key])continue;cacheMap[key]=1;var cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);if(!backTdWidth)backTdWidth=cell&&parseInt(cell.offsetWidth/cell.colSpan,10).toFixed(0);// 如果Cell的colSpan大于1, 就修改colSpan, 否则就删掉这个Cell\nif(cell.colSpan>1){cell.colSpan--;}else{tableRows[rowIndex].deleteCell(cellInfo.cellIndex);}rowIndex+=cellInfo.rowSpan||1;}this.table.setAttribute("width",backTableWidth-backTdWidth);this.update();},splitToCells:function splitToCells(cell){var me=this,cells=this.splitToRows(cell);utils.each(cells,function(cell){me.splitToCols(cell);});},splitToRows:function splitToRows(cell){var cellInfo=this.getCellInfo(cell),rowIndex=cellInfo.rowIndex,colIndex=cellInfo.colIndex,results=[];// 修改Cell的rowSpan\ncell.rowSpan=1;results.push(cell);// 补齐单元格\nfor(var i=rowIndex,endRow=rowIndex+cellInfo.rowSpan;i<endRow;i++){if(i==rowIndex)continue;var tableRow=this.table.rows[i],tmpCell=tableRow.insertCell(colIndex-this.getPreviewMergedCellsNum(i,colIndex));tmpCell.colSpan=cellInfo.colSpan;this.setCellContent(tmpCell);tmpCell.setAttribute("vAlign",cell.getAttribute("vAlign"));tmpCell.setAttribute("align",cell.getAttribute("align"));if(cell.style.cssText){tmpCell.style.cssText=cell.style.cssText;}results.push(tmpCell);}this.update();return results;},getPreviewMergedCellsNum:function getPreviewMergedCellsNum(rowIndex,colIndex){var indexRow=this.indexTable[rowIndex],num=0;for(var i=0;i<colIndex;){var colSpan=indexRow[i].colSpan,tmpRowIndex=indexRow[i].rowIndex;num+=colSpan-(tmpRowIndex==rowIndex?1:0);i+=colSpan;}return num;},splitToCols:function splitToCols(cell){var backWidth=(cell.offsetWidth/cell.colSpan-22).toFixed(0),cellInfo=this.getCellInfo(cell),rowIndex=cellInfo.rowIndex,colIndex=cellInfo.colIndex,results=[];// 修改Cell的rowSpan\ncell.colSpan=1;cell.setAttribute("width",backWidth);results.push(cell);// 补齐单元格\nfor(var j=colIndex,endCol=colIndex+cellInfo.colSpan;j<endCol;j++){if(j==colIndex)continue;var tableRow=this.table.rows[rowIndex],tmpCell=tableRow.insertCell(this.indexTable[rowIndex][j].cellIndex+1);tmpCell.rowSpan=cellInfo.rowSpan;this.setCellContent(tmpCell);tmpCell.setAttribute("vAlign",cell.getAttribute("vAlign"));tmpCell.setAttribute("align",cell.getAttribute("align"));tmpCell.setAttribute("width",backWidth);if(cell.style.cssText){tmpCell.style.cssText=cell.style.cssText;}//处理th的情况\nif(cell.tagName=="TH"){var th=cell.ownerDocument.createElement("th");th.appendChild(tmpCell.firstChild);th.setAttribute("vAlign",cell.getAttribute("vAlign"));th.rowSpan=tmpCell.rowSpan;tableRow.insertBefore(th,tmpCell);domUtils.remove(tmpCell);}results.push(tmpCell);}this.update();return results;},isLastCell:function isLastCell(cell,rowsNum,colsNum){rowsNum=rowsNum||this.rowsNum;colsNum=colsNum||this.colsNum;var cellInfo=this.getCellInfo(cell);return cellInfo.rowIndex+cellInfo.rowSpan==rowsNum&&cellInfo.colIndex+cellInfo.colSpan==colsNum;},getLastCell:function getLastCell(cells){cells=cells||this.table.getElementsByTagName("td");var firstInfo=this.getCellInfo(cells[0]);var me=this,last=cells[0],tr=last.parentNode,cellsNum=0,cols=0,rows;utils.each(cells,function(cell){if(cell.parentNode==tr)cols+=cell.colSpan||1;cellsNum+=cell.rowSpan*cell.colSpan||1;});rows=cellsNum/cols;utils.each(cells,function(cell){if(me.isLastCell(cell,rows,cols)){last=cell;return false;}});return last;},selectRow:function selectRow(rowIndex){var indexRow=this.indexTable[rowIndex],start=this.getCell(indexRow[0].rowIndex,indexRow[0].cellIndex),end=this.getCell(indexRow[this.colsNum-1].rowIndex,indexRow[this.colsNum-1].cellIndex),range=this.getCellsRange(start,end);this.setSelected(range);},selectTable:function selectTable(){var tds=this.table.getElementsByTagName("td"),range=this.getCellsRange(tds[0],tds[tds.length-1]);this.setSelected(range);},setBackground:function setBackground(cells,value){if(typeof value==="string"){utils.each(cells,function(cell){cell.style.backgroundColor=value;});}else if((typeof value===\'undefined\'?\'undefined\':_typeof(value))==="object"){value=utils.extend({repeat:true,colorList:["#ddd","#fff"]},value);var rowIndex=this.getCellInfo(cells[0]).rowIndex,count=0,colors=value.colorList,getColor=function getColor(list,index,repeat){return list[index]?list[index]:repeat?list[index%list.length]:"";};for(var i=0,cell;cell=cells[i++];){var cellInfo=this.getCellInfo(cell);cell.style.backgroundColor=getColor(colors,rowIndex+count==cellInfo.rowIndex?count:++count,value.repeat);}}},removeBackground:function removeBackground(cells){utils.each(cells,function(cell){cell.style.backgroundColor="";});}};function showError(e){}})();// plugins/table.cmds.js\n/**\n * Created with JetBrains PhpStorm.\n * User: taoqili\n * Date: 13-2-20\n * Time: 下午6:25\n * To change this template use File | Settings | File Templates.\n */(function(){var UT=UE.UETable,getTableItemsByRange=function getTableItemsByRange(editor){return UT.getTableItemsByRange(editor);},getUETableBySelected=function getUETableBySelected(editor){return UT.getUETableBySelected(editor);},getDefaultValue=function getDefaultValue(editor,table){return UT.getDefaultValue(editor,table);},getUETable=function getUETable(tdOrTable){return UT.getUETable(tdOrTable);};UE.commands["inserttable"]={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?-1:0;},execCommand:function execCommand(cmd,opt){function createTable(opt,tdWidth){var html=[],rowsNum=opt.numRows,colsNum=opt.numCols;for(var r=0;r<rowsNum;r++){html.push("<tr"+(r==0?\' class="firstRow"\':"")+">");for(var c=0;c<colsNum;c++){html.push(\'<td width="\'+tdWidth+\'"  vAlign="\'+opt.tdvalign+\'" >\'+(browser.ie&&browser.version<11?domUtils.fillChar:"<br/>")+"</td>");}html.push("</tr>");}//禁止指定table-width\nreturn"<table><tbody>"+html.join("")+"</tbody></table>";}if(!opt){opt=utils.extend({},{numCols:this.options.defaultCols,numRows:this.options.defaultRows,tdvalign:this.options.tdvalign});}var me=this;var range=this.selection.getRange(),start=range.startContainer,firstParentBlock=domUtils.findParent(start,function(node){return domUtils.isBlockElm(node);},true)||me.body;var defaultValue=getDefaultValue(me),tableWidth=firstParentBlock.offsetWidth,tdWidth=Math.floor(tableWidth/opt.numCols-defaultValue.tdPadding*2-defaultValue.tdBorder);//todo其他属性\n!opt.tdvalign&&(opt.tdvalign=me.options.tdvalign);me.execCommand("inserthtml",createTable(opt,tdWidth));}};UE.commands["insertparagraphbeforetable"]={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).cell?0:-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){var p=this.document.createElement("p");p.innerHTML=browser.ie?"&nbsp;":"<br />";table.parentNode.insertBefore(p,table);this.selection.getRange().setStart(p,0).setCursor();}}};UE.commands["deletetable"]={queryCommandState:function queryCommandState(){var rng=this.selection.getRange();return domUtils.findParentByTagName(rng.startContainer,"table",true)?0:-1;},execCommand:function execCommand(cmd,table){var rng=this.selection.getRange();table=table||domUtils.findParentByTagName(rng.startContainer,"table",true);if(table){var next=table.nextSibling;if(!next){next=domUtils.createElement(this.document,"p",{innerHTML:browser.ie?domUtils.fillChar:"<br/>"});table.parentNode.insertBefore(next,table);}domUtils.remove(table);rng=this.selection.getRange();if(next.nodeType==3){rng.setStartBefore(next);}else{rng.setStart(next,0);}rng.setCursor(false,true);this.fireEvent("tablehasdeleted");}}};UE.commands["cellalign"]={queryCommandState:function queryCommandState(){return getSelectedArr(this).length?0:-1;},execCommand:function execCommand(cmd,align){var selectedTds=getSelectedArr(this);if(selectedTds.length){for(var i=0,ci;ci=selectedTds[i++];){ci.setAttribute("align",align);}}}};UE.commands["cellvalign"]={queryCommandState:function queryCommandState(){return getSelectedArr(this).length?0:-1;},execCommand:function execCommand(cmd,valign){var selectedTds=getSelectedArr(this);if(selectedTds.length){for(var i=0,ci;ci=selectedTds[i++];){ci.setAttribute("vAlign",valign);}}}};UE.commands["insertcaption"]={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){return table.getElementsByTagName("caption").length==0?1:-1;}return-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){var caption=this.document.createElement("caption");caption.innerHTML=browser.ie?domUtils.fillChar:"<br/>";table.insertBefore(caption,table.firstChild);var range=this.selection.getRange();range.setStart(caption,0).setCursor();}}};UE.commands["deletecaption"]={queryCommandState:function queryCommandState(){var rng=this.selection.getRange(),table=domUtils.findParentByTagName(rng.startContainer,"table");if(table){return table.getElementsByTagName("caption").length==0?-1:1;}return-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),table=domUtils.findParentByTagName(rng.startContainer,"table");if(table){domUtils.remove(table.getElementsByTagName("caption")[0]);var range=this.selection.getRange();range.setStart(table.rows[0].cells[0],0).setCursor();}}};UE.commands["inserttitle"]={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var firstRow=table.rows[0];return firstRow.cells[firstRow.cells.length-1].tagName.toLowerCase()!="th"?0:-1;}return-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){getUETable(table).insertRow(0,"th");}var th=table.getElementsByTagName("th")[0];this.selection.getRange().setStart(th,0).setCursor(false,true);}};UE.commands["deletetitle"]={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var firstRow=table.rows[0];return firstRow.cells[firstRow.cells.length-1].tagName.toLowerCase()=="th"?0:-1;}return-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){domUtils.remove(table.rows[0]);}var td=table.getElementsByTagName("td")[0];this.selection.getRange().setStart(td,0).setCursor(false,true);}};UE.commands["inserttitlecol"]={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var lastRow=table.rows[table.rows.length-1];return lastRow.getElementsByTagName("th").length?-1:0;}return-1;},execCommand:function execCommand(cmd){var table=getTableItemsByRange(this).table;if(table){getUETable(table).insertCol(0,"th");}resetTdWidth(table,this);var th=table.getElementsByTagName("th")[0];this.selection.getRange().setStart(th,0).setCursor(false,true);}};UE.commands["deletetitlecol"]={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var lastRow=table.rows[table.rows.length-1];return lastRow.getElementsByTagName("th").length?0:-1;}return-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){for(var i=0;i<table.rows.length;i++){domUtils.remove(table.rows[i].children[0]);}}resetTdWidth(table,this);var td=table.getElementsByTagName("td")[0];this.selection.getRange().setStart(td,0).setCursor(false,true);}};UE.commands["mergeright"]={queryCommandState:function queryCommandState(cmd){var tableItems=getTableItemsByRange(this),table=tableItems.table,cell=tableItems.cell;if(!table||!cell)return-1;var ut=getUETable(table);if(ut.selectedTds.length)return-1;var cellInfo=ut.getCellInfo(cell),rightColIndex=cellInfo.colIndex+cellInfo.colSpan;if(rightColIndex>=ut.colsNum)return-1;// 如果处于最右边则不能向右合并\nvar rightCellInfo=ut.indexTable[cellInfo.rowIndex][rightColIndex],rightCell=table.rows[rightCellInfo.rowIndex].cells[rightCellInfo.cellIndex];if(!rightCell||cell.tagName!=rightCell.tagName)return-1;// TH和TD不能相互合并\n// 当且仅当两个Cell的开始列号和结束列号一致时能进行合并\nreturn rightCellInfo.rowIndex==cellInfo.rowIndex&&rightCellInfo.rowSpan==cellInfo.rowSpan?0:-1;},execCommand:function execCommand(cmd){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.mergeRight(cell);rng.moveToBookmark(bk).select();}};UE.commands["mergedown"]={queryCommandState:function queryCommandState(cmd){var tableItems=getTableItemsByRange(this),table=tableItems.table,cell=tableItems.cell;if(!table||!cell)return-1;var ut=getUETable(table);if(ut.selectedTds.length)return-1;var cellInfo=ut.getCellInfo(cell),downRowIndex=cellInfo.rowIndex+cellInfo.rowSpan;if(downRowIndex>=ut.rowsNum)return-1;// 如果处于最下边则不能向下合并\nvar downCellInfo=ut.indexTable[downRowIndex][cellInfo.colIndex],downCell=table.rows[downCellInfo.rowIndex].cells[downCellInfo.cellIndex];if(!downCell||cell.tagName!=downCell.tagName)return-1;// TH和TD不能相互合并\n// 当且仅当两个Cell的开始列号和结束列号一致时能进行合并\nreturn downCellInfo.colIndex==cellInfo.colIndex&&downCellInfo.colSpan==cellInfo.colSpan?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.mergeDown(cell);rng.moveToBookmark(bk).select();}};UE.commands["mergecells"]={queryCommandState:function queryCommandState(){return getUETableBySelected(this)?0:-1;},execCommand:function execCommand(){var ut=getUETableBySelected(this);if(ut&&ut.selectedTds.length){var cell=ut.selectedTds[0];ut.mergeRange();var rng=this.selection.getRange();if(domUtils.isEmptyBlock(cell)){rng.setStart(cell,0).collapse(true);}else{rng.selectNodeContents(cell);}rng.select();}}};UE.commands["insertrow"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&(cell.tagName=="TD"||cell.tagName=="TH"&&tableItems.tr!==tableItems.table.rows[0])&&getUETable(tableItems.table).rowsNum<this.options.maxRowNum?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var tableItems=getTableItemsByRange(this),cell=tableItems.cell,table=tableItems.table,ut=getUETable(table),cellInfo=ut.getCellInfo(cell);//ut.insertRow(!ut.selectedTds.length ? cellInfo.rowIndex:ut.cellsRange.beginRowIndex,\'\');\nif(!ut.selectedTds.length){ut.insertRow(cellInfo.rowIndex,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endRowIndex-range.beginRowIndex+1;i<len;i++){ut.insertRow(range.beginRowIndex,cell);}}rng.moveToBookmark(bk).select();if(table.getAttribute("interlaced")==="enabled")this.fireEvent("interlacetable",table);}};//后插入行\nUE.commands["insertrownext"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&cell.tagName=="TD"&&getUETable(tableItems.table).rowsNum<this.options.maxRowNum?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var tableItems=getTableItemsByRange(this),cell=tableItems.cell,table=tableItems.table,ut=getUETable(table),cellInfo=ut.getCellInfo(cell);//ut.insertRow(!ut.selectedTds.length? cellInfo.rowIndex + cellInfo.rowSpan : ut.cellsRange.endRowIndex + 1,\'\');\nif(!ut.selectedTds.length){ut.insertRow(cellInfo.rowIndex+cellInfo.rowSpan,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endRowIndex-range.beginRowIndex+1;i<len;i++){ut.insertRow(range.endRowIndex+1,cell);}}rng.moveToBookmark(bk).select();if(table.getAttribute("interlaced")==="enabled")this.fireEvent("interlacetable",table);}};UE.commands["deleterow"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this);return tableItems.cell?0:-1;},execCommand:function execCommand(){var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),cellsRange=ut.cellsRange,cellInfo=ut.getCellInfo(cell),preCell=ut.getVSideCell(cell),nextCell=ut.getVSideCell(cell,true),rng=this.selection.getRange();if(utils.isEmptyObject(cellsRange)){ut.deleteRow(cellInfo.rowIndex);}else{for(var i=cellsRange.beginRowIndex;i<cellsRange.endRowIndex+1;i++){ut.deleteRow(cellsRange.beginRowIndex);}}var table=ut.table;if(!table.getElementsByTagName("td").length){var nextSibling=table.nextSibling;domUtils.remove(table);if(nextSibling){rng.setStart(nextSibling,0).setCursor(false,true);}}else{if(cellInfo.rowSpan==1||cellInfo.rowSpan==cellsRange.endRowIndex-cellsRange.beginRowIndex+1){if(nextCell||preCell)rng.selectNodeContents(nextCell||preCell).setCursor(false,true);}else{var newCell=ut.getCell(cellInfo.rowIndex,ut.indexTable[cellInfo.rowIndex][cellInfo.colIndex].cellIndex);if(newCell)rng.selectNodeContents(newCell).setCursor(false,true);}}if(table.getAttribute("interlaced")==="enabled")this.fireEvent("interlacetable",table);}};UE.commands["insertcol"]={queryCommandState:function queryCommandState(cmd){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&(cell.tagName=="TD"||cell.tagName=="TH"&&cell!==tableItems.tr.cells[0])&&getUETable(tableItems.table).colsNum<this.options.maxColNum?0:-1;},execCommand:function execCommand(cmd){var rng=this.selection.getRange(),bk=rng.createBookmark(true);if(this.queryCommandState(cmd)==-1)return;var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),cellInfo=ut.getCellInfo(cell);//ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex:ut.cellsRange.beginColIndex);\nif(!ut.selectedTds.length){ut.insertCol(cellInfo.colIndex,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endColIndex-range.beginColIndex+1;i<len;i++){ut.insertCol(range.beginColIndex,cell);}}rng.moveToBookmark(bk).select(true);}};UE.commands["insertcolnext"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&getUETable(tableItems.table).colsNum<this.options.maxColNum?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),cellInfo=ut.getCellInfo(cell);//ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex + cellInfo.colSpan:ut.cellsRange.endColIndex +1);\nif(!ut.selectedTds.length){ut.insertCol(cellInfo.colIndex+cellInfo.colSpan,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endColIndex-range.beginColIndex+1;i<len;i++){ut.insertCol(range.endColIndex+1,cell);}}rng.moveToBookmark(bk).select();}};UE.commands["deletecol"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this);return tableItems.cell?0:-1;},execCommand:function execCommand(){var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),range=ut.cellsRange,cellInfo=ut.getCellInfo(cell),preCell=ut.getHSideCell(cell),nextCell=ut.getHSideCell(cell,true);if(utils.isEmptyObject(range)){ut.deleteCol(cellInfo.colIndex);}else{for(var i=range.beginColIndex;i<range.endColIndex+1;i++){ut.deleteCol(range.beginColIndex);}}var table=ut.table,rng=this.selection.getRange();if(!table.getElementsByTagName("td").length){var nextSibling=table.nextSibling;domUtils.remove(table);if(nextSibling){rng.setStart(nextSibling,0).setCursor(false,true);}}else{if(domUtils.inDoc(cell,this.document)){rng.setStart(cell,0).setCursor(false,true);}else{if(nextCell&&domUtils.inDoc(nextCell,this.document)){rng.selectNodeContents(nextCell).setCursor(false,true);}else{if(preCell&&domUtils.inDoc(preCell,this.document)){rng.selectNodeContents(preCell).setCursor(true,true);}}}}}};UE.commands["splittocells"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;if(!cell)return-1;var ut=getUETable(tableItems.table);if(ut.selectedTds.length>0)return-1;return cell&&(cell.colSpan>1||cell.rowSpan>1)?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.splitToCells(cell);rng.moveToBookmark(bk).select();}};UE.commands["splittorows"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;if(!cell)return-1;var ut=getUETable(tableItems.table);if(ut.selectedTds.length>0)return-1;return cell&&cell.rowSpan>1?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.splitToRows(cell);rng.moveToBookmark(bk).select();}};UE.commands["splittocols"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;if(!cell)return-1;var ut=getUETable(tableItems.table);if(ut.selectedTds.length>0)return-1;return cell&&cell.colSpan>1?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.splitToCols(cell);rng.moveToBookmark(bk).select();}};UE.commands["adaptbytext"]=UE.commands["adaptbywindow"]={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd){var tableItems=getTableItemsByRange(this),table=tableItems.table;if(table){if(cmd=="adaptbywindow"){resetTdWidth(table,this);}else{var cells=domUtils.getElementsByTagName(table,"td th");utils.each(cells,function(cell){cell.removeAttribute("width");});table.removeAttribute("width");}}}};//平均分配各列\nUE.commands["averagedistributecol"]={queryCommandState:function queryCommandState(){var ut=getUETableBySelected(this);if(!ut)return-1;return ut.isFullRow()||ut.isFullCol()?0:-1;},execCommand:function execCommand(cmd){var me=this,ut=getUETableBySelected(me);function getAverageWidth(){var tb=ut.table,averageWidth,sumWidth=0,colsNum=0,tbAttr=getDefaultValue(me,tb);if(ut.isFullRow()){sumWidth=tb.offsetWidth;colsNum=ut.colsNum;}else{var begin=ut.cellsRange.beginColIndex,end=ut.cellsRange.endColIndex,node;for(var i=begin;i<=end;){node=ut.selectedTds[i];sumWidth+=node.offsetWidth;i+=node.colSpan;colsNum+=1;}}averageWidth=Math.ceil(sumWidth/colsNum)-tbAttr.tdBorder*2-tbAttr.tdPadding*2;return averageWidth;}function setAverageWidth(averageWidth){utils.each(domUtils.getElementsByTagName(ut.table,"th"),function(node){node.setAttribute("width","");});var cells=ut.isFullRow()?domUtils.getElementsByTagName(ut.table,"td"):ut.selectedTds;utils.each(cells,function(node){if(node.colSpan==1){node.setAttribute("width",averageWidth);}});}if(ut&&ut.selectedTds.length){setAverageWidth(getAverageWidth());}}};//平均分配各行\nUE.commands["averagedistributerow"]={queryCommandState:function queryCommandState(){var ut=getUETableBySelected(this);if(!ut)return-1;if(ut.selectedTds&&/th/gi.test(ut.selectedTds[0].tagName))return-1;return ut.isFullRow()||ut.isFullCol()?0:-1;},execCommand:function execCommand(cmd){var me=this,ut=getUETableBySelected(me);function getAverageHeight(){var averageHeight,rowNum,sumHeight=0,tb=ut.table,tbAttr=getDefaultValue(me,tb),tdpadding=parseInt(domUtils.getComputedStyle(tb.getElementsByTagName("td")[0],"padding-top"));if(ut.isFullCol()){var captionArr=domUtils.getElementsByTagName(tb,"caption"),thArr=domUtils.getElementsByTagName(tb,"th"),captionHeight,thHeight;if(captionArr.length>0){captionHeight=captionArr[0].offsetHeight;}if(thArr.length>0){thHeight=thArr[0].offsetHeight;}sumHeight=tb.offsetHeight-(captionHeight||0)-(thHeight||0);rowNum=thArr.length==0?ut.rowsNum:ut.rowsNum-1;}else{var begin=ut.cellsRange.beginRowIndex,end=ut.cellsRange.endRowIndex,count=0,trs=domUtils.getElementsByTagName(tb,"tr");for(var i=begin;i<=end;i++){sumHeight+=trs[i].offsetHeight;count+=1;}rowNum=count;}//ie8下是混杂模式\nif(browser.ie&&browser.version<9){averageHeight=Math.ceil(sumHeight/rowNum);}else{averageHeight=Math.ceil(sumHeight/rowNum)-tbAttr.tdBorder*2-tdpadding*2;}return averageHeight;}function setAverageHeight(averageHeight){var cells=ut.isFullCol()?domUtils.getElementsByTagName(ut.table,"td"):ut.selectedTds;utils.each(cells,function(node){if(node.rowSpan==1){node.setAttribute("height",averageHeight);}});}if(ut&&ut.selectedTds.length){setAverageHeight(getAverageHeight());}}};//单元格对齐方式\nUE.commands["cellalignment"]={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,data){var me=this,ut=getUETableBySelected(me);if(!ut){var start=me.selection.getStart(),cell=start&&domUtils.findParentByTagName(start,["td","th","caption"],true);if(!/caption/gi.test(cell.tagName)){domUtils.setAttributes(cell,data);}else{cell.style.textAlign=data.align;cell.style.verticalAlign=data.vAlign;}me.selection.getRange().setCursor(true);}else{utils.each(ut.selectedTds,function(cell){domUtils.setAttributes(cell,data);});}},/**\n         * 查询当前点击的单元格的对齐状态， 如果当前已经选择了多个单元格， 则会返回所有单元格经过统一协调过后的状态\n         * @see UE.UETable.getTableCellAlignState\n         */queryCommandValue:function queryCommandValue(cmd){var activeMenuCell=getTableItemsByRange(this).cell;if(!activeMenuCell){activeMenuCell=getSelectedArr(this)[0];}if(!activeMenuCell){return null;}else{//获取同时选中的其他单元格\nvar cells=UE.UETable.getUETable(activeMenuCell).selectedTds;!cells.length&&(cells=activeMenuCell);return UE.UETable.getTableCellAlignState(cells);}}};//表格对齐方式\nUE.commands["tablealignment"]={queryCommandState:function queryCommandState(){if(browser.ie&&browser.version<8){return-1;}return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,value){var me=this,start=me.selection.getStart(),table=start&&domUtils.findParentByTagName(start,["table"],true);if(table){table.setAttribute("align",value);}}};//表格属性\nUE.commands["edittable"]={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,color){var rng=this.selection.getRange(),table=domUtils.findParentByTagName(rng.startContainer,"table");if(table){var arr=domUtils.getElementsByTagName(table,"td").concat(domUtils.getElementsByTagName(table,"th"),domUtils.getElementsByTagName(table,"caption"));utils.each(arr,function(node){node.style.borderColor=color;});}}};//单元格属性\nUE.commands["edittd"]={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,bkColor){var me=this,ut=getUETableBySelected(me);if(!ut){var start=me.selection.getStart(),cell=start&&domUtils.findParentByTagName(start,["td","th","caption"],true);if(cell){cell.style.backgroundColor=bkColor;}}else{utils.each(ut.selectedTds,function(cell){cell.style.backgroundColor=bkColor;});}}};UE.commands["settablebackground"]={queryCommandState:function queryCommandState(){return getSelectedArr(this).length>1?0:-1;},execCommand:function execCommand(cmd,value){var cells,ut;cells=getSelectedArr(this);ut=getUETable(cells[0]);ut.setBackground(cells,value);}};UE.commands["cleartablebackground"]={queryCommandState:function queryCommandState(){var cells=getSelectedArr(this);if(!cells.length)return-1;for(var i=0,cell;cell=cells[i++];){if(cell.style.backgroundColor!=="")return 0;}return-1;},execCommand:function execCommand(){var cells=getSelectedArr(this),ut=getUETable(cells[0]);ut.removeBackground(cells);}};UE.commands["interlacetable"]=UE.commands["uninterlacetable"]={queryCommandState:function queryCommandState(cmd){var table=getTableItemsByRange(this).table;if(!table)return-1;var interlaced=table.getAttribute("interlaced");if(cmd=="interlacetable"){//TODO 待定\n//是否需要待定，如果设置，则命令只能单次执行成功，但反射具备toggle效果；否则可以覆盖前次命令，但反射将不存在toggle效果\nreturn interlaced==="enabled"?-1:0;}else{return!interlaced||interlaced==="disabled"?-1:0;}},execCommand:function execCommand(cmd,classList){var table=getTableItemsByRange(this).table;if(cmd=="interlacetable"){table.setAttribute("interlaced","enabled");this.fireEvent("interlacetable",table,classList);}else{table.setAttribute("interlaced","disabled");this.fireEvent("uninterlacetable",table);}}};UE.commands["setbordervisible"]={queryCommandState:function queryCommandState(cmd){var table=getTableItemsByRange(this).table;if(!table)return-1;return 0;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;utils.each(domUtils.getElementsByTagName(table,"td"),function(td){td.style.borderWidth="1px";td.style.borderStyle="solid";});}};function resetTdWidth(table,editor){var tds=domUtils.getElementsByTagName(table,"td th");utils.each(tds,function(td){td.removeAttribute("width");});table.setAttribute("width",getTableWidth(editor,true,getDefaultValue(editor,table)));var tdsWidths=[];setTimeout(function(){utils.each(tds,function(td){td.colSpan==1&&tdsWidths.push(td.offsetWidth);});utils.each(tds,function(td,i){td.colSpan==1&&td.setAttribute("width",tdsWidths[i]+"");});},0);}function getTableWidth(editor,needIEHack,defaultValue){var body=editor.body;return body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(body,"margin-left"),10)*2:0)-defaultValue.tableBorder*2-(editor.options.offsetWidth||0);}function getSelectedArr(editor){var cell=getTableItemsByRange(editor).cell;if(cell){var ut=getUETable(cell);return ut.selectedTds.length?ut.selectedTds:[cell];}else{return[];}}})();// plugins/table.action.js\n/**\n * Created with JetBrains PhpStorm.\n * User: taoqili\n * Date: 12-10-12\n * Time: 上午10:05\n * To change this template use File | Settings | File Templates.\n */UE.plugins["table"]=function(){var me=this,tabTimer=null,//拖动计时器\ntableDragTimer=null,//双击计时器\ntableResizeTimer=null,//单元格最小宽度\ncellMinWidth=5,isInResizeBuffer=false,//单元格边框大小\ncellBorderWidth=5,//鼠标偏移距离\noffsetOfTableCell=10,//记录在有限时间内的点击状态， 共有3个取值， 0, 1, 2。 0代表未初始化， 1代表单击了1次，2代表2次\nsingleClickState=0,userActionStatus=null,//双击允许的时间范围\ndblclickTime=360,UT=UE.UETable,getUETable=function getUETable(tdOrTable){return UT.getUETable(tdOrTable);},getUETableBySelected=function getUETableBySelected(editor){return UT.getUETableBySelected(editor);},getDefaultValue=function getDefaultValue(editor,table){return UT.getDefaultValue(editor,table);},removeSelectedClass=function removeSelectedClass(cells){return UT.removeSelectedClass(cells);};function showError(e){//        throw e;\n}me.ready(function(){var me=this;var orgGetText=me.selection.getText;me.selection.getText=function(){var table=getUETableBySelected(me);if(table){var str="";utils.each(table.selectedTds,function(td){str+=td[browser.ie?"innerText":"textContent"];});return str;}else{return orgGetText.call(me.selection);}};});//处理拖动及框选相关方法\nvar startTd=null,//鼠标按下时的锚点td\ncurrentTd=null,//当前鼠标经过时的td\nonDrag="",//指示当前拖动状态，其值可为"","h","v" ,分别表示未拖动状态，横向拖动状态，纵向拖动状态，用于鼠标移动过程中的判断\nonBorder=false,//检测鼠标按下时是否处在单元格边缘位置\ndragButton=null,dragOver=false,dragLine=null,//模拟的拖动线\ndragTd=null;//发生拖动的目标td\nvar mousedown=false,//todo 判断混乱模式\nneedIEHack=true;me.setOpt({maxColNum:20,maxRowNum:100,defaultCols:5,defaultRows:5,tdvalign:"top",cursorpath:me.options.UEDITOR_HOME_URL+"themes/default/images/cursor_",tableDragable:false,classList:["ue-table-interlace-color-single","ue-table-interlace-color-double"]});me.getUETable=getUETable;var commands={deletetable:1,inserttable:1,cellvalign:1,insertcaption:1,deletecaption:1,inserttitle:1,deletetitle:1,mergeright:1,mergedown:1,mergecells:1,insertrow:1,insertrownext:1,deleterow:1,insertcol:1,insertcolnext:1,deletecol:1,splittocells:1,splittorows:1,splittocols:1,adaptbytext:1,adaptbywindow:1,adaptbycustomer:1,insertparagraph:1,insertparagraphbeforetable:1,averagedistributecol:1,averagedistributerow:1};me.ready(function(){utils.cssRule("table",//选中的td上的样式\n".selectTdClass{background-color:#edf5fa !important}"+"table.noBorderTable td,table.noBorderTable th,table.noBorderTable caption{border:1px dashed #ddd !important}"+//插入的表格的默认样式\n"table{margin-bottom:10px;border-collapse:collapse;display:table;}"+"td,th{padding: 5px 10px;border: 1px solid #DDD;}"+"caption{border:1px dashed #DDD;border-bottom:0;padding:3px;text-align:center;}"+"th{border-top:1px solid #BBB;background-color:#F7F7F7;}"+"table tr.firstRow th{border-top-width:2px;}"+".ue-table-interlace-color-single{ background-color: #fcfcfc; } .ue-table-interlace-color-double{ background-color: #f7faff; }"+"td p{margin:0;padding:0;}",me.document);var tableCopyList,isFullCol,isFullRow;//注册del/backspace事件\nme.addListener("keydown",function(cmd,evt){var me=this;var keyCode=evt.keyCode||evt.which;if(keyCode==8){var ut=getUETableBySelected(me);if(ut&&ut.selectedTds.length){if(ut.isFullCol()){me.execCommand("deletecol");}else if(ut.isFullRow()){me.execCommand("deleterow");}else{me.fireEvent("delcells");}domUtils.preventDefault(evt);}var caption=domUtils.findParentByTagName(me.selection.getStart(),"caption",true),range=me.selection.getRange();if(range.collapsed&&caption&&isEmptyBlock(caption)){me.fireEvent("saveScene");var table=caption.parentNode;domUtils.remove(caption);if(table){range.setStart(table.rows[0].cells[0],0).setCursor(false,true);}me.fireEvent("saveScene");}}if(keyCode==46){ut=getUETableBySelected(me);if(ut){me.fireEvent("saveScene");for(var i=0,ci;ci=ut.selectedTds[i++];){domUtils.fillNode(me.document,ci);}me.fireEvent("saveScene");domUtils.preventDefault(evt);}}if(keyCode==13){var rng=me.selection.getRange(),caption=domUtils.findParentByTagName(rng.startContainer,"caption",true);if(caption){var table=domUtils.findParentByTagName(caption,"table");if(!rng.collapsed){rng.deleteContents();me.fireEvent("saveScene");}else{if(caption){rng.setStart(table.rows[0].cells[0],0).setCursor(false,true);}}domUtils.preventDefault(evt);return;}if(rng.collapsed){var table=domUtils.findParentByTagName(rng.startContainer,"table");if(table){var cell=table.rows[0].cells[0],start=domUtils.findParentByTagName(me.selection.getStart(),["td","th"],true),preNode=table.previousSibling;if(cell===start&&(!preNode||preNode.nodeType==1&&preNode.tagName=="TABLE")&&domUtils.isStartInblock(rng)){var first=domUtils.findParent(me.selection.getStart(),function(n){return domUtils.isBlockElm(n);},true);if(first&&(/t(h|d)/i.test(first.tagName)||first===start.firstChild)){me.execCommand("insertparagraphbeforetable");domUtils.preventDefault(evt);}}}}}if((evt.ctrlKey||evt.metaKey)&&evt.keyCode=="67"){tableCopyList=null;var ut=getUETableBySelected(me);if(ut){var tds=ut.selectedTds;isFullCol=ut.isFullCol();isFullRow=ut.isFullRow();tableCopyList=[[ut.cloneCell(tds[0],null,true)]];for(var i=1,ci;ci=tds[i];i++){if(ci.parentNode!==tds[i-1].parentNode){tableCopyList.push([ut.cloneCell(ci,null,true)]);}else{tableCopyList[tableCopyList.length-1].push(ut.cloneCell(ci,null,true));}}}}});me.addListener("tablehasdeleted",function(){toggleDraggableState(this,false,"",null);if(dragButton)domUtils.remove(dragButton);});me.addListener("beforepaste",function(cmd,html){var me=this;var rng=me.selection.getRange();if(domUtils.findParentByTagName(rng.startContainer,"caption",true)){var div=me.document.createElement("div");div.innerHTML=html.html;//trace:3729\nhtml.html=div[browser.ie9below?"innerText":"textContent"];return;}var table=getUETableBySelected(me);if(tableCopyList){me.fireEvent("saveScene");var rng=me.selection.getRange();var td=domUtils.findParentByTagName(rng.startContainer,["td","th"],true),tmpNode,preNode;if(td){var ut=getUETable(td);if(isFullRow){var rowIndex=ut.getCellInfo(td).rowIndex;if(td.tagName=="TH"){rowIndex++;}for(var i=0,ci;ci=tableCopyList[i++];){var tr=ut.insertRow(rowIndex++,"td");for(var j=0,cj;cj=ci[j];j++){var cell=tr.cells[j];if(!cell){cell=tr.insertCell(j);}cell.innerHTML=cj.innerHTML;cj.getAttribute("width")&&cell.setAttribute("width",cj.getAttribute("width"));cj.getAttribute("vAlign")&&cell.setAttribute("vAlign",cj.getAttribute("vAlign"));cj.getAttribute("align")&&cell.setAttribute("align",cj.getAttribute("align"));cj.style.cssText&&(cell.style.cssText=cj.style.cssText);}for(var j=0,cj;cj=tr.cells[j];j++){if(!ci[j])break;cj.innerHTML=ci[j].innerHTML;ci[j].getAttribute("width")&&cj.setAttribute("width",ci[j].getAttribute("width"));ci[j].getAttribute("vAlign")&&cj.setAttribute("vAlign",ci[j].getAttribute("vAlign"));ci[j].getAttribute("align")&&cj.setAttribute("align",ci[j].getAttribute("align"));ci[j].style.cssText&&(cj.style.cssText=ci[j].style.cssText);}}}else{if(isFullCol){cellInfo=ut.getCellInfo(td);var maxColNum=0;for(var j=0,ci=tableCopyList[0],cj;cj=ci[j++];){maxColNum+=cj.colSpan||1;}me.__hasEnterExecCommand=true;for(i=0;i<maxColNum;i++){me.execCommand("insertcol");}me.__hasEnterExecCommand=false;td=ut.table.rows[0].cells[cellInfo.cellIndex];if(td.tagName=="TH"){td=ut.table.rows[1].cells[cellInfo.cellIndex];}}for(var i=0,ci;ci=tableCopyList[i++];){tmpNode=td;for(var j=0,cj;cj=ci[j++];){if(td){td.innerHTML=cj.innerHTML;//todo 定制处理\ncj.getAttribute("width")&&td.setAttribute("width",cj.getAttribute("width"));cj.getAttribute("vAlign")&&td.setAttribute("vAlign",cj.getAttribute("vAlign"));cj.getAttribute("align")&&td.setAttribute("align",cj.getAttribute("align"));cj.style.cssText&&(td.style.cssText=cj.style.cssText);preNode=td;td=td.nextSibling;}else{var cloneTd=cj.cloneNode(true);domUtils.removeAttributes(cloneTd,["class","rowSpan","colSpan"]);preNode.parentNode.appendChild(cloneTd);}}td=ut.getNextCell(tmpNode,true,true);if(!tableCopyList[i])break;if(!td){var cellInfo=ut.getCellInfo(tmpNode);ut.table.insertRow(ut.table.rows.length);ut.update();td=ut.getVSideCell(tmpNode,true);}}}ut.update();}else{table=me.document.createElement("table");for(var i=0,ci;ci=tableCopyList[i++];){var tr=table.insertRow(table.rows.length);for(var j=0,cj;cj=ci[j++];){cloneTd=UT.cloneCell(cj,null,true);domUtils.removeAttributes(cloneTd,["class"]);tr.appendChild(cloneTd);}if(j==2&&cloneTd.rowSpan>1){cloneTd.rowSpan=1;}}var defaultValue=getDefaultValue(me),width=me.body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(me.body,"margin-left"),10)*2:0)-defaultValue.tableBorder*2-(me.options.offsetWidth||0);me.execCommand("insertHTML","<table  "+(isFullCol&&isFullRow?\'width="\'+width+\'"\':"")+">"+table.innerHTML.replace(/>\\s*</g,"><").replace(/\\bth\\b/gi,"td")+"</table>");}me.fireEvent("contentchange");me.fireEvent("saveScene");html.html="";return true;}else{var div=me.document.createElement("div"),tables;div.innerHTML=html.html;tables=div.getElementsByTagName("table");if(domUtils.findParentByTagName(me.selection.getStart(),"table")){utils.each(tables,function(t){domUtils.remove(t);});if(domUtils.findParentByTagName(me.selection.getStart(),"caption",true)){div.innerHTML=div[browser.ie?"innerText":"textContent"];}}else{utils.each(tables,function(table){removeStyleSize(table,true);domUtils.removeAttributes(table,["style","border"]);utils.each(domUtils.getElementsByTagName(table,"td"),function(td){if(isEmptyBlock(td)){domUtils.fillNode(me.document,td);}removeStyleSize(td,true);//                            domUtils.removeAttributes(td, [\'style\'])\n});});}html.html=div.innerHTML;}});me.addListener("afterpaste",function(){utils.each(domUtils.getElementsByTagName(me.body,"table"),function(table){if(table.offsetWidth>me.body.offsetWidth){var defaultValue=getDefaultValue(me,table);table.style.width=me.body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(me.body,"margin-left"),10)*2:0)-defaultValue.tableBorder*2-(me.options.offsetWidth||0)+"px";}});});me.addListener("blur",function(){tableCopyList=null;});var timer;me.addListener("keydown",function(){clearTimeout(timer);timer=setTimeout(function(){var rng=me.selection.getRange(),cell=domUtils.findParentByTagName(rng.startContainer,["th","td"],true);if(cell){var table=cell.parentNode.parentNode.parentNode;if(table.offsetWidth>table.getAttribute("width")){cell.style.wordBreak="break-all";}}},100);});me.addListener("selectionchange",function(){toggleDraggableState(me,false,"",null);});//内容变化时触发索引更新\n//todo 可否考虑标记检测，如果不涉及表格的变化就不进行索引重建和更新\nme.addListener("contentchange",function(){var me=this;//尽可能排除一些不需要更新的状况\nhideDragLine(me);if(getUETableBySelected(me))return;var rng=me.selection.getRange();var start=rng.startContainer;start=domUtils.findParentByTagName(start,["td","th"],true);utils.each(domUtils.getElementsByTagName(me.document,"table"),function(table){if(me.fireEvent("excludetable",table)===true)return;table.ueTable=new UT(table);//trace:3742\n//                utils.each(domUtils.getElementsByTagName(me.document, \'td\'), function (td) {\n//\n//                    if (domUtils.isEmptyBlock(td) && td !== start) {\n//                        domUtils.fillNode(me.document, td);\n//                        if (browser.ie && browser.version == 6) {\n//                            td.innerHTML = \'&nbsp;\'\n//                        }\n//                    }\n//                });\n//                utils.each(domUtils.getElementsByTagName(me.document, \'th\'), function (th) {\n//                    if (domUtils.isEmptyBlock(th) && th !== start) {\n//                        domUtils.fillNode(me.document, th);\n//                        if (browser.ie && browser.version == 6) {\n//                            th.innerHTML = \'&nbsp;\'\n//                        }\n//                    }\n//                });\ntable.onmouseover=function(){me.fireEvent("tablemouseover",table);};table.onmousemove=function(){me.fireEvent("tablemousemove",table);me.options.tableDragable&&toggleDragButton(true,this,me);utils.defer(function(){me.fireEvent("contentchange",50);},true);};table.onmouseout=function(){me.fireEvent("tablemouseout",table);toggleDraggableState(me,false,"",null);hideDragLine(me);};table.onclick=function(evt){evt=me.window.event||evt;var target=getParentTdOrTh(evt.target||evt.srcElement);if(!target)return;var ut=getUETable(target),table=ut.table,cellInfo=ut.getCellInfo(target),cellsRange,rng=me.selection.getRange();//                    if ("topLeft" == inPosition(table, mouseCoords(evt))) {\n//                        cellsRange = ut.getCellsRange(ut.table.rows[0].cells[0], ut.getLastCell());\n//                        ut.setSelected(cellsRange);\n//                        return;\n//                    }\n//                    if ("bottomRight" == inPosition(table, mouseCoords(evt))) {\n//\n//                        return;\n//                    }\nif(inTableSide(table,target,evt,true)){var endTdCol=ut.getCell(ut.indexTable[ut.rowsNum-1][cellInfo.colIndex].rowIndex,ut.indexTable[ut.rowsNum-1][cellInfo.colIndex].cellIndex);if(evt.shiftKey&&ut.selectedTds.length){if(ut.selectedTds[0]!==endTdCol){cellsRange=ut.getCellsRange(ut.selectedTds[0],endTdCol);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdCol).select();}}else{if(target!==endTdCol){cellsRange=ut.getCellsRange(target,endTdCol);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdCol).select();}}return;}if(inTableSide(table,target,evt)){var endTdRow=ut.getCell(ut.indexTable[cellInfo.rowIndex][ut.colsNum-1].rowIndex,ut.indexTable[cellInfo.rowIndex][ut.colsNum-1].cellIndex);if(evt.shiftKey&&ut.selectedTds.length){if(ut.selectedTds[0]!==endTdRow){cellsRange=ut.getCellsRange(ut.selectedTds[0],endTdRow);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdRow).select();}}else{if(target!==endTdRow){cellsRange=ut.getCellsRange(target,endTdRow);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdRow).select();}}}};});switchBorderColor(me,true);});domUtils.on(me.document,"mousemove",mouseMoveEvent);domUtils.on(me.document,"mouseout",function(evt){var target=evt.target||evt.srcElement;if(target.tagName=="TABLE"){toggleDraggableState(me,false,"",null);}});/**\n         * 表格隔行变色\n         */me.addListener("interlacetable",function(type,table,classList){if(!table)return;var me=this,rows=table.rows,len=rows.length,getClass=function getClass(list,index,repeat){return list[index]?list[index]:repeat?list[index%list.length]:"";};for(var i=0;i<len;i++){rows[i].className=getClass(classList||me.options.classList,i,true);}});me.addListener("uninterlacetable",function(type,table){if(!table)return;var me=this,rows=table.rows,classList=me.options.classList,len=rows.length;for(var i=0;i<len;i++){domUtils.removeClasses(rows[i],classList);}});me.addListener("mousedown",mouseDownEvent);me.addListener("mouseup",mouseUpEvent);//拖动的时候触发mouseup\ndomUtils.on(me.body,"dragstart",function(evt){mouseUpEvent.call(me,"dragstart",evt);});me.addOutputRule(function(root){utils.each(root.getNodesByTagName("div"),function(n){if(n.getAttr("id")=="ue_tableDragLine"){n.parentNode.removeChild(n);}});});var currentRowIndex=0;me.addListener("mousedown",function(){currentRowIndex=0;});me.addListener("tabkeydown",function(){var range=this.selection.getRange(),common=range.getCommonAncestor(true,true),table=domUtils.findParentByTagName(common,"table");if(table){if(domUtils.findParentByTagName(common,"caption",true)){var cell=domUtils.getElementsByTagName(table,"th td");if(cell&&cell.length){range.setStart(cell[0],0).setCursor(false,true);}}else{var cell=domUtils.findParentByTagName(common,["td","th"],true),ua=getUETable(cell);currentRowIndex=cell.rowSpan>1?currentRowIndex:ua.getCellInfo(cell).rowIndex;var nextCell=ua.getTabNextCell(cell,currentRowIndex);if(nextCell){if(isEmptyBlock(nextCell)){range.setStart(nextCell,0).setCursor(false,true);}else{range.selectNodeContents(nextCell).select();}}else{me.fireEvent("saveScene");me.__hasEnterExecCommand=true;this.execCommand("insertrownext");me.__hasEnterExecCommand=false;range=this.selection.getRange();range.setStart(table.rows[table.rows.length-1].cells[0],0).setCursor();me.fireEvent("saveScene");}}return true;}});browser.ie&&me.addListener("selectionchange",function(){toggleDraggableState(this,false,"",null);});me.addListener("keydown",function(type,evt){var me=this;//处理在表格的最后一个输入tab产生新的表格\nvar keyCode=evt.keyCode||evt.which;if(keyCode==8||keyCode==46){return;}var notCtrlKey=!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey;notCtrlKey&&removeSelectedClass(domUtils.getElementsByTagName(me.body,"td"));var ut=getUETableBySelected(me);if(!ut)return;notCtrlKey&&ut.clearSelected();});me.addListener("beforegetcontent",function(){switchBorderColor(this,false);browser.ie&&utils.each(this.document.getElementsByTagName("caption"),function(ci){if(domUtils.isEmptyNode(ci)){ci.innerHTML="&nbsp;";}});});me.addListener("aftergetcontent",function(){switchBorderColor(this,true);});me.addListener("getAllHtml",function(){removeSelectedClass(me.document.getElementsByTagName("td"));});//修正全屏状态下插入的表格宽度在非全屏状态下撑开编辑器的情况\nme.addListener("fullscreenchanged",function(type,fullscreen){if(!fullscreen){var ratio=this.body.offsetWidth/document.body.offsetWidth,tables=domUtils.getElementsByTagName(this.body,"table");utils.each(tables,function(table){if(table.offsetWidth<me.body.offsetWidth)return false;var tds=domUtils.getElementsByTagName(table,"td"),backWidths=[];utils.each(tds,function(td){backWidths.push(td.offsetWidth);});for(var i=0,td;td=tds[i];i++){td.setAttribute("width",Math.floor(backWidths[i]*ratio));}table.setAttribute("width",Math.floor(getTableWidth(me,needIEHack,getDefaultValue(me))));});}});//重写execCommand命令，用于处理框选时的处理\nvar oldExecCommand=me.execCommand;me.execCommand=function(cmd,datatat){var me=this,args=arguments;cmd=cmd.toLowerCase();var ut=getUETableBySelected(me),tds,range=new dom.Range(me.document),cmdFun=me.commands[cmd]||UE.commands[cmd],result;if(!cmdFun)return;if(ut&&!commands[cmd]&&!cmdFun.notNeedUndo&&!me.__hasEnterExecCommand){me.__hasEnterExecCommand=true;me.fireEvent("beforeexeccommand",cmd);tds=ut.selectedTds;var lastState=-2,lastValue=-2,value,state;for(var i=0,td;td=tds[i];i++){if(isEmptyBlock(td)){range.setStart(td,0).setCursor(false,true);}else{range.selectNode(td).select(true);}state=me.queryCommandState(cmd);value=me.queryCommandValue(cmd);if(state!=-1){if(lastState!==state||lastValue!==value){me._ignoreContentChange=true;result=oldExecCommand.apply(me,arguments);me._ignoreContentChange=false;}lastState=me.queryCommandState(cmd);lastValue=me.queryCommandValue(cmd);if(domUtils.isEmptyBlock(td)){domUtils.fillNode(me.document,td);}}}range.setStart(tds[0],0).shrinkBoundary(true).setCursor(false,true);me.fireEvent("contentchange");me.fireEvent("afterexeccommand",cmd);me.__hasEnterExecCommand=false;me._selectionChange();}else{result=oldExecCommand.apply(me,arguments);}return result;};});/**\n     * 删除obj的宽高style，改成属性宽高\n     * @param obj\n     * @param replaceToProperty\n     */function removeStyleSize(obj,replaceToProperty){removeStyle(obj,"width",true);removeStyle(obj,"height",true);}function removeStyle(obj,styleName,replaceToProperty){if(obj.style[styleName]){replaceToProperty&&obj.setAttribute(styleName,parseInt(obj.style[styleName],10));obj.style[styleName]="";}}function getParentTdOrTh(ele){if(ele.tagName=="TD"||ele.tagName=="TH")return ele;var td;if(td=domUtils.findParentByTagName(ele,"td",true)||domUtils.findParentByTagName(ele,"th",true))return td;return null;}function isEmptyBlock(node){var reg=new RegExp(domUtils.fillChar,"g");if(node[browser.ie?"innerText":"textContent"].replace(/^\\s*$/,"").replace(reg,"").length>0){return 0;}for(var n in dtd.$isNotEmpty){if(node.getElementsByTagName(n).length){return 0;}}return 1;}function mouseCoords(evt){if(evt.pageX||evt.pageY){return{x:evt.pageX,y:evt.pageY};}return{x:evt.clientX+me.document.body.scrollLeft-me.document.body.clientLeft,y:evt.clientY+me.document.body.scrollTop-me.document.body.clientTop};}function mouseMoveEvent(evt){if(isEditorDisabled()){return;}try{//普通状态下鼠标移动\nvar target=getParentTdOrTh(evt.target||evt.srcElement),pos;//区分用户的行为是拖动还是双击\nif(isInResizeBuffer){me.body.style.webkitUserSelect="none";if(Math.abs(userActionStatus.x-evt.clientX)>offsetOfTableCell||Math.abs(userActionStatus.y-evt.clientY)>offsetOfTableCell){clearTableDragTimer();isInResizeBuffer=false;singleClickState=0;//drag action\ntableBorderDrag(evt);}}//修改单元格大小时的鼠标移动\nif(onDrag&&dragTd){singleClickState=0;me.body.style.webkitUserSelect="none";me.selection.getNative()[browser.ie9below?"empty":"removeAllRanges"]();pos=mouseCoords(evt);toggleDraggableState(me,true,onDrag,pos,target);if(onDrag=="h"){dragLine.style.left=getPermissionX(dragTd,evt)+"px";}else if(onDrag=="v"){dragLine.style.top=getPermissionY(dragTd,evt)+"px";}return;}//当鼠标处于table上时，修改移动过程中的光标状态\nif(target){//针对使用table作为容器的组件不触发拖拽效果\nif(me.fireEvent("excludetable",target)===true)return;pos=mouseCoords(evt);var state=getRelation(target,pos),table=domUtils.findParentByTagName(target,"table",true);if(inTableSide(table,target,evt,true)){if(me.fireEvent("excludetable",table)===true)return;me.body.style.cursor="url("+me.options.cursorpath+"h.png),pointer";}else if(inTableSide(table,target,evt)){if(me.fireEvent("excludetable",table)===true)return;me.body.style.cursor="url("+me.options.cursorpath+"v.png),pointer";}else{me.body.style.cursor="text";var curCell=target;if(/\\d/.test(state)){state=state.replace(/\\d/,"");target=getUETable(target).getPreviewCell(target,state=="v");}//位于第一行的顶部或者第一列的左边时不可拖动\ntoggleDraggableState(me,target?!!state:false,target?state:"",pos,target);}}else{toggleDragButton(false,table,me);}}catch(e){showError(e);}}var dragButtonTimer;function toggleDragButton(show,table,editor){if(!show){if(dragOver)return;dragButtonTimer=setTimeout(function(){!dragOver&&dragButton&&dragButton.parentNode&&dragButton.parentNode.removeChild(dragButton);},2000);}else{createDragButton(table,editor);}}function createDragButton(table,editor){var pos=domUtils.getXY(table),doc=table.ownerDocument;if(dragButton&&dragButton.parentNode)return dragButton;dragButton=doc.createElement("div");dragButton.contentEditable=false;dragButton.innerHTML="";dragButton.style.cssText="width:15px;height:15px;background-image:url("+editor.options.UEDITOR_HOME_URL+"dialogs/table/dragicon.png);position: absolute;cursor:move;top:"+(pos.y-15)+"px;left:"+pos.x+"px;";domUtils.unSelectable(dragButton);dragButton.onmouseover=function(evt){dragOver=true;};dragButton.onmouseout=function(evt){dragOver=false;};domUtils.on(dragButton,"click",function(type,evt){doClick(evt,this);});domUtils.on(dragButton,"dblclick",function(type,evt){doDblClick(evt);});domUtils.on(dragButton,"dragstart",function(type,evt){domUtils.preventDefault(evt);});var timer;function doClick(evt,button){// 部分浏览器下需要清理\nclearTimeout(timer);timer=setTimeout(function(){editor.fireEvent("tableClicked",table,button);},300);}function doDblClick(evt){clearTimeout(timer);var ut=getUETable(table),start=table.rows[0].cells[0],end=ut.getLastCell(),range=ut.getCellsRange(start,end);editor.selection.getRange().setStart(start,0).setCursor(false,true);ut.setSelected(range);}doc.body.appendChild(dragButton);}//    function inPosition(table, pos) {\n//        var tablePos = domUtils.getXY(table),\n//            width = table.offsetWidth,\n//            height = table.offsetHeight;\n//        if (pos.x - tablePos.x < 5 && pos.y - tablePos.y < 5) {\n//            return "topLeft";\n//        } else if (tablePos.x + width - pos.x < 5 && tablePos.y + height - pos.y < 5) {\n//            return "bottomRight";\n//        }\n//    }\nfunction inTableSide(table,cell,evt,top){var pos=mouseCoords(evt),state=getRelation(cell,pos);if(top){var caption=table.getElementsByTagName("caption")[0],capHeight=caption?caption.offsetHeight:0;return state=="v1"&&pos.y-domUtils.getXY(table).y-capHeight<8;}else{return state=="h1"&&pos.x-domUtils.getXY(table).x<8;}}/**\n     * 获取拖动时允许的X轴坐标\n     * @param dragTd\n     * @param evt\n     */function getPermissionX(dragTd,evt){var ut=getUETable(dragTd);if(ut){var preTd=ut.getSameEndPosCells(dragTd,"x")[0],nextTd=ut.getSameStartPosXCells(dragTd)[0],mouseX=mouseCoords(evt).x,left=(preTd?domUtils.getXY(preTd).x:domUtils.getXY(ut.table).x)+20,right=nextTd?domUtils.getXY(nextTd).x+nextTd.offsetWidth-20:me.body.offsetWidth+5||parseInt(domUtils.getComputedStyle(me.body,"width"),10);left+=cellMinWidth;right-=cellMinWidth;return mouseX<left?left:mouseX>right?right:mouseX;}}/**\n     * 获取拖动时允许的Y轴坐标\n     */function getPermissionY(dragTd,evt){try{var top=domUtils.getXY(dragTd).y,mousePosY=mouseCoords(evt).y;return mousePosY<top?top:mousePosY;}catch(e){showError(e);}}/**\n     * 移动状态切换\n     */function toggleDraggableState(editor,draggable,dir,mousePos,cell){try{editor.body.style.cursor=dir=="h"?"col-resize":dir=="v"?"row-resize":"text";if(browser.ie){if(dir&&!mousedown&&!getUETableBySelected(editor)){getDragLine(editor,editor.document);showDragLineAt(dir,cell);}else{hideDragLine(editor);}}onBorder=draggable;}catch(e){showError(e);}}/**\n     * 获取与UETable相关的resize line\n     * @param uetable UETable对象\n     */function getResizeLineByUETable(){var lineId="_UETableResizeLine",line=this.document.getElementById(lineId);if(!line){line=this.document.createElement("div");line.id=lineId;line.contnetEditable=false;line.setAttribute("unselectable","on");var styles={width:2*cellBorderWidth+1+"px",position:"absolute","z-index":100000,cursor:"col-resize",background:"red",display:"none"};//切换状态\nline.onmouseout=function(){this.style.display="none";};utils.extend(line.style,styles);this.document.body.appendChild(line);}return line;}/**\n     * 更新resize-line\n     */function updateResizeLine(cell,uetable){var line=getResizeLineByUETable.call(this),table=uetable.table,styles={top:domUtils.getXY(table).y+"px",left:domUtils.getXY(cell).x+cell.offsetWidth-cellBorderWidth+"px",display:"block",height:table.offsetHeight+"px"};utils.extend(line.style,styles);}/**\n     * 显示resize-line\n     */function showResizeLine(cell){var uetable=getUETable(cell);updateResizeLine.call(this,cell,uetable);}/**\n     * 获取鼠标与当前单元格的相对位置\n     * @param ele\n     * @param mousePos\n     */function getRelation(ele,mousePos){var elePos=domUtils.getXY(ele);if(!elePos){return"";}if(elePos.x+ele.offsetWidth-mousePos.x<cellBorderWidth){return"h";}if(mousePos.x-elePos.x<cellBorderWidth){return"h1";}if(elePos.y+ele.offsetHeight-mousePos.y<cellBorderWidth){return"v";}if(mousePos.y-elePos.y<cellBorderWidth){return"v1";}return"";}function mouseDownEvent(type,evt){if(isEditorDisabled()){return;}userActionStatus={x:evt.clientX,y:evt.clientY};//右键菜单单独处理\nif(evt.button==2){var ut=getUETableBySelected(me),flag=false;if(ut){var td=getTargetTd(me,evt);utils.each(ut.selectedTds,function(ti){if(ti===td){flag=true;}});if(!flag){removeSelectedClass(domUtils.getElementsByTagName(me.body,"th td"));ut.clearSelected();}else{td=ut.selectedTds[0];setTimeout(function(){me.selection.getRange().setStart(td,0).setCursor(false,true);},0);}}}else{tableClickHander(evt);}}//清除表格的计时器\nfunction clearTableTimer(){tabTimer&&clearTimeout(tabTimer);tabTimer=null;}//双击收缩\nfunction tableDbclickHandler(evt){singleClickState=0;evt=evt||me.window.event;var target=getParentTdOrTh(evt.target||evt.srcElement);if(target){var h;if(h=getRelation(target,mouseCoords(evt))){hideDragLine(me);if(h=="h1"){h="h";if(inTableSide(domUtils.findParentByTagName(target,"table"),target,evt)){me.execCommand("adaptbywindow");}else{target=getUETable(target).getPreviewCell(target);if(target){var rng=me.selection.getRange();rng.selectNodeContents(target).setCursor(true,true);}}}if(h=="h"){var ut=getUETable(target),table=ut.table,cells=getCellsByMoveBorder(target,table,true);cells=extractArray(cells,"left");ut.width=ut.offsetWidth;var oldWidth=[],newWidth=[];utils.each(cells,function(cell){oldWidth.push(cell.offsetWidth);});utils.each(cells,function(cell){cell.removeAttribute("width");});window.setTimeout(function(){//是否允许改变\nvar changeable=true;utils.each(cells,function(cell,index){var width=cell.offsetWidth;if(width>oldWidth[index]){changeable=false;return false;}newWidth.push(width);});var change=changeable?newWidth:oldWidth;utils.each(cells,function(cell,index){cell.width=change[index]-getTabcellSpace();});},0);//                    minWidth -= cellMinWidth;\n//\n//                    table.removeAttribute("width");\n//                    utils.each(cells, function (cell) {\n//                        cell.style.width = "";\n//                        cell.width -= minWidth;\n//                    });\n}}}}function tableClickHander(evt){removeSelectedClass(domUtils.getElementsByTagName(me.body,"td th"));//trace:3113\n//选中单元格，点击table外部，不会清掉table上挂的ueTable,会引起getUETableBySelected方法返回值\nutils.each(me.document.getElementsByTagName("table"),function(t){t.ueTable=null;});startTd=getTargetTd(me,evt);if(!startTd)return;var table=domUtils.findParentByTagName(startTd,"table",true);ut=getUETable(table);ut&&ut.clearSelected();//判断当前鼠标状态\nif(!onBorder){me.document.body.style.webkitUserSelect="";mousedown=true;me.addListener("mouseover",mouseOverEvent);}else{//边框上的动作处理\nborderActionHandler(evt);}}//处理表格边框上的动作, 这里做延时处理，避免两种动作互相影响\nfunction borderActionHandler(evt){if(browser.ie){evt=reconstruct(evt);}clearTableDragTimer();//是否正在等待resize的缓冲中\nisInResizeBuffer=true;tableDragTimer=setTimeout(function(){tableBorderDrag(evt);},dblclickTime);}function extractArray(originArr,key){var result=[],tmp=null;for(var i=0,len=originArr.length;i<len;i++){tmp=originArr[i][key];if(tmp){result.push(tmp);}}return result;}function clearTableDragTimer(){tableDragTimer&&clearTimeout(tableDragTimer);tableDragTimer=null;}function reconstruct(obj){var attrs=["pageX","pageY","clientX","clientY","srcElement","target"],newObj={};if(obj){for(var i=0,key,val;key=attrs[i];i++){val=obj[key];val&&(newObj[key]=val);}}return newObj;}//边框拖动\nfunction tableBorderDrag(evt){isInResizeBuffer=false;startTd=evt.target||evt.srcElement;if(!startTd)return;var state=getRelation(startTd,mouseCoords(evt));if(/\\d/.test(state)){state=state.replace(/\\d/,"");startTd=getUETable(startTd).getPreviewCell(startTd,state=="v");}hideDragLine(me);getDragLine(me,me.document);me.fireEvent("saveScene");showDragLineAt(state,startTd);mousedown=true;//拖动开始\nonDrag=state;dragTd=startTd;}function mouseUpEvent(type,evt){if(isEditorDisabled()){return;}clearTableDragTimer();isInResizeBuffer=false;if(onBorder){singleClickState=++singleClickState%3;userActionStatus={x:evt.clientX,y:evt.clientY};tableResizeTimer=setTimeout(function(){singleClickState>0&&singleClickState--;},dblclickTime);if(singleClickState===2){singleClickState=0;tableDbclickHandler(evt);return;}}if(evt.button==2)return;var me=this;//清除表格上原生跨选问题\nvar range=me.selection.getRange(),start=domUtils.findParentByTagName(range.startContainer,"table",true),end=domUtils.findParentByTagName(range.endContainer,"table",true);if(start||end){if(start===end){start=domUtils.findParentByTagName(range.startContainer,["td","th","caption"],true);end=domUtils.findParentByTagName(range.endContainer,["td","th","caption"],true);if(start!==end){me.selection.clearRange();}}else{me.selection.clearRange();}}mousedown=false;me.document.body.style.webkitUserSelect="";//拖拽状态下的mouseUP\nif(onDrag&&dragTd){me.selection.getNative()[browser.ie9below?"empty":"removeAllRanges"]();singleClickState=0;dragLine=me.document.getElementById("ue_tableDragLine");// trace 3973\nif(dragLine){var dragTdPos=domUtils.getXY(dragTd),dragLinePos=domUtils.getXY(dragLine);switch(onDrag){case"h":changeColWidth(dragTd,dragLinePos.x-dragTdPos.x);break;case"v":changeRowHeight(dragTd,dragLinePos.y-dragTdPos.y-dragTd.offsetHeight);break;default:}onDrag="";dragTd=null;hideDragLine(me);me.fireEvent("saveScene");return;}}//正常状态下的mouseup\nif(!startTd){var target=domUtils.findParentByTagName(evt.target||evt.srcElement,"td",true);if(!target)target=domUtils.findParentByTagName(evt.target||evt.srcElement,"th",true);if(target&&(target.tagName=="TD"||target.tagName=="TH")){if(me.fireEvent("excludetable",target)===true)return;range=new dom.Range(me.document);range.setStart(target,0).setCursor(false,true);}}else{var ut=getUETable(startTd),cell=ut?ut.selectedTds[0]:null;if(cell){range=new dom.Range(me.document);if(domUtils.isEmptyBlock(cell)){range.setStart(cell,0).setCursor(false,true);}else{range.selectNodeContents(cell).shrinkBoundary().setCursor(false,true);}}else{range=me.selection.getRange().shrinkBoundary();if(!range.collapsed){var start=domUtils.findParentByTagName(range.startContainer,["td","th"],true),end=domUtils.findParentByTagName(range.endContainer,["td","th"],true);//在table里边的不能清除\nif(start&&!end||!start&&end||start&&end&&start!==end){range.setCursor(false,true);}}}startTd=null;me.removeListener("mouseover",mouseOverEvent);}me._selectionChange(250,evt);}function mouseOverEvent(type,evt){if(isEditorDisabled()){return;}var me=this,tar=evt.target||evt.srcElement;currentTd=domUtils.findParentByTagName(tar,"td",true)||domUtils.findParentByTagName(tar,"th",true);//需要判断两个TD是否位于同一个表格内\nif(startTd&&currentTd&&(startTd.tagName=="TD"&&currentTd.tagName=="TD"||startTd.tagName=="TH"&&currentTd.tagName=="TH")&&domUtils.findParentByTagName(startTd,"table")==domUtils.findParentByTagName(currentTd,"table")){var ut=getUETable(currentTd);if(startTd!=currentTd){me.document.body.style.webkitUserSelect="none";me.selection.getNative()[browser.ie9below?"empty":"removeAllRanges"]();var range=ut.getCellsRange(startTd,currentTd);ut.setSelected(range);}else{me.document.body.style.webkitUserSelect="";ut.clearSelected();}}evt.preventDefault?evt.preventDefault():evt.returnValue=false;}function setCellHeight(cell,height,backHeight){var lineHight=parseInt(domUtils.getComputedStyle(cell,"line-height"),10),tmpHeight=backHeight+height;height=tmpHeight<lineHight?lineHight:tmpHeight;if(cell.style.height)cell.style.height="";cell.rowSpan==1?cell.setAttribute("height",height):cell.removeAttribute&&cell.removeAttribute("height");}function getWidth(cell){if(!cell)return 0;return parseInt(domUtils.getComputedStyle(cell,"width"),10);}function changeColWidth(cell,changeValue){var ut=getUETable(cell);if(ut){//根据当前移动的边框获取相关的单元格\nvar table=ut.table,cells=getCellsByMoveBorder(cell,table);table.style.width="";table.removeAttribute("width");//修正改变量\nchangeValue=correctChangeValue(changeValue,cell,cells);if(cell.nextSibling){var i=0;utils.each(cells,function(cellGroup){cellGroup.left.width=+cellGroup.left.width+changeValue;cellGroup.right&&(cellGroup.right.width=+cellGroup.right.width-changeValue);});}else{utils.each(cells,function(cellGroup){cellGroup.left.width-=-changeValue;});}}}function isEditorDisabled(){return me.body.contentEditable==="false";}function changeRowHeight(td,changeValue){if(Math.abs(changeValue)<10)return;var ut=getUETable(td);if(ut){var cells=ut.getSameEndPosCells(td,"y"),//备份需要连带变化的td的原始高度，否则后期无法获取正确的值\nbackHeight=cells[0]?cells[0].offsetHeight:0;for(var i=0,cell;cell=cells[i++];){setCellHeight(cell,changeValue,backHeight);}}}/**\n     * 获取调整单元格大小的相关单元格\n     * @isContainMergeCell 返回的结果中是否包含发生合并后的单元格\n     */function getCellsByMoveBorder(cell,table,isContainMergeCell){if(!table){table=domUtils.findParentByTagName(cell,"table");}if(!table){return null;}//获取到该单元格所在行的序列号\nvar index=domUtils.getNodeIndex(cell),temp=cell,rows=table.rows,colIndex=0;while(temp){//获取到当前单元格在未发生单元格合并时的序列\nif(temp.nodeType===1){colIndex+=temp.colSpan||1;}temp=temp.previousSibling;}temp=null;//记录想关的单元格\nvar borderCells=[];utils.each(rows,function(tabRow){var cells=tabRow.cells,currIndex=0;utils.each(cells,function(tabCell){currIndex+=tabCell.colSpan||1;if(currIndex===colIndex){borderCells.push({left:tabCell,right:tabCell.nextSibling||null});return false;}else if(currIndex>colIndex){if(isContainMergeCell){borderCells.push({left:tabCell});}return false;}});});return borderCells;}/**\n     * 通过给定的单元格集合获取最小的单元格width\n     */function getMinWidthByTableCells(cells){var minWidth=Number.MAX_VALUE;for(var i=0,curCell;curCell=cells[i];i++){minWidth=Math.min(minWidth,curCell.width||getTableCellWidth(curCell));}return minWidth;}function correctChangeValue(changeValue,relatedCell,cells){//为单元格的paading预留空间\nchangeValue-=getTabcellSpace();if(changeValue<0){return 0;}changeValue-=getTableCellWidth(relatedCell);//确定方向\nvar direction=changeValue<0?"left":"right";changeValue=Math.abs(changeValue);//只关心非最后一个单元格就可以\nutils.each(cells,function(cellGroup){var curCell=cellGroup[direction];//为单元格保留最小空间\nif(curCell){changeValue=Math.min(changeValue,getTableCellWidth(curCell)-cellMinWidth);}});//修正越界\nchangeValue=changeValue<0?0:changeValue;return direction==="left"?-changeValue:changeValue;}function getTableCellWidth(cell){var width=0,//偏移纠正量\noffset=0,width=cell.offsetWidth-getTabcellSpace();//最后一个节点纠正一下\nif(!cell.nextSibling){width-=getTableCellOffset(cell);}width=width<0?0:width;try{cell.width=width;}catch(e){}return width;}/**\n     * 获取单元格所在表格的最末单元格的偏移量\n     */function getTableCellOffset(cell){tab=domUtils.findParentByTagName(cell,"table",false);if(tab.offsetVal===undefined){var prev=cell.previousSibling;if(prev){//最后一个单元格和前一个单元格的width diff结果 如果恰好为一个border width， 则条件成立\ntab.offsetVal=cell.offsetWidth-prev.offsetWidth===UT.borderWidth?UT.borderWidth:0;}else{tab.offsetVal=0;}}return tab.offsetVal;}function getTabcellSpace(){if(UT.tabcellSpace===undefined){var cell=null,tab=me.document.createElement("table"),tbody=me.document.createElement("tbody"),trow=me.document.createElement("tr"),tabcell=me.document.createElement("td"),mirror=null;tabcell.style.cssText="border: 0;";tabcell.width=1;trow.appendChild(tabcell);trow.appendChild(mirror=tabcell.cloneNode(false));tbody.appendChild(trow);tab.appendChild(tbody);tab.style.cssText="visibility: hidden;";me.body.appendChild(tab);UT.paddingSpace=tabcell.offsetWidth-1;var tmpTabWidth=tab.offsetWidth;tabcell.style.cssText="";mirror.style.cssText="";UT.borderWidth=(tab.offsetWidth-tmpTabWidth)/3;UT.tabcellSpace=UT.paddingSpace+UT.borderWidth;me.body.removeChild(tab);}getTabcellSpace=function getTabcellSpace(){return UT.tabcellSpace;};return UT.tabcellSpace;}function getDragLine(editor,doc){if(mousedown)return;dragLine=editor.document.createElement("div");domUtils.setAttributes(dragLine,{id:"ue_tableDragLine",unselectable:"on",contenteditable:false,onresizestart:"return false",ondragstart:"return false",onselectstart:"return false",style:"background-color:blue;position:absolute;padding:0;margin:0;background-image:none;border:0px none;opacity:0;filter:alpha(opacity=0)"});editor.body.appendChild(dragLine);}function hideDragLine(editor){if(mousedown)return;var line;while(line=editor.document.getElementById("ue_tableDragLine")){domUtils.remove(line);}}/**\n     * 依据state（v|h）在cell位置显示横线\n     * @param state\n     * @param cell\n     */function showDragLineAt(state,cell){if(!cell)return;var table=domUtils.findParentByTagName(cell,"table"),caption=table.getElementsByTagName("caption"),width=table.offsetWidth,height=table.offsetHeight-(caption.length>0?caption[0].offsetHeight:0),tablePos=domUtils.getXY(table),cellPos=domUtils.getXY(cell),css;switch(state){case"h":css="height:"+height+"px;top:"+(tablePos.y+(caption.length>0?caption[0].offsetHeight:0))+"px;left:"+(cellPos.x+cell.offsetWidth);dragLine.style.cssText=css+"px;position: absolute;display:block;background-color:blue;width:1px;border:0; color:blue;opacity:.3;filter:alpha(opacity=30)";break;case"v":css="width:"+width+"px;left:"+tablePos.x+"px;top:"+(cellPos.y+cell.offsetHeight);//必须加上border:0和color:blue，否则低版ie不支持背景色显示\ndragLine.style.cssText=css+"px;overflow:hidden;position: absolute;display:block;background-color:blue;height:1px;border:0;color:blue;opacity:.2;filter:alpha(opacity=20)";break;default:}}/**\n     * 当表格边框颜色为白色时设置为虚线,true为添加虚线\n     * @param editor\n     * @param flag\n     */function switchBorderColor(editor,flag){var tableArr=domUtils.getElementsByTagName(editor.body,"table"),color;for(var i=0,node;node=tableArr[i++];){var td=domUtils.getElementsByTagName(node,"td");if(td[0]){if(flag){color=td[0].style.borderColor.replace(/\\s/g,"");if(/(#ffffff)|(rgb\\(255,255,255\\))/gi.test(color))domUtils.addClass(node,"noBorderTable");}else{domUtils.removeClasses(node,"noBorderTable");}}}}function getTableWidth(editor,needIEHack,defaultValue){var body=editor.body;return body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(body,"margin-left"),10)*2:0)-defaultValue.tableBorder*2-(editor.options.offsetWidth||0);}/**\n     * 获取当前拖动的单元格\n     */function getTargetTd(editor,evt){var target=domUtils.findParentByTagName(evt.target||evt.srcElement,["td","th"],true),dir=null;if(!target){return null;}dir=getRelation(target,mouseCoords(evt));//如果有前一个节点， 需要做一个修正， 否则可能会得到一个错误的td\nif(!target){return null;}if(dir==="h1"&&target.previousSibling){var position=domUtils.getXY(target),cellWidth=target.offsetWidth;if(Math.abs(position.x+cellWidth-evt.clientX)>cellWidth/3){target=target.previousSibling;}}else if(dir==="v1"&&target.parentNode.previousSibling){var position=domUtils.getXY(target),cellHeight=target.offsetHeight;if(Math.abs(position.y+cellHeight-evt.clientY)>cellHeight/3){target=target.parentNode.previousSibling.firstChild;}}//排除了非td内部以及用于代码高亮部分的td\nreturn target&&!(editor.fireEvent("excludetable",target)===true)?target:null;}};// plugins/table.sort.js\n/**\n * Created with JetBrains PhpStorm.\n * User: Jinqn\n * Date: 13-10-12\n * Time: 上午10:20\n * To change this template use File | Settings | File Templates.\n */UE.UETable.prototype.sortTable=function(sortByCellIndex,compareFn){var table=this.table,rows=table.rows,trArray=[],flag=rows[0].cells[0].tagName==="TH",lastRowIndex=0;if(this.selectedTds.length){var range=this.cellsRange,len=range.endRowIndex+1;for(var i=range.beginRowIndex;i<len;i++){trArray[i]=rows[i];}trArray.splice(0,range.beginRowIndex);lastRowIndex=range.endRowIndex+1===this.rowsNum?0:range.endRowIndex+1;}else{for(var i=0,len=rows.length;i<len;i++){trArray[i]=rows[i];}}var Fn={reversecurrent:function reversecurrent(td1,td2){return 1;},orderbyasc:function orderbyasc(td1,td2){var value1=td1.innerText||td1.textContent,value2=td2.innerText||td2.textContent;return value1.localeCompare(value2);},reversebyasc:function reversebyasc(td1,td2){var value1=td1.innerHTML,value2=td2.innerHTML;return value2.localeCompare(value1);},orderbynum:function orderbynum(td1,td2){var value1=td1[browser.ie?"innerText":"textContent"].match(/\\d+/),value2=td2[browser.ie?"innerText":"textContent"].match(/\\d+/);if(value1)value1=+value1[0];if(value2)value2=+value2[0];return(value1||0)-(value2||0);},reversebynum:function reversebynum(td1,td2){var value1=td1[browser.ie?"innerText":"textContent"].match(/\\d+/),value2=td2[browser.ie?"innerText":"textContent"].match(/\\d+/);if(value1)value1=+value1[0];if(value2)value2=+value2[0];return(value2||0)-(value1||0);}};//对表格设置排序的标记data-sort-type\ntable.setAttribute("data-sort-type",compareFn&&typeof compareFn==="string"&&Fn[compareFn]?compareFn:"");//th不参与排序\nflag&&trArray.splice(0,1);trArray=utils.sort(trArray,function(tr1,tr2){var result;if(compareFn&&typeof compareFn==="function"){result=compareFn.call(this,tr1.cells[sortByCellIndex],tr2.cells[sortByCellIndex]);}else if(compareFn&&typeof compareFn==="number"){result=1;}else if(compareFn&&typeof compareFn==="string"&&Fn[compareFn]){result=Fn[compareFn].call(this,tr1.cells[sortByCellIndex],tr2.cells[sortByCellIndex]);}else{result=Fn["orderbyasc"].call(this,tr1.cells[sortByCellIndex],tr2.cells[sortByCellIndex]);}return result;});var fragment=table.ownerDocument.createDocumentFragment();for(var j=0,len=trArray.length;j<len;j++){fragment.appendChild(trArray[j]);}var tbody=table.getElementsByTagName("tbody")[0];if(!lastRowIndex){tbody.appendChild(fragment);}else{tbody.insertBefore(fragment,rows[lastRowIndex-range.endRowIndex+range.beginRowIndex-1]);}};UE.plugins["tablesort"]=function(){var me=this,UT=UE.UETable,getUETable=function getUETable(tdOrTable){return UT.getUETable(tdOrTable);},getTableItemsByRange=function getTableItemsByRange(editor){return UT.getTableItemsByRange(editor);};me.ready(function(){//添加表格可排序的样式\nutils.cssRule("tablesort","table.sortEnabled tr.firstRow th,table.sortEnabled tr.firstRow td{padding-right:20px;background-repeat: no-repeat;background-position: center right;"+"   background-image:url("+me.options.themePath+me.options.theme+"/images/sortable.png);}",me.document);//做单元格合并操作时,清除可排序标识\nme.addListener("afterexeccommand",function(type,cmd){if(cmd=="mergeright"||cmd=="mergedown"||cmd=="mergecells"){this.execCommand("disablesort");}});});//表格排序\nUE.commands["sorttable"]={queryCommandState:function queryCommandState(){var me=this,tableItems=getTableItemsByRange(me);if(!tableItems.cell)return-1;var table=tableItems.table,cells=table.getElementsByTagName("td");for(var i=0,cell;cell=cells[i++];){if(cell.rowSpan!=1||cell.colSpan!=1)return-1;}return 0;},execCommand:function execCommand(cmd,fn){var me=this,range=me.selection.getRange(),bk=range.createBookmark(true),tableItems=getTableItemsByRange(me),cell=tableItems.cell,ut=getUETable(tableItems.table),cellInfo=ut.getCellInfo(cell);ut.sortTable(cellInfo.cellIndex,fn);range.moveToBookmark(bk);try{range.select();}catch(e){}}};//设置表格可排序,清除表格可排序\nUE.commands["enablesort"]=UE.commands["disablesort"]={queryCommandState:function queryCommandState(cmd){var table=getTableItemsByRange(this).table;if(table&&cmd=="enablesort"){var cells=domUtils.getElementsByTagName(table,"th td");for(var i=0;i<cells.length;i++){if(cells[i].getAttribute("colspan")>1||cells[i].getAttribute("rowspan")>1)return-1;}}return!table?-1:cmd=="enablesort"^table.getAttribute("data-sort")!="sortEnabled"?-1:0;},execCommand:function execCommand(cmd){var table=getTableItemsByRange(this).table;table.setAttribute("data-sort",cmd=="enablesort"?"sortEnabled":"sortDisabled");cmd=="enablesort"?domUtils.addClass(table,"sortEnabled"):domUtils.removeClasses(table,"sortEnabled");}};};// plugins/contextmenu.js\n///import core\n///commands 右键菜单\n///commandsName  ContextMenu\n///commandsTitle  右键菜单\n/**\n * 右键菜单\n * @function\n * @name baidu.editor.plugins.contextmenu\n * @author zhanyi\n */UE.plugins["contextmenu"]=function(){var me=this;me.setOpt("enableContextMenu",me.getOpt("enableContextMenu")||true);if(me.getOpt("enableContextMenu")===false){return;}var lang=me.getLang("contextMenu"),menu,items=me.options.contextMenu||[{label:lang["selectall"],cmdName:"selectall"},{label:lang.cleardoc,cmdName:"cleardoc",exec:function exec(){if(confirm(lang.confirmclear)){this.execCommand("cleardoc");}}},"-",{label:lang.unlink,cmdName:"unlink"},"-",{group:lang.paragraph,icon:"justifyjustify",subMenu:[{label:lang.justifyleft,cmdName:"justify",value:"left"},{label:lang.justifyright,cmdName:"justify",value:"right"},{label:lang.justifycenter,cmdName:"justify",value:"center"},{label:lang.justifyjustify,cmdName:"justify",value:"justify"}]},"-",{group:lang.table,icon:"table",subMenu:[{label:lang.inserttable,cmdName:"inserttable"},{label:lang.deletetable,cmdName:"deletetable"},"-",{label:lang.deleterow,cmdName:"deleterow"},{label:lang.deletecol,cmdName:"deletecol"},{label:lang.insertcol,cmdName:"insertcol"},{label:lang.insertcolnext,cmdName:"insertcolnext"},{label:lang.insertrow,cmdName:"insertrow"},{label:lang.insertrownext,cmdName:"insertrownext"},"-",{label:lang.insertcaption,cmdName:"insertcaption"},{label:lang.deletecaption,cmdName:"deletecaption"},{label:lang.inserttitle,cmdName:"inserttitle"},{label:lang.deletetitle,cmdName:"deletetitle"},{label:lang.inserttitlecol,cmdName:"inserttitlecol"},{label:lang.deletetitlecol,cmdName:"deletetitlecol"},"-",{label:lang.mergecells,cmdName:"mergecells"},{label:lang.mergeright,cmdName:"mergeright"},{label:lang.mergedown,cmdName:"mergedown"},"-",{label:lang.splittorows,cmdName:"splittorows"},{label:lang.splittocols,cmdName:"splittocols"},{label:lang.splittocells,cmdName:"splittocells"},"-",{label:lang.averageDiseRow,cmdName:"averagedistributerow"},{label:lang.averageDisCol,cmdName:"averagedistributecol"},"-",{label:lang.edittd,cmdName:"edittd",exec:function exec(){if(UE.ui["edittd"]){new UE.ui["edittd"](this);}this.getDialog("edittd").open();}},{label:lang.edittable,cmdName:"edittable",exec:function exec(){if(UE.ui["edittable"]){new UE.ui["edittable"](this);}this.getDialog("edittable").open();}},{label:lang.setbordervisible,cmdName:"setbordervisible"}]},{group:lang.tablesort,icon:"tablesort",subMenu:[{label:lang.enablesort,cmdName:"enablesort"},{label:lang.disablesort,cmdName:"disablesort"},"-",{label:lang.reversecurrent,cmdName:"sorttable",value:"reversecurrent"},{label:lang.orderbyasc,cmdName:"sorttable",value:"orderbyasc"},{label:lang.reversebyasc,cmdName:"sorttable",value:"reversebyasc"},{label:lang.orderbynum,cmdName:"sorttable",value:"orderbynum"},{label:lang.reversebynum,cmdName:"sorttable",value:"reversebynum"}]},{group:lang.borderbk,icon:"borderBack",subMenu:[{label:lang.setcolor,cmdName:"interlacetable",exec:function exec(){this.execCommand("interlacetable");}},{label:lang.unsetcolor,cmdName:"uninterlacetable",exec:function exec(){this.execCommand("uninterlacetable");}},{label:lang.setbackground,cmdName:"settablebackground",exec:function exec(){this.execCommand("settablebackground",{repeat:true,colorList:["#bbb","#ccc"]});}},{label:lang.unsetbackground,cmdName:"cleartablebackground",exec:function exec(){this.execCommand("cleartablebackground");}},{label:lang.redandblue,cmdName:"settablebackground",exec:function exec(){this.execCommand("settablebackground",{repeat:true,colorList:["red","blue"]});}},{label:lang.threecolorgradient,cmdName:"settablebackground",exec:function exec(){this.execCommand("settablebackground",{repeat:true,colorList:["#aaa","#bbb","#ccc"]});}}]},{group:lang.aligntd,icon:"aligntd",subMenu:[{cmdName:"cellalignment",value:{align:"left",vAlign:"top"}},{cmdName:"cellalignment",value:{align:"center",vAlign:"top"}},{cmdName:"cellalignment",value:{align:"right",vAlign:"top"}},{cmdName:"cellalignment",value:{align:"left",vAlign:"middle"}},{cmdName:"cellalignment",value:{align:"center",vAlign:"middle"}},{cmdName:"cellalignment",value:{align:"right",vAlign:"middle"}},{cmdName:"cellalignment",value:{align:"left",vAlign:"bottom"}},{cmdName:"cellalignment",value:{align:"center",vAlign:"bottom"}},{cmdName:"cellalignment",value:{align:"right",vAlign:"bottom"}}]},{group:lang.aligntable,icon:"aligntable",subMenu:[{cmdName:"tablealignment",className:"left",label:lang.tableleft,value:"left"},{cmdName:"tablealignment",className:"center",label:lang.tablecenter,value:"center"},{cmdName:"tablealignment",className:"right",label:lang.tableright,value:"right"}]},"-",{label:lang.insertparagraphbefore,cmdName:"insertparagraph",value:true},{label:lang.insertparagraphafter,cmdName:"insertparagraph"},{label:lang["copy"],cmdName:"copy"},{label:lang["paste"],cmdName:"paste"}];if(!items.length){return;}var uiUtils=UE.ui.uiUtils;me.addListener("contextmenu",function(type,evt){var offset=uiUtils.getViewportOffsetByEvent(evt);me.fireEvent("beforeselectionchange");if(menu){menu.destroy();}for(var i=0,ti,contextItems=[];ti=items[i];i++){var last;(function(item){if(item=="-"){if((last=contextItems[contextItems.length-1])&&last!=="-"){contextItems.push("-");}}else if(item.hasOwnProperty("group")){for(var j=0,cj,subMenu=[];cj=item.subMenu[j];j++){(function(subItem){if(subItem=="-"){if((last=subMenu[subMenu.length-1])&&last!=="-"){subMenu.push("-");}else{subMenu.splice(subMenu.length-1);}}else{if((me.commands[subItem.cmdName]||UE.commands[subItem.cmdName]||subItem.query)&&(subItem.query?subItem.query():me.queryCommandState(subItem.cmdName))>-1){subMenu.push({label:subItem.label||me.getLang("contextMenu."+subItem.cmdName+(subItem.value||""))||"",className:"edui-for-"+subItem.cmdName+(subItem.className?" edui-for-"+subItem.cmdName+"-"+subItem.className:""),onclick:subItem.exec?function(){subItem.exec.call(me);}:function(){me.execCommand(subItem.cmdName,subItem.value);}});}}})(cj);}if(subMenu.length){var getLabel=function getLabel(){switch(item.icon){case"table":return me.getLang("contextMenu.table");case"justifyjustify":return me.getLang("contextMenu.paragraph");case"aligntd":return me.getLang("contextMenu.aligntd");case"aligntable":return me.getLang("contextMenu.aligntable");case"tablesort":return lang.tablesort;case"borderBack":return lang.borderbk;default:return"";}};contextItems.push({//todo 修正成自动获取方式\nlabel:getLabel(),className:"edui-for-"+item.icon,subMenu:{items:subMenu,editor:me}});}}else{//有可能commmand没有加载右键不能出来，或者没有command也想能展示出来添加query方法\nif((me.commands[item.cmdName]||UE.commands[item.cmdName]||item.query)&&(item.query?item.query.call(me):me.queryCommandState(item.cmdName))>-1){contextItems.push({label:item.label||me.getLang("contextMenu."+item.cmdName),className:"edui-for-"+(item.icon?item.icon:item.cmdName+(item.value||"")),onclick:item.exec?function(){item.exec.call(me);}:function(){me.execCommand(item.cmdName,item.value);}});}}})(ti);}if(contextItems[contextItems.length-1]=="-"){contextItems.pop();}menu=new UE.ui.Menu({items:contextItems,className:"edui-contextmenu",editor:me});menu.render();menu.showAt(offset);me.fireEvent("aftershowcontextmenu",menu);domUtils.preventDefault(evt);if(browser.ie){var ieRange;try{ieRange=me.selection.getNative().createRange();}catch(e){return;}if(ieRange.item){var range=new dom.Range(me.document);range.selectNode(ieRange.item(0)).select(true,true);}}});// 添加复制的flash按钮\nme.addListener("aftershowcontextmenu",function(type,menu){if(me.zeroclipboard){var items=menu.items;for(var key in items){if(items[key].className=="edui-for-copy"){me.zeroclipboard.clip(items[key].getDom());}}}});};// plugins/shortcutmenu.js\n///import core\n///commands       弹出菜单\n// commandsName  popupmenu\n///commandsTitle  弹出菜单\n/**\n * 弹出菜单\n * @function\n * @name baidu.editor.plugins.popupmenu\n * @author xuheng\n */UE.plugins["shortcutmenu"]=function(){var me=this,menu,items=me.options.shortcutMenu||[];if(!items.length){return;}me.addListener("contextmenu mouseup",function(type,e){var me=this,customEvt={type:type,target:e.target||e.srcElement,screenX:e.screenX,screenY:e.screenY,clientX:e.clientX,clientY:e.clientY};setTimeout(function(){var rng=me.selection.getRange();if(rng.collapsed===false||type=="contextmenu"){if(!menu){menu=new baidu.editor.ui.ShortCutMenu({editor:me,items:items,theme:me.options.theme,className:"edui-shortcutmenu"});menu.render();me.fireEvent("afterrendershortcutmenu",menu);}menu.show(customEvt,!!UE.plugins["contextmenu"]);}});if(type=="contextmenu"){domUtils.preventDefault(e);if(browser.ie9below){var ieRange;try{ieRange=me.selection.getNative().createRange();}catch(e){return;}if(ieRange.item){var range=new dom.Range(me.document);range.selectNode(ieRange.item(0)).select(true,true);}}}});me.addListener("keydown",function(type){if(type=="keydown"){menu&&!menu.isHidden&&menu.hide();}});};// plugins/basestyle.js\n/**\n * B、I、sub、super命令支持\n * @file\n * @since 1.2.6.1\n */UE.plugins["basestyle"]=function(){/**\n     * 字体加粗\n     * @command bold\n     * @param { String } cmd 命令字符串\n     * @remind 对已加粗的文本内容执行该命令， 将取消加粗\n     * @method execCommand\n     * @example\n     * ```javascript\n     * //editor是编辑器实例\n     * //对当前选中的文本内容执行加粗操作\n     * //第一次执行， 文本内容加粗\n     * editor.execCommand( \'bold\' );\n     *\n     * //第二次执行， 文本内容取消加粗\n     * editor.execCommand( \'bold\' );\n     * ```\n     *//**\n     * 字体倾斜\n     * @command italic\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @remind 对已倾斜的文本内容执行该命令， 将取消倾斜\n     * @example\n     * ```javascript\n     * //editor是编辑器实例\n     * //对当前选中的文本内容执行斜体操作\n     * //第一次操作， 文本内容将变成斜体\n     * editor.execCommand( \'italic\' );\n     *\n     * //再次对同一文本内容执行， 则文本内容将恢复正常\n     * editor.execCommand( \'italic\' );\n     * ```\n     *//**\n     * 下标文本，与“superscript”命令互斥\n     * @command subscript\n     * @method execCommand\n     * @remind  把选中的文本内容切换成下标文本， 如果当前选中的文本已经是下标， 则该操作会把文本内容还原成正常文本\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * //editor是编辑器实例\n     * //对当前选中的文本内容执行下标操作\n     * //第一次操作， 文本内容将变成下标文本\n     * editor.execCommand( \'subscript\' );\n     *\n     * //再次对同一文本内容执行， 则文本内容将恢复正常\n     * editor.execCommand( \'subscript\' );\n     * ```\n     *//**\n     * 上标文本，与“subscript”命令互斥\n     * @command superscript\n     * @method execCommand\n     * @remind 把选中的文本内容切换成上标文本， 如果当前选中的文本已经是上标， 则该操作会把文本内容还原成正常文本\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * //editor是编辑器实例\n     * //对当前选中的文本内容执行上标操作\n     * //第一次操作， 文本内容将变成上标文本\n     * editor.execCommand( \'superscript\' );\n     *\n     * //再次对同一文本内容执行， 则文本内容将恢复正常\n     * editor.execCommand( \'superscript\' );\n     * ```\n     */var basestyles={bold:["strong","b"],italic:["em","i"],subscript:["sub"],superscript:["sup"]},getObj=function getObj(editor,tagNames){return domUtils.filterNodeList(editor.selection.getStartElementPath(),tagNames);},me=this;//添加快捷键\nme.addshortcutkey({Bold:"ctrl+66",//^B\nItalic:"ctrl+73",//^I\nUnderline:"ctrl+85"//^U\n});me.addInputRule(function(root){utils.each(root.getNodesByTagName("b i"),function(node){switch(node.tagName){case"b":node.tagName="strong";break;case"i":node.tagName="em";}});});for(var style in basestyles){(function(cmd,tagNames){me.commands[cmd]={execCommand:function execCommand(cmdName){var range=me.selection.getRange(),obj=getObj(this,tagNames);if(range.collapsed){if(obj){var tmpText=me.document.createTextNode("");range.insertNode(tmpText).removeInlineStyle(tagNames);range.setStartBefore(tmpText);domUtils.remove(tmpText);}else{var tmpNode=range.document.createElement(tagNames[0]);if(cmdName=="superscript"||cmdName=="subscript"){tmpText=me.document.createTextNode("");range.insertNode(tmpText).removeInlineStyle(["sub","sup"]).setStartBefore(tmpText).collapse(true);}range.insertNode(tmpNode).setStart(tmpNode,0);}range.collapse(true);}else{if(cmdName=="superscript"||cmdName=="subscript"){if(!obj||obj.tagName.toLowerCase()!=cmdName){range.removeInlineStyle(["sub","sup"]);}}obj?range.removeInlineStyle(tagNames):range.applyInlineStyle(tagNames[0]);}range.select();},queryCommandState:function queryCommandState(){return getObj(this,tagNames)?1:0;}};})(style,basestyles[style]);}};// plugins/elementpath.js\n/**\n * 选取路径命令\n * @file\n */UE.plugins["elementpath"]=function(){var currentLevel,tagNames,me=this;me.setOpt("elementPathEnabled",true);if(!me.options.elementPathEnabled){return;}me.commands["elementpath"]={execCommand:function execCommand(cmdName,level){var start=tagNames[level],range=me.selection.getRange();currentLevel=level*1;range.selectNode(start).select();},queryCommandValue:function queryCommandValue(){//产生一个副本，不能修改原来的startElementPath;\nvar parents=[].concat(this.selection.getStartElementPath()).reverse(),names=[];tagNames=parents;for(var i=0,ci;ci=parents[i];i++){if(ci.nodeType==3){continue;}var name=ci.tagName.toLowerCase();if(name=="img"&&ci.getAttribute("anchorname")){name="anchor";}names[i]=name;if(currentLevel==i){currentLevel=-1;break;}}return names;}};};// plugins/formatmatch.js\n/**\n * 格式刷，只格式inline的\n * @file\n * @since 1.2.6.1\n *//**\n * 格式刷\n * @command formatmatch\n * @method execCommand\n * @remind 该操作不能复制段落格式\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * //editor是编辑器实例\n * //获取格式刷\n * editor.execCommand( \'formatmatch\' );\n * ```\n */UE.plugins["formatmatch"]=function(){var me=this,list=[],img,flag=0;me.addListener("reset",function(){list=[];flag=0;});function addList(type,evt){if(browser.webkit){var target=evt.target.tagName=="IMG"?evt.target:null;}function addFormat(range){if(text){range.selectNode(text);}return range.applyInlineStyle(list[list.length-1].tagName,null,list);}me.undoManger&&me.undoManger.save();var range=me.selection.getRange(),imgT=target||range.getClosedNode();if(img&&imgT&&imgT.tagName=="IMG"){//trace:964\nimgT.style.cssText+=";float:"+(img.style.cssFloat||img.style.styleFloat||"none")+";display:"+(img.style.display||"inline");img=null;}else{if(!img){var collapsed=range.collapsed;if(collapsed){var text=me.document.createTextNode("match");range.insertNode(text).select();}me.__hasEnterExecCommand=true;//不能把block上的属性干掉\n//trace:1553\nvar removeFormatAttributes=me.options.removeFormatAttributes;me.options.removeFormatAttributes="";me.execCommand("removeformat");me.options.removeFormatAttributes=removeFormatAttributes;me.__hasEnterExecCommand=false;//trace:969\nrange=me.selection.getRange();if(list.length){addFormat(range);}if(text){range.setStartBefore(text).collapse(true);}range.select();text&&domUtils.remove(text);}}me.undoManger&&me.undoManger.save();me.removeListener("mouseup",addList);flag=0;}me.commands["formatmatch"]={execCommand:function execCommand(cmdName){if(flag){flag=0;list=[];me.removeListener("mouseup",addList);return;}var range=me.selection.getRange();img=range.getClosedNode();if(!img||img.tagName!="IMG"){range.collapse(true).shrinkBoundary();var start=range.startContainer;list=domUtils.findParents(start,true,function(node){return!domUtils.isBlockElm(node)&&node.nodeType==1;});//a不能加入格式刷, 并且克隆节点\nfor(var i=0,ci;ci=list[i];i++){if(ci.tagName=="A"){list.splice(i,1);break;}}}me.addListener("mouseup",addList);flag=1;},queryCommandState:function queryCommandState(){return flag;},notNeedUndo:1};};// plugins/searchreplace.js\n///import core\n///commands 查找替换\n///commandsName  SearchReplace\n///commandsTitle  查询替换\n///commandsDialog  dialogs\\searchreplace\n/**\n * @description 查找替换\n * @author zhanyi\n */UE.plugin.register("searchreplace",function(){var me=this;var _blockElm={table:1,tbody:1,tr:1,ol:1,ul:1};var lastRng=null;function getText(node){var text=node.nodeType==3?node.nodeValue:node[browser.ie?"innerText":"textContent"];return text.replace(domUtils.fillChar,"");}function findTextInString(textContent,opt,currentIndex){var str=opt.searchStr;var reg=new RegExp(str,"g"+(opt.casesensitive?"":"i")),match;if(opt.dir==-1){textContent=textContent.substr(0,currentIndex);textContent=textContent.split("").reverse().join("");str=str.split("").reverse().join("");match=reg.exec(textContent);if(match){return currentIndex-match.index-str.length;}}else{textContent=textContent.substr(currentIndex);match=reg.exec(textContent);if(match){return match.index+currentIndex;}}return-1;}function findTextBlockElm(node,currentIndex,opt){var textContent,index,methodName=opt.all||opt.dir==1?"getNextDomNode":"getPreDomNode";if(domUtils.isBody(node)){node=node.firstChild;}var first=1;while(node){textContent=getText(node);index=findTextInString(textContent,opt,currentIndex);first=0;if(index!=-1){return{node:node,index:index};}node=domUtils[methodName](node);while(node&&_blockElm[node.nodeName.toLowerCase()]){node=domUtils[methodName](node,true);}if(node){currentIndex=opt.dir==-1?getText(node).length:0;}}}function findNTextInBlockElm(node,index,str){var currentIndex=0,currentNode=node.firstChild,currentNodeLength=0,result;while(currentNode){if(currentNode.nodeType==3){currentNodeLength=getText(currentNode).replace(/(^[\\t\\r\\n]+)|([\\t\\r\\n]+$)/,"").length;currentIndex+=currentNodeLength;if(currentIndex>=index){return{node:currentNode,index:currentNodeLength-(currentIndex-index)};}}else if(!dtd.$empty[currentNode.tagName]){currentNodeLength=getText(currentNode).replace(/(^[\\t\\r\\n]+)|([\\t\\r\\n]+$)/,"").length;currentIndex+=currentNodeLength;if(currentIndex>=index){result=findNTextInBlockElm(currentNode,currentNodeLength-(currentIndex-index),str);if(result){return result;}}}currentNode=domUtils.getNextDomNode(currentNode);}}function searchReplace(me,opt){var rng=lastRng||me.selection.getRange(),startBlockNode,searchStr=opt.searchStr,span=me.document.createElement("span");span.innerHTML="$$ueditor_searchreplace_key$$";rng.shrinkBoundary(true);//判断是不是第一次选中\nif(!rng.collapsed){rng.select();var rngText=me.selection.getText();if(new RegExp("^"+opt.searchStr+"$",opt.casesensitive?"":"i").test(rngText)){if(opt.replaceStr!=undefined){replaceText(rng,opt.replaceStr);rng.select();return true;}else{rng.collapse(opt.dir==-1);}}}rng.insertNode(span);rng.enlargeToBlockElm(true);startBlockNode=rng.startContainer;var currentIndex=getText(startBlockNode).indexOf("$$ueditor_searchreplace_key$$");rng.setStartBefore(span);domUtils.remove(span);var result=findTextBlockElm(startBlockNode,currentIndex,opt);if(result){var rngStart=findNTextInBlockElm(result.node,result.index,searchStr);var rngEnd=findNTextInBlockElm(result.node,result.index+searchStr.length,searchStr);rng.setStart(rngStart.node,rngStart.index).setEnd(rngEnd.node,rngEnd.index);if(opt.replaceStr!==undefined){replaceText(rng,opt.replaceStr);}rng.select();return true;}else{rng.setCursor();}}function replaceText(rng,str){str=me.document.createTextNode(str);rng.deleteContents().insertNode(str);}return{commands:{searchreplace:{execCommand:function execCommand(cmdName,opt){utils.extend(opt,{all:false,casesensitive:false,dir:1},true);var num=0;if(opt.all){lastRng=null;var rng=me.selection.getRange(),first=me.body.firstChild;if(first&&first.nodeType==1){rng.setStart(first,0);rng.shrinkBoundary(true);}else if(first.nodeType==3){rng.setStartBefore(first);}rng.collapse(true).select(true);if(opt.replaceStr!==undefined){me.fireEvent("saveScene");}while(searchReplace(this,opt)){num++;lastRng=me.selection.getRange();lastRng.collapse(opt.dir==-1);}if(num){me.fireEvent("saveScene");}}else{if(opt.replaceStr!==undefined){me.fireEvent("saveScene");}if(searchReplace(this,opt)){num++;lastRng=me.selection.getRange();lastRng.collapse(opt.dir==-1);}if(num){me.fireEvent("saveScene");}}return num;},notNeedUndo:1}},bindEvents:{clearlastSearchResult:function clearlastSearchResult(){lastRng=null;}}};});// plugins/customstyle.js\n/**\n * 自定义样式\n * @file\n * @since 1.2.6.1\n *//**\n * 根据config配置文件里“customstyle”选项的值对匹配的标签执行样式替换。\n * @command customstyle\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * editor.execCommand( \'customstyle\' );\n * ```\n */UE.plugins["customstyle"]=function(){var me=this;me.setOpt({customstyle:[{tag:"h1",name:"tc",style:"font-size:32px;font-weight:bold;border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:center;margin:0 0 20px 0;"},{tag:"h1",name:"tl",style:"font-size:32px;font-weight:bold;border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:left;margin:0 0 10px 0;"},{tag:"span",name:"im",style:"font-size:16px;font-style:italic;font-weight:bold;line-height:18px;"},{tag:"span",name:"hi",style:"font-size:16px;font-style:italic;font-weight:bold;color:rgb(51, 153, 204);line-height:18px;"}]});me.commands["customstyle"]={execCommand:function execCommand(cmdName,obj){var me=this,tagName=obj.tag,node=domUtils.findParent(me.selection.getStart(),function(node){return node.getAttribute("label");},true),range,bk,tmpObj={};for(var p in obj){if(obj[p]!==undefined)tmpObj[p]=obj[p];}delete tmpObj.tag;if(node&&node.getAttribute("label")==obj.label){range=this.selection.getRange();bk=range.createBookmark();if(range.collapsed){//trace:1732 删掉自定义标签，要有p来回填站位\nif(dtd.$block[node.tagName]){var fillNode=me.document.createElement("p");domUtils.moveChild(node,fillNode);node.parentNode.insertBefore(fillNode,node);domUtils.remove(node);}else{domUtils.remove(node,true);}}else{var common=domUtils.getCommonAncestor(bk.start,bk.end),nodes=domUtils.getElementsByTagName(common,tagName);if(new RegExp(tagName,"i").test(common.tagName)){nodes.push(common);}for(var i=0,ni;ni=nodes[i++];){if(ni.getAttribute("label")==obj.label){var ps=domUtils.getPosition(ni,bk.start),pe=domUtils.getPosition(ni,bk.end);if((ps&domUtils.POSITION_FOLLOWING||ps&domUtils.POSITION_CONTAINS)&&(pe&domUtils.POSITION_PRECEDING||pe&domUtils.POSITION_CONTAINS))if(dtd.$block[tagName]){var fillNode=me.document.createElement("p");domUtils.moveChild(ni,fillNode);ni.parentNode.insertBefore(fillNode,ni);}domUtils.remove(ni,true);}}node=domUtils.findParent(common,function(node){return node.getAttribute("label")==obj.label;},true);if(node){domUtils.remove(node,true);}}range.moveToBookmark(bk).select();}else{if(dtd.$block[tagName]){this.execCommand("paragraph",tagName,tmpObj,"customstyle");range=me.selection.getRange();if(!range.collapsed){range.collapse();node=domUtils.findParent(me.selection.getStart(),function(node){return node.getAttribute("label")==obj.label;},true);var pNode=me.document.createElement("p");domUtils.insertAfter(node,pNode);domUtils.fillNode(me.document,pNode);range.setStart(pNode,0).setCursor();}}else{range=me.selection.getRange();if(range.collapsed){node=me.document.createElement(tagName);domUtils.setAttributes(node,tmpObj);range.insertNode(node).setStart(node,0).setCursor();return;}bk=range.createBookmark();range.applyInlineStyle(tagName,tmpObj).moveToBookmark(bk).select();}}},queryCommandValue:function queryCommandValue(){var parent=domUtils.filterNodeList(this.selection.getStartElementPath(),function(node){return node.getAttribute("label");});return parent?parent.getAttribute("label"):"";}};//当去掉customstyle是，如果是块元素，用p代替\nme.addListener("keyup",function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==32||keyCode==13){var range=me.selection.getRange();if(range.collapsed){var node=domUtils.findParent(me.selection.getStart(),function(node){return node.getAttribute("label");},true);if(node&&dtd.$block[node.tagName]&&domUtils.isEmptyNode(node)){var p=me.document.createElement("p");domUtils.insertAfter(node,p);domUtils.fillNode(me.document,p);domUtils.remove(node);range.setStart(p,0).setCursor();}}}});};// plugins/catchremoteimage.js\n///import core\n///commands 远程图片抓取\n///commandsName  catchRemoteImage,catchremoteimageenable\n///commandsTitle  远程图片抓取\n/**\n * 远程图片抓取,当开启本插件时所有不符合本地域名的图片都将被抓取成为本地服务器上的图片\n */UE.plugins["catchremoteimage"]=function(){var me=this,ajax=UE.ajax;/* 设置默认值 */if(me.options.catchRemoteImageEnable===false)return;me.setOpt({catchRemoteImageEnable:false});me.addListener("afterpaste",function(){me.fireEvent("catchRemoteImage");});me.addListener("catchRemoteImage",function(){var catcherLocalDomain=me.getOpt("catcherLocalDomain"),catcherActionUrl=me.getActionUrl(me.getOpt("catcherActionName")),catcherUrlPrefix=me.getOpt("catcherUrlPrefix"),catcherFieldName=me.getOpt("catcherFieldName");var remoteImages=[],loadingIMG=me.options.themePath+me.options.theme+\'/images/spacer.gif\',imgs=me.document.querySelectorAll(\'[style*="url"],img\'),test=function test(src,urls){if(src.indexOf(location.host)!=-1||/(^\\.)|(^\\/)/.test(src)){return true;}if(urls){for(var j=0,url;url=urls[j++];){if(src.indexOf(url)!==-1){return true;}}}return false;};for(var i=0,ci;ci=imgs[i++];){if(ci.getAttribute("word_img")){continue;}if(ci.nodeName=="IMG"){var src=ci.getAttribute("_src")||ci.src||"";if(/^(https?|ftp):/i.test(src)&&!test(src,catcherLocalDomain)){remoteImages.push(src);// 添加上传时的uploading动画\ndomUtils.setAttributes(ci,{class:"loadingclass",_src:src,src:loadingIMG});}}else{// 获取背景图片url\nvar backgroundImageurl=ci.style.cssText.replace(/.*\\s?url\\([\\\'\\"]?/,\'\').replace(/[\\\'\\"]?\\).*/,\'\');if(/^(https?|ftp):/i.test(backgroundImageurl)&&!test(backgroundImageurl,catcherLocalDomain)){remoteImages.push(backgroundImageurl);ci.style.cssText=ci.style.cssText.replace(backgroundImageurl,loadingIMG);domUtils.setAttributes(ci,{"data-background":backgroundImageurl});}}}if(remoteImages.length){catchremoteimage(remoteImages,{//成功抓取\nsuccess:function success(r){try{var info=r.state!==undefined?r:eval("("+r.responseText+")");}catch(e){return;}/* 获取源路径和新路径 */var i,j,ci,cj,oldSrc,newSrc,list=info.list;/* 抓取失败统计 */var catchFailList=[];/* 抓取成功统计 */var catchSuccessList=[];/* 抓取失败时显示的图片 */var failIMG=me.options.themePath+me.options.theme+\'/images/img-cracked.png\';for(i=0;ci=imgs[i++];){oldSrc=ci.getAttribute("_src")||ci.src||"";oldBgIMG=ci.getAttribute("data-background")||"";for(j=0;cj=list[j++];){if(oldSrc==cj.source&&cj.state=="SUCCESS"){newSrc=catcherUrlPrefix+cj.url;// 上传成功是删除uploading动画\ndomUtils.removeClasses(ci,"loadingclass");domUtils.setAttributes(ci,{"src":newSrc,"_src":newSrc,"data-catchResult":"img_catchSuccess"// 添加catch成功标记\n});catchSuccessList.push(ci);break;}else if(oldSrc==cj.source&&cj.state=="FAIL"){// 替换成统一的失败图片\ndomUtils.removeClasses(ci,"loadingclass");domUtils.setAttributes(ci,{"src":failIMG,"_src":failIMG,"data-catchResult":"img_catchFail"// 添加catch失败标记\n});catchFailList.push(ci);break;}else if(oldBgIMG==cj.source&&cj.state=="SUCCESS"){newBgIMG=catcherUrlPrefix+cj.url;ci.style.cssText=ci.style.cssText.replace(loadingIMG,newBgIMG);domUtils.removeAttributes(ci,"data-background");domUtils.setAttributes(ci,{"data-catchResult":"img_catchSuccess"// 添加catch成功标记\n});catchSuccessList.push(ci);break;}else if(oldBgIMG==cj.source&&cj.state=="FAIL"){ci.style.cssText=ci.style.cssText.replace(loadingIMG,failIMG);domUtils.removeAttributes(ci,"data-background");domUtils.setAttributes(ci,{"data-catchResult":"img_catchFail"// 添加catch失败标记\n});catchFailList.push(ci);break;}}}// 监听事件添加成功抓取和抓取失败的dom列表参数\nme.fireEvent(\'catchremotesuccess\',catchSuccessList,catchFailList);},//回调失败，本次请求超时\nerror:function error(){me.fireEvent("catchremoteerror");}});}function catchremoteimage(imgs,callbacks){var params=utils.serializeParam(me.queryCommandValue("serverparam"))||"",url=utils.formatUrl(catcherActionUrl+(catcherActionUrl.indexOf("?")==-1?"?":"&")+params),isJsonp=utils.isCrossDomainUrl(url),opt={method:"POST",dataType:isJsonp?"jsonp":"",timeout:60000,//单位：毫秒，回调请求超时设置。目标用户如果网速不是很快的话此处建议设置一个较大的数值\nonsuccess:callbacks["success"],onerror:callbacks["error"]};opt[catcherFieldName]=imgs;ajax.request(url,opt);}});};// plugins/snapscreen.js\n/**\n * 截屏插件，为UEditor提供插入支持\n * @file\n * @since 1.4.2\n */UE.plugin.register("snapscreen",function(){var me=this;var snapplugin;function getLocation(url){var search,a=document.createElement("a"),params=utils.serializeParam(me.queryCommandValue("serverparam"))||"";a.href=url;if(browser.ie){a.href=a.href;}search=a.search;if(params){search=search+(search.indexOf("?")==-1?"?":"&")+params;search=search.replace(/[&]+/gi,"&");}return{port:a.port,hostname:a.hostname,path:a.pathname+search||+a.hash};}return{commands:{/**\n             * 字体背景颜色\n             * @command snapscreen\n             * @method execCommand\n             * @param { String } cmd 命令字符串\n             * @example\n             * ```javascript\n             * editor.execCommand(\'snapscreen\');\n             * ```\n             */snapscreen:{execCommand:function execCommand(cmd){var url,local,res;var lang=me.getLang("snapScreen_plugin");if(!snapplugin){var container=me.container;var doc=me.container.ownerDocument||me.container.document;snapplugin=doc.createElement("object");try{snapplugin.type="application/x-pluginbaidusnap";}catch(e){return;}snapplugin.style.cssText="position:absolute;left:-9999px;width:0;height:0;";snapplugin.setAttribute("width","0");snapplugin.setAttribute("height","0");container.appendChild(snapplugin);}function onSuccess(rs){try{rs=eval("("+rs+")");if(rs.state=="SUCCESS"){var opt=me.options;me.execCommand("insertimage",{src:opt.snapscreenUrlPrefix+rs.url,_src:opt.snapscreenUrlPrefix+rs.url,alt:rs.title||"",floatStyle:opt.snapscreenImgAlign});}else{alert(rs.state);}}catch(e){alert(lang.callBackErrorMsg);}}url=me.getActionUrl(me.getOpt("snapscreenActionName"));local=getLocation(url);setTimeout(function(){try{res=snapplugin.saveSnapshot(local.hostname,local.path,local.port);}catch(e){me.ui._dialogs["snapscreenDialog"].open();return;}onSuccess(res);},50);},queryCommandState:function queryCommandState(){return navigator.userAgent.indexOf("Windows",0)!=-1?0:-1;}}}};});// plugins/insertparagraph.js\n/**\n * 插入段落\n * @file\n * @since 1.2.6.1\n *//**\n * 插入段落\n * @command insertparagraph\n * @method execCommand\n * @param { String } cmd 命令字符串\n * @example\n * ```javascript\n * //editor是编辑器实例\n * editor.execCommand( \'insertparagraph\' );\n * ```\n */UE.commands["insertparagraph"]={execCommand:function execCommand(cmdName,front){var me=this,range=me.selection.getRange(),start=range.startContainer,tmpNode;while(start){if(domUtils.isBody(start)){break;}tmpNode=start;start=start.parentNode;}if(tmpNode){var p=me.document.createElement("p");if(front){tmpNode.parentNode.insertBefore(p,tmpNode);}else{tmpNode.parentNode.insertBefore(p,tmpNode.nextSibling);}domUtils.fillNode(me.document,p);range.setStart(p,0).setCursor(false,true);}}};// plugins/webapp.js\n/**\n * 百度应用\n * @file\n * @since 1.2.6.1\n *//**\n * 插入百度应用\n * @command webapp\n * @method execCommand\n * @remind 需要百度APPKey\n * @remind 百度应用主页： <a href="http://app.baidu.com/" target="_blank">http://app.baidu.com/</a>\n * @param { Object } appOptions 应用所需的参数项， 支持的key有： title=>应用标题， width=>应用容器宽度，\n * height=>应用容器高度，logo=>应用logo，url=>应用地址\n * @example\n * ```javascript\n * //editor是编辑器实例\n * //在编辑器里插入一个“植物大战僵尸”的APP\n * editor.execCommand( \'webapp\' , {\n *     title: \'植物大战僵尸\',\n *     width: 560,\n *     height: 465,\n *     logo: \'应用展示的图片\',\n *     url: \'百度应用的地址\'\n * } );\n * ```\n *///UE.plugins[\'webapp\'] = function () {\n//    var me = this;\n//    function createInsertStr( obj, toIframe, addParagraph ) {\n//        return !toIframe ?\n//                (addParagraph ? \'<p>\' : \'\') + \'<img title="\'+obj.title+\'" width="\' + obj.width + \'" height="\' + obj.height + \'"\' +\n//                        \' src="\' + me.options.UEDITOR_HOME_URL + \'themes/default/images/spacer.gif" style="background:url(\' + obj.logo+\') no-repeat center center; border:1px solid gray;" class="edui-faked-webapp" _url="\' + obj.url + \'" />\' +\n//                        (addParagraph ? \'</p>\' : \'\')\n//                :\n//                \'<iframe class="edui-faked-webapp" title="\'+obj.title+\'" width="\' + obj.width + \'" height="\' + obj.height + \'"  scrolling="no" frameborder="0" src="\' + obj.url + \'" logo_url = \'+obj.logo+\'></iframe>\';\n//    }\n//\n//    function switchImgAndIframe( img2frame ) {\n//        var tmpdiv,\n//                nodes = domUtils.getElementsByTagName( me.document, !img2frame ? "iframe" : "img" );\n//        for ( var i = 0, node; node = nodes[i++]; ) {\n//            if ( node.className != "edui-faked-webapp" ){\n//                continue;\n//            }\n//            tmpdiv = me.document.createElement( "div" );\n//            tmpdiv.innerHTML = createInsertStr( img2frame ? {url:node.getAttribute( "_url" ), width:node.width, height:node.height,title:node.title,logo:node.style.backgroundImage.replace("url(","").replace(")","")} : {url:node.getAttribute( "src", 2 ),title:node.title, width:node.width, height:node.height,logo:node.getAttribute("logo_url")}, img2frame ? true : false,false );\n//            node.parentNode.replaceChild( tmpdiv.firstChild, node );\n//        }\n//    }\n//\n//    me.addListener( "beforegetcontent", function () {\n//        switchImgAndIframe( true );\n//    } );\n//    me.addListener( \'aftersetcontent\', function () {\n//        switchImgAndIframe( false );\n//    } );\n//    me.addListener( \'aftergetcontent\', function ( cmdName ) {\n//        if ( cmdName == \'aftergetcontent\' && me.queryCommandState( \'source\' ) ){\n//            return;\n//        }\n//        switchImgAndIframe( false );\n//    } );\n//\n//    me.commands[\'webapp\'] = {\n//        execCommand:function ( cmd, obj ) {\n//            me.execCommand( "inserthtml", createInsertStr( obj, false,true ) );\n//        }\n//    };\n//};\nUE.plugin.register("webapp",function(){var me=this;function createInsertStr(obj,toEmbed){return!toEmbed?\'<img title="\'+obj.title+\'" width="\'+obj.width+\'" height="\'+obj.height+\'"\'+\' src="\'+me.options.UEDITOR_HOME_URL+\'themes/default/images/spacer.gif" _logo_url="\'+obj.logo+\'" style="background:url(\'+obj.logo+\') no-repeat center center; border:1px solid gray;" class="edui-faked-webapp" _url="\'+obj.url+\'" \'+(obj.align&&!obj.cssfloat?\'align="\'+obj.align+\'"\':"")+(obj.cssfloat?\'style="float:\'+obj.cssfloat+\'"\':"")+"/>":\'<iframe class="edui-faked-webapp" title="\'+obj.title+\'" \'+(obj.align&&!obj.cssfloat?\'align="\'+obj.align+\'"\':"")+(obj.cssfloat?\'style="float:\'+obj.cssfloat+\'"\':"")+\'width="\'+obj.width+\'" height="\'+obj.height+\'"  scrolling="no" frameborder="0" src="\'+obj.url+\'" logo_url = "\'+obj.logo+\'"></iframe>\';}return{outputRule:function outputRule(root){utils.each(root.getNodesByTagName("img"),function(node){var html;if(node.getAttr("class")=="edui-faked-webapp"){html=createInsertStr({title:node.getAttr("title"),width:node.getAttr("width"),height:node.getAttr("height"),align:node.getAttr("align"),cssfloat:node.getStyle("float"),url:node.getAttr("_url"),logo:node.getAttr("_logo_url")},true);var embed=UE.uNode.createElement(html);node.parentNode.replaceChild(embed,node);}});},inputRule:function inputRule(root){utils.each(root.getNodesByTagName("iframe"),function(node){if(node.getAttr("class")=="edui-faked-webapp"){var img=UE.uNode.createElement(createInsertStr({title:node.getAttr("title"),width:node.getAttr("width"),height:node.getAttr("height"),align:node.getAttr("align"),cssfloat:node.getStyle("float"),url:node.getAttr("src"),logo:node.getAttr("logo_url")}));node.parentNode.replaceChild(img,node);}});},commands:{/**\n             * 插入百度应用\n             * @command webapp\n             * @method execCommand\n             * @remind 需要百度APPKey\n             * @remind 百度应用主页： <a href="http://app.baidu.com/" target="_blank">http://app.baidu.com/</a>\n             * @param { Object } appOptions 应用所需的参数项， 支持的key有： title=>应用标题， width=>应用容器宽度，\n             * height=>应用容器高度，logo=>应用logo，url=>应用地址\n             * @example\n             * ```javascript\n             * //editor是编辑器实例\n             * //在编辑器里插入一个“植物大战僵尸”的APP\n             * editor.execCommand( \'webapp\' , {\n             *     title: \'植物大战僵尸\',\n             *     width: 560,\n             *     height: 465,\n             *     logo: \'应用展示的图片\',\n             *     url: \'百度应用的地址\'\n             * } );\n             * ```\n             */webapp:{execCommand:function execCommand(cmd,obj){var me=this,str=createInsertStr(utils.extend(obj,{align:"none"}),false);me.execCommand("inserthtml",str);},queryCommandState:function queryCommandState(){var me=this,img=me.selection.getRange().getClosedNode(),flag=img&&img.className=="edui-faked-webapp";return flag?1:0;}}}};});// plugins/template.js\n///import core\n///import plugins\\inserthtml.js\n///import plugins\\cleardoc.js\n///commands 模板\n///commandsName  template\n///commandsTitle  模板\n///commandsDialog  dialogs\\template\nUE.plugins["template"]=function(){UE.commands["template"]={execCommand:function execCommand(cmd,obj){obj.html&&this.execCommand("inserthtml",obj.html);}};this.addListener("click",function(type,evt){var el=evt.target||evt.srcElement,range=this.selection.getRange();var tnode=domUtils.findParent(el,function(node){if(node.className&&domUtils.hasClass(node,"ue_t")){return node;}},true);tnode&&range.selectNode(tnode).shrinkBoundary().select();});this.addListener("keydown",function(type,evt){var range=this.selection.getRange();if(!range.collapsed){if(!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey){var tnode=domUtils.findParent(range.startContainer,function(node){if(node.className&&domUtils.hasClass(node,"ue_t")){return node;}},true);if(tnode){domUtils.removeClasses(tnode,["ue_t"]);}}}});};// plugins/music.js\n/**\n * 插入音乐命令\n * @file\n */UE.plugin.register("music",function(){var me=this;function creatInsertStr(url,width,height,align,cssfloat,toEmbed){return!toEmbed?"<img "+(align&&!cssfloat?\'align="\'+align+\'"\':"")+(cssfloat?\'style="float:\'+cssfloat+\'"\':"")+\' width="\'+width+\'" height="\'+height+\'" _url="\'+url+\'" class="edui-faked-music"\'+\' src="\'+me.options.langPath+me.options.lang+\'/images/music.png" />\':\'<embed type="application/x-shockwave-flash" class="edui-faked-music" pluginspage="http://www.macromedia.com/go/getflashplayer"\'+\' src="\'+url+\'" width="\'+width+\'" height="\'+height+\'" \'+(align&&!cssfloat?\'align="\'+align+\'"\':"")+(cssfloat?\'style="float:\'+cssfloat+\'"\':"")+\' wmode="transparent" play="true" loop="false" menu="false" allowscriptaccess="never" allowfullscreen="true" >\';}return{outputRule:function outputRule(root){utils.each(root.getNodesByTagName("img"),function(node){var html;if(node.getAttr("class")=="edui-faked-music"){var cssfloat=node.getStyle("float");var align=node.getAttr("align");html=creatInsertStr(node.getAttr("_url"),node.getAttr("width"),node.getAttr("height"),align,cssfloat,true);var embed=UE.uNode.createElement(html);node.parentNode.replaceChild(embed,node);}});},inputRule:function inputRule(root){utils.each(root.getNodesByTagName("embed"),function(node){if(node.getAttr("class")=="edui-faked-music"){var cssfloat=node.getStyle("float");var align=node.getAttr("align");html=creatInsertStr(node.getAttr("src"),node.getAttr("width"),node.getAttr("height"),align,cssfloat,false);var img=UE.uNode.createElement(html);node.parentNode.replaceChild(img,node);}});},commands:{/**\n             * 插入音乐\n             * @command music\n             * @method execCommand\n             * @param { Object } musicOptions 插入音乐的参数项， 支持的key有： url=>音乐地址；\n             * width=>音乐容器宽度；height=>音乐容器高度；align=>音乐文件的对齐方式， 可选值有: left, center, right, none\n             * @example\n             * ```javascript\n             * //editor是编辑器实例\n             * //在编辑器里插入一个“植物大战僵尸”的APP\n             * editor.execCommand( \'music\' , {\n             *     width: 400,\n             *     height: 95,\n             *     align: "center",\n             *     url: "音乐地址"\n             * } );\n             * ```\n             */music:{execCommand:function execCommand(cmd,musicObj){var me=this,str=creatInsertStr(musicObj.url,musicObj.width||400,musicObj.height||95,"none",false);me.execCommand("inserthtml",str);},queryCommandState:function queryCommandState(){var me=this,img=me.selection.getRange().getClosedNode(),flag=img&&img.className=="edui-faked-music";return flag?1:0;}}}};});// plugins/autoupload.js\n/**\n * @description\n * 1.拖放文件到编辑区域，自动上传并插入到选区\n * 2.插入粘贴板的图片，自动上传并插入到选区\n * @author Jinqn\n * @date 2013-10-14\n */UE.plugin.register("autoupload",function(){function sendAndInsertFile(file,editor){var me=editor;//模拟数据\nvar fieldName,urlPrefix,maxSize,allowFiles,actionUrl,loadingHtml,errorHandler,successHandler,filetype=/image\\/\\w+/i.test(file.type)?"image":"file",loadingId="loading_"+(+new Date()).toString(36);fieldName=me.getOpt(filetype+"FieldName");urlPrefix=me.getOpt(filetype+"UrlPrefix");maxSize=me.getOpt(filetype+"MaxSize");allowFiles=me.getOpt(filetype+"AllowFiles");actionUrl=me.getActionUrl(me.getOpt(filetype+"ActionName"));errorHandler=function errorHandler(title){var loader=me.document.getElementById(loadingId);loader&&domUtils.remove(loader);me.fireEvent("showmessage",{id:loadingId,content:title,type:"error",timeout:4000});};if(filetype=="image"){loadingHtml=\'<img class="loadingclass" id="\'+loadingId+\'" src="\'+me.options.themePath+me.options.theme+\'/images/spacer.gif">\';successHandler=function successHandler(data){var link=urlPrefix+data.url,loader=me.document.getElementById(loadingId);if(loader){domUtils.removeClasses(loader,"loadingclass");loader.setAttribute("src",link);loader.setAttribute("_src",link);loader.setAttribute("alt",data.original||"");loader.removeAttribute("id");me.trigger("contentchange",loader);}};}else{loadingHtml="<p>"+\'<img class="loadingclass" id="\'+loadingId+\'" src="\'+me.options.themePath+me.options.theme+\'/images/spacer.gif">\'+"</p>";successHandler=function successHandler(data){var link=urlPrefix+data.url,loader=me.document.getElementById(loadingId);var rng=me.selection.getRange(),bk=rng.createBookmark();rng.selectNode(loader).select();me.execCommand("insertfile",{url:link});rng.moveToBookmark(bk).select();};}/* 插入loading的占位符 */me.execCommand("inserthtml",loadingHtml);/* 判断后端配置是否没有加载成功 */if(!me.getOpt(filetype+"ActionName")){errorHandler(me.getLang("autoupload.errorLoadConfig"));return;}/* 判断文件大小是否超出限制 */if(file.size>maxSize){errorHandler(me.getLang("autoupload.exceedSizeError"));return;}/* 判断文件格式是否超出允许 */var fileext=file.name?file.name.substr(file.name.lastIndexOf(".")):"";if(fileext&&filetype!="image"||allowFiles&&(allowFiles.join("")+".").indexOf(fileext.toLowerCase()+".")==-1){errorHandler(me.getLang("autoupload.exceedTypeError"));return;}/* 创建Ajax并提交 */var xhr=new XMLHttpRequest(),fd=new FormData(),params=utils.serializeParam(me.queryCommandValue("serverparam"))||"",url=utils.formatUrl(actionUrl+(actionUrl.indexOf("?")==-1?"?":"&")+params);fd.append(fieldName,file,file.name||"blob."+file.type.substr("image/".length));fd.append("type","ajax");xhr.open("post",url,true);xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");xhr.addEventListener("load",function(e){try{var json=new Function("return "+utils.trim(e.target.response))();if(json.state=="SUCCESS"&&json.url){successHandler(json);}else{errorHandler(json.state);}}catch(er){errorHandler(me.getLang("autoupload.loadError"));}});xhr.send(fd);}function getPasteImage(e){return e.clipboardData&&e.clipboardData.items&&e.clipboardData.items.length==1&&/^image\\//.test(e.clipboardData.items[0].type)?e.clipboardData.items:null;}function getDropImage(e){return e.dataTransfer&&e.dataTransfer.files?e.dataTransfer.files:null;}return{outputRule:function outputRule(root){utils.each(root.getNodesByTagName("img"),function(n){if(/\\b(loaderrorclass)|(bloaderrorclass)\\b/.test(n.getAttr("class"))){n.parentNode.removeChild(n);}});utils.each(root.getNodesByTagName("p"),function(n){if(/\\bloadpara\\b/.test(n.getAttr("class"))){n.parentNode.removeChild(n);}});},bindEvents:{defaultOptions:{//默认间隔时间\nenableDragUpload:true,enablePasteUpload:true},//插入粘贴板的图片，拖放插入图片\nready:function ready(e){var me=this;if(window.FormData&&window.FileReader){var handler=function handler(e){var hasImg=false,items;//获取粘贴板文件列表或者拖放文件列表\nitems=e.type=="paste"?getPasteImage(e):getDropImage(e);if(items){var len=items.length,file;while(len--){file=items[len];if(file.getAsFile)file=file.getAsFile();if(file&&file.size>0){sendAndInsertFile(file,me);hasImg=true;}}hasImg&&e.preventDefault();}};if(me.getOpt("enablePasteUpload")!==false){domUtils.on(me.body,"paste ",handler);}if(me.getOpt("enableDragUpload")!==false){domUtils.on(me.body,"drop",handler);//取消拖放图片时出现的文字光标位置提示\ndomUtils.on(me.body,"dragover",function(e){if(e.dataTransfer.types[0]=="Files"){e.preventDefault();}});}else{if(browser.gecko){domUtils.on(me.body,"drop",function(e){if(getDropImage(e)){e.preventDefault();}});}}//设置loading的样式\nutils.cssRule("loading",".loadingclass{display:inline-block;cursor:default;background: url(\'"+this.options.themePath+this.options.theme+"/images/loading.gif\') no-repeat center center transparent;border:1px solid #cccccc;margin-left:1px;height: 22px;width: 22px;}\\n"+".loaderrorclass{display:inline-block;cursor:default;background: url(\'"+this.options.themePath+this.options.theme+"/images/loaderror.png\') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;"+"}",this.document);}}}};});// plugins/autosave.js\nUE.plugin.register("autosave",function(){var me=this,//无限循环保护\nlastSaveTime=new Date(),//最小保存间隔时间\nMIN_TIME=20,//auto save key\nsaveKey=null;function save(editor){var saveData;if(new Date()-lastSaveTime<MIN_TIME){return;}if(!editor.hasContents()){//这里不能调用命令来删除， 会造成事件死循环\nsaveKey&&me.removePreferences(saveKey);return;}lastSaveTime=new Date();editor._saveFlag=null;saveData=me.body.innerHTML;if(editor.fireEvent("beforeautosave",{content:saveData})===false){return;}me.setPreferences(saveKey,saveData);editor.fireEvent("afterautosave",{content:saveData});}return{defaultOptions:{//默认间隔时间\nsaveInterval:500,enableAutoSave:true},bindEvents:{ready:function ready(){var _suffix="-drafts-data",key=null;if(me.key){key=me.key+_suffix;}else{key=(me.container.parentNode.id||"ue-common")+_suffix;}//页面地址+编辑器ID 保持唯一\nsaveKey=(location.protocol+location.host+location.pathname).replace(/[.:\\/]/g,"_")+key;},contentchange:function contentchange(){if(!me.getOpt("enableAutoSave")){return;}if(!saveKey){return;}if(me._saveFlag){window.clearTimeout(me._saveFlag);}if(me.options.saveInterval>0){me._saveFlag=window.setTimeout(function(){save(me);},me.options.saveInterval);}else{save(me);}}},commands:{clearlocaldata:{execCommand:function execCommand(cmd,name){if(saveKey&&me.getPreferences(saveKey)){me.removePreferences(saveKey);}},notNeedUndo:true,ignoreContentChange:true},getlocaldata:{execCommand:function execCommand(cmd,name){return saveKey?me.getPreferences(saveKey)||"":"";},notNeedUndo:true,ignoreContentChange:true},drafts:{execCommand:function execCommand(cmd,name){if(saveKey){me.body.innerHTML=me.getPreferences(saveKey)||"<p>"+domUtils.fillHtml+"</p>";me.focus(true);}},queryCommandState:function queryCommandState(){return saveKey?me.getPreferences(saveKey)===null?-1:0:-1;},notNeedUndo:true,ignoreContentChange:true}}};});// plugins/charts.js\nUE.plugin.register("charts",function(){var me=this;return{bindEvents:{chartserror:function chartserror(){}},commands:{charts:{execCommand:function execCommand(cmd,data){var tableNode=domUtils.findParentByTagName(this.selection.getRange().startContainer,"table",true),flagText=[],config={};if(!tableNode){return false;}if(!validData(tableNode)){me.fireEvent("chartserror");return false;}config.title=data.title||"";config.subTitle=data.subTitle||"";config.xTitle=data.xTitle||"";config.yTitle=data.yTitle||"";config.suffix=data.suffix||"";config.tip=data.tip||"";//数据对齐方式\nconfig.dataFormat=data.tableDataFormat||"";//图表类型\nconfig.chartType=data.chartType||0;for(var key in config){if(!config.hasOwnProperty(key)){continue;}flagText.push(key+":"+config[key]);}tableNode.setAttribute("data-chart",flagText.join(";"));domUtils.addClass(tableNode,"edui-charts-table");},queryCommandState:function queryCommandState(cmd,name){var tableNode=domUtils.findParentByTagName(this.selection.getRange().startContainer,"table",true);return tableNode&&validData(tableNode)?0:-1;}}},inputRule:function inputRule(root){utils.each(root.getNodesByTagName("table"),function(tableNode){if(tableNode.getAttr("data-chart")!==undefined){tableNode.setAttr("style");}});},outputRule:function outputRule(root){utils.each(root.getNodesByTagName("table"),function(tableNode){if(tableNode.getAttr("data-chart")!==undefined){tableNode.setAttr("style","display: none;");}});}};function validData(table){var firstRows=null,cellCount=0;//行数不够\nif(table.rows.length<2){return false;}//列数不够\nif(table.rows[0].cells.length<2){return false;}//第一行所有cell必须是th\nfirstRows=table.rows[0].cells;cellCount=firstRows.length;for(var i=0,cell;cell=firstRows[i];i++){if(cell.tagName.toLowerCase()!=="th"){return false;}}for(var i=1,row;row=table.rows[i];i++){//每行单元格数不匹配， 返回false\nif(row.cells.length!=cellCount){return false;}//第一列不是th也返回false\nif(row.cells[0].tagName.toLowerCase()!=="th"){return false;}for(var j=1,cell;cell=row.cells[j];j++){var value=utils.trim(cell.innerText||cell.textContent||"");value=value.replace(new RegExp(UE.dom.domUtils.fillChar,"g"),"").replace(/^\\s+|\\s+$/g,"");//必须是数字\nif(!/^\\d*\\.?\\d+$/.test(value)){return false;}}}return true;}});// plugins/section.js\n/**\n * 目录大纲支持插件\n * @file\n * @since 1.3.0\n */UE.plugin.register("section",function(){/* 目录节点对象 */function Section(option){this.tag="";this.level=-1,this.dom=null;this.nextSection=null;this.previousSection=null;this.parentSection=null;this.startAddress=[];this.endAddress=[];this.children=[];}function getSection(option){var section=new Section();return utils.extend(section,option);}function getNodeFromAddress(startAddress,root){var current=root;for(var i=0;i<startAddress.length;i++){if(!current.childNodes)return null;current=current.childNodes[startAddress[i]];}return current;}var me=this;return{bindMultiEvents:{type:"aftersetcontent afterscencerestore",handler:function handler(){me.fireEvent("updateSections");}},bindEvents:{/* 初始化、拖拽、粘贴、执行setcontent之后 */ready:function ready(){me.fireEvent("updateSections");domUtils.on(me.body,"drop paste",function(){me.fireEvent("updateSections");});},/* 执行paragraph命令之后 */afterexeccommand:function afterexeccommand(type,cmd){if(cmd=="paragraph"){me.fireEvent("updateSections");}},/* 部分键盘操作，触发updateSections事件 */keyup:function keyup(type,e){var me=this,range=me.selection.getRange();if(range.collapsed!=true){me.fireEvent("updateSections");}else{var keyCode=e.keyCode||e.which;if(keyCode==13||keyCode==8||keyCode==46){me.fireEvent("updateSections");}}}},commands:{getsections:{execCommand:function execCommand(cmd,levels){var levelFn=levels||["h1","h2","h3","h4","h5","h6"];for(var i=0;i<levelFn.length;i++){if(typeof levelFn[i]=="string"){levelFn[i]=function(fn){return function(node){return node.tagName==fn.toUpperCase();};}(levelFn[i]);}else if(typeof levelFn[i]!="function"){levelFn[i]=function(node){return null;};}}function getSectionLevel(node){for(var i=0;i<levelFn.length;i++){if(levelFn[i](node))return i;}return-1;}var me=this,Directory=getSection({level:-1,title:"root"}),previous=Directory;function traversal(node,Directory){var level,tmpSection=null,parent,child,children=node.childNodes;for(var i=0,len=children.length;i<len;i++){child=children[i];level=getSectionLevel(child);if(level>=0){var address=me.selection.getRange().selectNode(child).createAddress(true).startAddress,current=getSection({tag:child.tagName,title:child.innerText||child.textContent||"",level:level,dom:child,startAddress:utils.clone(address,[]),endAddress:utils.clone(address,[]),children:[]});previous.nextSection=current;current.previousSection=previous;parent=previous;while(level<=parent.level){parent=parent.parentSection;}current.parentSection=parent;parent.children.push(current);tmpSection=previous=current;}else{child.nodeType===1&&traversal(child,Directory);tmpSection&&tmpSection.endAddress[tmpSection.endAddress.length-1]++;}}}traversal(me.body,Directory);return Directory;},notNeedUndo:true},movesection:{execCommand:function execCommand(cmd,sourceSection,targetSection,isAfter){var me=this,targetAddress,target;if(!sourceSection||!targetSection||targetSection.level==-1)return;targetAddress=isAfter?targetSection.endAddress:targetSection.startAddress;target=getNodeFromAddress(targetAddress,me.body);/* 判断目标地址是否被源章节包含 */if(!targetAddress||!target||isContainsAddress(sourceSection.startAddress,sourceSection.endAddress,targetAddress))return;var startNode=getNodeFromAddress(sourceSection.startAddress,me.body),endNode=getNodeFromAddress(sourceSection.endAddress,me.body),current,nextNode;if(isAfter){current=endNode;while(current&&!(domUtils.getPosition(startNode,current)&domUtils.POSITION_FOLLOWING)){nextNode=current.previousSibling;domUtils.insertAfter(target,current);if(current==startNode)break;current=nextNode;}}else{current=startNode;while(current&&!(domUtils.getPosition(current,endNode)&domUtils.POSITION_FOLLOWING)){nextNode=current.nextSibling;target.parentNode.insertBefore(current,target);if(current==endNode)break;current=nextNode;}}me.fireEvent("updateSections");/* 获取地址的包含关系 */function isContainsAddress(startAddress,endAddress,addressTarget){var isAfterStartAddress=false,isBeforeEndAddress=false;for(var i=0;i<startAddress.length;i++){if(i>=addressTarget.length)break;if(addressTarget[i]>startAddress[i]){isAfterStartAddress=true;break;}else if(addressTarget[i]<startAddress[i]){break;}}for(var i=0;i<endAddress.length;i++){if(i>=addressTarget.length)break;if(addressTarget[i]<startAddress[i]){isBeforeEndAddress=true;break;}else if(addressTarget[i]>startAddress[i]){break;}}return isAfterStartAddress&&isBeforeEndAddress;}}},deletesection:{execCommand:function execCommand(cmd,section,keepChildren){var me=this;if(!section)return;function getNodeFromAddress(startAddress){var current=me.body;for(var i=0;i<startAddress.length;i++){if(!current.childNodes)return null;current=current.childNodes[startAddress[i]];}return current;}var startNode=getNodeFromAddress(section.startAddress),endNode=getNodeFromAddress(section.endAddress),current=startNode,nextNode;if(!keepChildren){while(current&&domUtils.inDoc(endNode,me.document)&&!(domUtils.getPosition(current,endNode)&domUtils.POSITION_FOLLOWING)){nextNode=current.nextSibling;domUtils.remove(current);current=nextNode;}}else{domUtils.remove(current);}me.fireEvent("updateSections");}},selectsection:{execCommand:function execCommand(cmd,section){if(!section&&!section.dom)return false;var me=this,range=me.selection.getRange(),address={startAddress:utils.clone(section.startAddress,[]),endAddress:utils.clone(section.endAddress,[])};address.endAddress[address.endAddress.length-1]++;range.moveToAddress(address).select().scrollToView();return true;},notNeedUndo:true},scrolltosection:{execCommand:function execCommand(cmd,section){if(!section&&!section.dom)return false;var me=this,range=me.selection.getRange(),address={startAddress:section.startAddress,endAddress:section.endAddress};address.endAddress[address.endAddress.length-1]++;range.moveToAddress(address).scrollToView();return true;},notNeedUndo:true}}};});// plugins/simpleupload.js\n/**\n * @description\n * 简单上传:点击按钮,直接选择文件上传\n * @author Jinqn\n * @date 2014-03-31\n */UE.plugin.register("simpleupload",function(){var me=this,isLoaded=false,containerBtn;function initUploadBtn(){var w=containerBtn.offsetWidth||20,h=containerBtn.offsetHeight||20,btnIframe=document.createElement("iframe"),btnStyle="display:block;width:"+w+"px;height:"+h+"px;overflow:hidden;border:0;margin:0;padding:0;position:absolute;top:0;left:0;filter:alpha(opacity=0);-moz-opacity:0;-khtml-opacity: 0;opacity: 0;cursor:pointer;";domUtils.on(btnIframe,"load",function(){var timestrap=(+new Date()).toString(36),wrapper,btnIframeDoc,btnIframeBody;btnIframeDoc=btnIframe.contentDocument||btnIframe.contentWindow.document;btnIframeBody=btnIframeDoc.body;wrapper=btnIframeDoc.createElement("div");wrapper.innerHTML=\'<form id="edui_form_\'+timestrap+\'" target="edui_iframe_\'+timestrap+\'" method="POST" enctype="multipart/form-data" action="\'+me.getOpt("serverUrl")+\'" \'+\'style="\'+btnStyle+\'">\'+\'<input id="edui_input_\'+timestrap+\'" type="file" accept="image/*" name="\'+me.options.imageFieldName+\'" \'+\'style="\'+btnStyle+\'">\'+"</form>"+\'<iframe id="edui_iframe_\'+timestrap+\'" name="edui_iframe_\'+timestrap+\'" style="display:none;width:0;height:0;border:0;margin:0;padding:0;position:absolute;"></iframe>\';wrapper.className="edui-"+me.options.theme;wrapper.id=me.ui.id+"_iframeupload";btnIframeBody.style.cssText=btnStyle;btnIframeBody.style.width=w+"px";btnIframeBody.style.height=h+"px";btnIframeBody.appendChild(wrapper);if(btnIframeBody.parentNode){btnIframeBody.parentNode.style.width=w+"px";btnIframeBody.parentNode.style.height=w+"px";}var form=btnIframeDoc.getElementById("edui_form_"+timestrap);var input=btnIframeDoc.getElementById("edui_input_"+timestrap);var iframe=btnIframeDoc.getElementById("edui_iframe_"+timestrap);domUtils.on(input,"change",function(){if(!input.value)return;var loadingId="loading_"+(+new Date()).toString(36);var params=utils.serializeParam(me.queryCommandValue("serverparam"))||"";var imageActionUrl=me.getActionUrl(me.getOpt("imageActionName"));var allowFiles=me.getOpt("imageAllowFiles");me.focus();me.execCommand("inserthtml",\'<img class="loadingclass" id="\'+loadingId+\'" src="\'+me.options.themePath+me.options.theme+\'/images/spacer.gif">\');function callback(){try{var link,json,loader,body=(iframe.contentDocument||iframe.contentWindow.document).body,result=body.innerText||body.textContent||"";json=new Function("return "+result)();link=me.options.imageUrlPrefix+json.url;if(json.state=="SUCCESS"&&json.url){loader=me.document.getElementById(loadingId);domUtils.removeClasses(loader,"loadingclass");loader.setAttribute("src",link);loader.setAttribute("_src",link);loader.setAttribute("alt",json.original||"");loader.removeAttribute("id");me.fireEvent("contentchange");}else{showErrorLoader&&showErrorLoader(json.state);}}catch(er){showErrorLoader&&showErrorLoader(me.getLang("simpleupload.loadError"));}form.reset();domUtils.un(iframe,"load",callback);}function showErrorLoader(title){if(loadingId){var loader=me.document.getElementById(loadingId);loader&&domUtils.remove(loader);me.fireEvent("showmessage",{id:loadingId,content:title,type:"error",timeout:4000});}}/* 判断后端配置是否没有加载成功 */if(!me.getOpt("imageActionName")){errorHandler(me.getLang("autoupload.errorLoadConfig"));return;}// 判断文件格式是否错误\nvar filename=input.value,fileext=filename?filename.substr(filename.lastIndexOf(".")):"";if(!fileext||allowFiles&&(allowFiles.join("")+".").indexOf(fileext.toLowerCase()+".")==-1){showErrorLoader(me.getLang("simpleupload.exceedTypeError"));return;}domUtils.on(iframe,"load",callback);form.action=utils.formatUrl(imageActionUrl+(imageActionUrl.indexOf("?")==-1?"?":"&")+params);form.submit();});var stateTimer;me.addListener("selectionchange",function(){clearTimeout(stateTimer);stateTimer=setTimeout(function(){var state=me.queryCommandState("simpleupload");if(state==-1){input.disabled="disabled";}else{input.disabled=false;}},400);});isLoaded=true;});btnIframe.style.cssText=btnStyle;containerBtn.appendChild(btnIframe);}return{bindEvents:{ready:function ready(){//设置loading的样式\nutils.cssRule("loading",".loadingclass{display:inline-block;cursor:default;background: url(\'"+this.options.themePath+this.options.theme+"/images/loading.gif\') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;}\\n"+".loaderrorclass{display:inline-block;cursor:default;background: url(\'"+this.options.themePath+this.options.theme+"/images/loaderror.png\') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;"+"}",this.document);},/* 初始化简单上传按钮 */simpleuploadbtnready:function simpleuploadbtnready(type,container){containerBtn=container;me.afterConfigReady(initUploadBtn);}},outputRule:function outputRule(root){utils.each(root.getNodesByTagName("img"),function(n){if(/\\b(loaderrorclass)|(bloaderrorclass)\\b/.test(n.getAttr("class"))){n.parentNode.removeChild(n);}});},commands:{simpleupload:{queryCommandState:function queryCommandState(){return isLoaded?0:-1;}}}};});// plugins/serverparam.js\n/**\n * 服务器提交的额外参数列表设置插件\n * @file\n * @since 1.2.6.1\n */UE.plugin.register("serverparam",function(){var me=this,serverParam={};return{commands:{/**\n             * 修改服务器提交的额外参数列表,清除所有项\n             * @command serverparam\n             * @method execCommand\n             * @param { String } cmd 命令字符串\n             * @example\n             * ```javascript\n             * editor.execCommand(\'serverparam\');\n             * editor.queryCommandValue(\'serverparam\'); //返回空\n             * ```\n             *//**\n             * 修改服务器提交的额外参数列表,删除指定项\n             * @command serverparam\n             * @method execCommand\n             * @param { String } cmd 命令字符串\n             * @param { String } key 要清除的属性\n             * @example\n             * ```javascript\n             * editor.execCommand(\'serverparam\', \'name\'); //删除属性name\n             * ```\n             *//**\n             * 修改服务器提交的额外参数列表,使用键值添加项\n             * @command serverparam\n             * @method execCommand\n             * @param { String } cmd 命令字符串\n             * @param { String } key 要添加的属性\n             * @param { String } value 要添加属性的值\n             * @example\n             * ```javascript\n             * editor.execCommand(\'serverparam\', \'name\', \'hello\');\n             * editor.queryCommandValue(\'serverparam\'); //返回对象 {\'name\': \'hello\'}\n             * ```\n             *//**\n             * 修改服务器提交的额外参数列表,传入键值对对象添加多项\n             * @command serverparam\n             * @method execCommand\n             * @param { String } cmd 命令字符串\n             * @param { Object } key 传入的键值对对象\n             * @example\n             * ```javascript\n             * editor.execCommand(\'serverparam\', {\'name\': \'hello\'});\n             * editor.queryCommandValue(\'serverparam\'); //返回对象 {\'name\': \'hello\'}\n             * ```\n             *//**\n             * 修改服务器提交的额外参数列表,使用自定义函数添加多项\n             * @command serverparam\n             * @method execCommand\n             * @param { String } cmd 命令字符串\n             * @param { Function } key 自定义获取参数的函数\n             * @example\n             * ```javascript\n             * editor.execCommand(\'serverparam\', function(editor){\n             *     return {\'key\': \'value\'};\n             * });\n             * editor.queryCommandValue(\'serverparam\'); //返回对象 {\'key\': \'value\'}\n             * ```\n             *//**\n             * 获取服务器提交的额外参数列表\n             * @command serverparam\n             * @method queryCommandValue\n             * @param { String } cmd 命令字符串\n             * @example\n             * ```javascript\n             * editor.queryCommandValue( \'serverparam\' ); //返回对象 {\'key\': \'value\'}\n             * ```\n             */serverparam:{execCommand:function execCommand(cmd,key,value){if(key===undefined||key===null){//不传参数,清空列表\nserverParam={};}else if(utils.isString(key)){//传入键值\nif(value===undefined||value===null){delete serverParam[key];}else{serverParam[key]=value;}}else if(utils.isObject(key)){//传入对象,覆盖列表项\nutils.extend(serverParam,key,false);}else if(utils.isFunction(key)){//传入函数,添加列表项\nutils.extend(serverParam,key(),false);}},queryCommandValue:function queryCommandValue(){return serverParam||{};}}}};});// plugins/insertfile.js\n/**\n * 插入附件\n */UE.plugin.register("insertfile",function(){var me=this;function getFileIcon(url){var ext=url.substr(url.lastIndexOf(".")+1).toLowerCase(),maps={rar:"icon_rar.gif",zip:"icon_rar.gif",tar:"icon_rar.gif",gz:"icon_rar.gif",bz2:"icon_rar.gif",doc:"icon_doc.gif",docx:"icon_doc.gif",pdf:"icon_pdf.gif",mp3:"icon_mp3.gif",xls:"icon_xls.gif",chm:"icon_chm.gif",ppt:"icon_ppt.gif",pptx:"icon_ppt.gif",avi:"icon_mv.gif",rmvb:"icon_mv.gif",wmv:"icon_mv.gif",flv:"icon_mv.gif",swf:"icon_mv.gif",rm:"icon_mv.gif",exe:"icon_exe.gif",psd:"icon_psd.gif",txt:"icon_txt.gif",jpg:"icon_jpg.gif",png:"icon_jpg.gif",jpeg:"icon_jpg.gif",gif:"icon_jpg.gif",ico:"icon_jpg.gif",bmp:"icon_jpg.gif"};return maps[ext]?maps[ext]:maps["txt"];}return{commands:{insertfile:{execCommand:function execCommand(command,filelist){filelist=utils.isArray(filelist)?filelist:[filelist];if(me.fireEvent("beforeinsertfile",filelist)===true){return;}var i,item,icon,title,html="",URL=me.getOpt("UEDITOR_HOME_URL"),iconDir=URL+(URL.substr(URL.length-1)=="/"?"":"/")+"dialogs/attachment/fileTypeImages/";for(i=0;i<filelist.length;i++){item=filelist[i];icon=iconDir+getFileIcon(item.url);title=item.title||item.url.substr(item.url.lastIndexOf("/")+1);html+=\'<p style="line-height: 16px;">\'+\'<img style="vertical-align: middle; margin-right: 2px;" src="\'+icon+\'" _src="\'+icon+\'" />\'+\'<a style="font-size:12px; color:#0066cc;" href="\'+item.url+\'" title="\'+title+\'">\'+title+"</a>"+"</p>";}me.execCommand("insertHtml",html);me.fireEvent("afterinsertfile",filelist);}}}};});// ui/ui.js\nvar baidu=baidu||{};baidu.editor=baidu.editor||{};UE.ui=baidu.editor.ui={};// ui/uiutils.js\n(function(){var browser=baidu.editor.browser,domUtils=baidu.editor.dom.domUtils;var magic="$EDITORUI";var root=window[magic]={};var uidMagic="ID"+magic;var uidCount=0;var uiUtils=baidu.editor.ui.uiUtils={uid:function uid(obj){return obj?obj[uidMagic]||(obj[uidMagic]=++uidCount):++uidCount;},hook:function hook(fn,callback){var _dg;if(fn&&fn._callbacks){_dg=fn;}else{_dg=function dg(){var q;if(fn){q=fn.apply(this,arguments);}var callbacks=_dg._callbacks;var k=callbacks.length;while(k--){var r=callbacks[k].apply(this,arguments);if(q===undefined){q=r;}}return q;};_dg._callbacks=[];}_dg._callbacks.push(callback);return _dg;},createElementByHtml:function createElementByHtml(html){var el=document.createElement("div");el.innerHTML=html;el=el.firstChild;el.parentNode.removeChild(el);return el;},getViewportElement:function getViewportElement(){return browser.ie&&browser.quirks?document.body:document.documentElement;},getClientRect:function getClientRect(element){var bcr;//trace  IE6下在控制编辑器显隐时可能会报错，catch一下\ntry{bcr=element.getBoundingClientRect();}catch(e){bcr={left:0,top:0,height:0,width:0};}var rect={left:Math.round(bcr.left),top:Math.round(bcr.top),height:Math.round(bcr.bottom-bcr.top),width:Math.round(bcr.right-bcr.left)};var doc;while((doc=element.ownerDocument)!==document&&(element=domUtils.getWindow(doc).frameElement)){bcr=element.getBoundingClientRect();rect.left+=bcr.left;rect.top+=bcr.top;}rect.bottom=rect.top+rect.height;rect.right=rect.left+rect.width;return rect;},getViewportRect:function getViewportRect(){var viewportEl=uiUtils.getViewportElement();var width=(window.innerWidth||viewportEl.clientWidth)|0;var height=(window.innerHeight||viewportEl.clientHeight)|0;return{left:0,top:0,height:height,width:width,bottom:height,right:width};},setViewportOffset:function setViewportOffset(element,offset){var rect;var fixedLayer=uiUtils.getFixedLayer();if(element.parentNode===fixedLayer){element.style.left=offset.left+"px";element.style.top=offset.top+"px";}else{domUtils.setViewportOffset(element,offset);}},getEventOffset:function getEventOffset(evt){var el=evt.target||evt.srcElement;var rect=uiUtils.getClientRect(el);var offset=uiUtils.getViewportOffsetByEvent(evt);return{left:offset.left-rect.left,top:offset.top-rect.top};},getViewportOffsetByEvent:function getViewportOffsetByEvent(evt){var el=evt.target||evt.srcElement;var frameEl=domUtils.getWindow(el).frameElement;var offset={left:evt.clientX,top:evt.clientY};if(frameEl&&el.ownerDocument!==document){var rect=uiUtils.getClientRect(frameEl);offset.left+=rect.left;offset.top+=rect.top;}return offset;},setGlobal:function setGlobal(id,obj){root[id]=obj;return magic+\'["\'+id+\'"]\';},unsetGlobal:function unsetGlobal(id){delete root[id];},copyAttributes:function copyAttributes(tgt,src){var attributes=src.attributes;var k=attributes.length;while(k--){var attrNode=attributes[k];if(attrNode.nodeName!="style"&&attrNode.nodeName!="class"&&(!browser.ie||attrNode.specified)){tgt.setAttribute(attrNode.nodeName,attrNode.nodeValue);}}if(src.className){domUtils.addClass(tgt,src.className);}if(src.style.cssText){tgt.style.cssText+=";"+src.style.cssText;}},removeStyle:function removeStyle(el,styleName){if(el.style.removeProperty){el.style.removeProperty(styleName);}else if(el.style.removeAttribute){el.style.removeAttribute(styleName);}else throw"";},contains:function contains(elA,elB){return elA&&elB&&(elA===elB?false:elA.contains?elA.contains(elB):elA.compareDocumentPosition(elB)&16);},startDrag:function startDrag(evt,callbacks,doc){var doc=doc||document;var startX=evt.clientX;var startY=evt.clientY;function handleMouseMove(evt){var x=evt.clientX-startX;var y=evt.clientY-startY;callbacks.ondragmove(x,y,evt);if(evt.stopPropagation){evt.stopPropagation();}else{evt.cancelBubble=true;}}if(doc.addEventListener){var handleMouseUp=function handleMouseUp(evt){doc.removeEventListener("mousemove",handleMouseMove,true);doc.removeEventListener("mouseup",handleMouseUp,true);window.removeEventListener("mouseup",handleMouseUp,true);callbacks.ondragstop();};doc.addEventListener("mousemove",handleMouseMove,true);doc.addEventListener("mouseup",handleMouseUp,true);window.addEventListener("mouseup",handleMouseUp,true);evt.preventDefault();}else{var releaseCaptrue=function releaseCaptrue(){elm.releaseCapture();elm.detachEvent("onmousemove",handleMouseMove);elm.detachEvent("onmouseup",releaseCaptrue);elm.detachEvent("onlosecaptrue",releaseCaptrue);callbacks.ondragstop();};var elm=evt.srcElement;elm.setCapture();elm.attachEvent("onmousemove",handleMouseMove);elm.attachEvent("onmouseup",releaseCaptrue);elm.attachEvent("onlosecaptrue",releaseCaptrue);evt.returnValue=false;}callbacks.ondragstart();},getFixedLayer:function getFixedLayer(){var layer=document.getElementById("edui_fixedlayer");if(layer==null){layer=document.createElement("div");layer.id="edui_fixedlayer";document.body.appendChild(layer);if(browser.ie&&browser.version<=8){layer.style.position="absolute";bindFixedLayer();setTimeout(updateFixedOffset);}else{layer.style.position="fixed";}layer.style.left="0";layer.style.top="0";layer.style.width="0";layer.style.height="0";}return layer;},makeUnselectable:function makeUnselectable(element){if(browser.opera||browser.ie&&browser.version<9){element.unselectable="on";if(element.hasChildNodes()){for(var i=0;i<element.childNodes.length;i++){if(element.childNodes[i].nodeType==1){uiUtils.makeUnselectable(element.childNodes[i]);}}}}else{if(element.style.MozUserSelect!==undefined){element.style.MozUserSelect="none";}else if(element.style.WebkitUserSelect!==undefined){element.style.WebkitUserSelect="none";}else if(element.style.KhtmlUserSelect!==undefined){element.style.KhtmlUserSelect="none";}}}};function updateFixedOffset(){var layer=document.getElementById("edui_fixedlayer");uiUtils.setViewportOffset(layer,{left:0,top:0});//        layer.style.display = \'none\';\n//        layer.style.display = \'block\';\n//#trace: 1354\n//        setTimeout(updateFixedOffset);\n}function bindFixedLayer(adjOffset){domUtils.on(window,"scroll",updateFixedOffset);domUtils.on(window,"resize",baidu.editor.utils.defer(updateFixedOffset,0,true));}})();// ui/uibase.js\n(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,EventBase=baidu.editor.EventBase,UIBase=baidu.editor.ui.UIBase=function(){};UIBase.prototype={className:"",uiName:"",initOptions:function initOptions(options){var me=this;for(var k in options){me[k]=options[k];}this.id=this.id||"edui"+uiUtils.uid();},initUIBase:function initUIBase(){this._globalKey=utils.unhtml(uiUtils.setGlobal(this.id,this));},render:function render(holder){var html=this.renderHtml();var el=uiUtils.createElementByHtml(html);//by xuheng 给每个node添加class\nvar list=domUtils.getElementsByTagName(el,"*");var theme="edui-"+(this.theme||this.editor.options.theme);var layer=document.getElementById("edui_fixedlayer");for(var i=0,node;node=list[i++];){domUtils.addClass(node,theme);}domUtils.addClass(el,theme);if(layer){layer.className="";domUtils.addClass(layer,theme);}var seatEl=this.getDom();if(seatEl!=null){seatEl.parentNode.replaceChild(el,seatEl);uiUtils.copyAttributes(el,seatEl);}else{if(typeof holder=="string"){holder=document.getElementById(holder);}holder=holder||uiUtils.getFixedLayer();domUtils.addClass(holder,theme);holder.appendChild(el);}this.postRender();},getDom:function getDom(name){if(!name){return document.getElementById(this.id);}else{return document.getElementById(this.id+"_"+name);}},postRender:function postRender(){this.fireEvent("postrender");},getHtmlTpl:function getHtmlTpl(){return"";},formatHtml:function formatHtml(tpl){var prefix="edui-"+this.uiName;return tpl.replace(/##/g,this.id).replace(/%%-/g,this.uiName?prefix+"-":"").replace(/%%/g,(this.uiName?prefix:"")+" "+this.className).replace(/\\$\\$/g,this._globalKey);},renderHtml:function renderHtml(){return this.formatHtml(this.getHtmlTpl());},dispose:function dispose(){var box=this.getDom();if(box)baidu.editor.dom.domUtils.remove(box);uiUtils.unsetGlobal(this.id);}};utils.inherits(UIBase,EventBase);})();// ui/separator.js\n(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,Separator=baidu.editor.ui.Separator=function(options){this.initOptions(options);this.initSeparator();};Separator.prototype={uiName:"separator",initSeparator:function initSeparator(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return\'<div id="##" class="edui-box %%"></div>\';}};utils.inherits(Separator,UIBase);})();// ui/mask.js\n///import core\n///import uicore\n(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,uiUtils=baidu.editor.ui.uiUtils;var Mask=baidu.editor.ui.Mask=function(options){this.initOptions(options);this.initUIBase();};Mask.prototype={getHtmlTpl:function getHtmlTpl(){return\'<div id="##" class="edui-mask %%" onclick="return $$._onClick(event, this);" onmousedown="return $$._onMouseDown(event, this);"></div>\';},postRender:function postRender(){var me=this;domUtils.on(window,"resize",function(){setTimeout(function(){if(!me.isHidden()){me._fill();}});});},show:function show(zIndex){this._fill();this.getDom().style.display="";this.getDom().style.zIndex=zIndex;},hide:function hide(){this.getDom().style.display="none";this.getDom().style.zIndex="";},isHidden:function isHidden(){return this.getDom().style.display=="none";},_onMouseDown:function _onMouseDown(){return false;},_onClick:function _onClick(e,target){this.fireEvent("click",e,target);},_fill:function _fill(){var el=this.getDom();var vpRect=uiUtils.getViewportRect();el.style.width=vpRect.width+"px";el.style.height=vpRect.height+"px";}};utils.inherits(Mask,UIBase);})();// ui/popup.js\n///import core\n///import uicore\n(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,Popup=baidu.editor.ui.Popup=function(options){this.initOptions(options);this.initPopup();};var allPopups=[];function closeAllPopup(evt,el){for(var i=0;i<allPopups.length;i++){var pop=allPopups[i];if(!pop.isHidden()){if(pop.queryAutoHide(el)!==false){if(evt&&/scroll/gi.test(evt.type)&&pop.className=="edui-wordpastepop")return;pop.hide();}}}if(allPopups.length)pop.editor.fireEvent("afterhidepop");}Popup.postHide=closeAllPopup;var ANCHOR_CLASSES=["edui-anchor-topleft","edui-anchor-topright","edui-anchor-bottomleft","edui-anchor-bottomright"];Popup.prototype={SHADOW_RADIUS:5,content:null,_hidden:false,autoRender:true,canSideLeft:true,canSideUp:true,initPopup:function initPopup(){this.initUIBase();allPopups.push(this);},getHtmlTpl:function getHtmlTpl(){return\'<div id="##" class="edui-popup %%" onmousedown="return false;">\'+\' <div id="##_body" class="edui-popup-body">\'+\' <iframe style="position:absolute;z-index:-1;left:0;top:0;background-color: transparent;" frameborder="0" width="100%" height="100%" src="about:blank"></iframe>\'+\' <div class="edui-shadow"></div>\'+\' <div id="##_content" class="edui-popup-content">\'+this.getContentHtmlTpl()+"  </div>"+" </div>"+"</div>";},getContentHtmlTpl:function getContentHtmlTpl(){if(this.content){if(typeof this.content=="string"){return this.content;}return this.content.renderHtml();}else{return"";}},_UIBase_postRender:UIBase.prototype.postRender,postRender:function postRender(){if(this.content instanceof UIBase){this.content.postRender();}//捕获鼠标滚轮\nif(this.captureWheel&&!this.captured){this.captured=true;var winHeight=(document.documentElement.clientHeight||document.body.clientHeight)-80,_height=this.getDom().offsetHeight,_top=uiUtils.getClientRect(this.combox.getDom()).top,content=this.getDom("content"),ifr=this.getDom("body").getElementsByTagName("iframe"),me=this;ifr.length&&(ifr=ifr[0]);while(_top+_height>winHeight){_height-=30;}content.style.height=_height+"px";//同步更改iframe高度\nifr&&(ifr.style.height=_height+"px");//阻止在combox上的鼠标滚轮事件, 防止用户的正常操作被误解\nif(window.XMLHttpRequest){domUtils.on(content,"onmousewheel"in document.body?"mousewheel":"DOMMouseScroll",function(e){if(e.preventDefault){e.preventDefault();}else{e.returnValue=false;}if(e.wheelDelta){content.scrollTop-=e.wheelDelta/120*60;}else{content.scrollTop-=e.detail/-3*60;}});}else{//ie6\ndomUtils.on(this.getDom(),"mousewheel",function(e){e.returnValue=false;me.getDom("content").scrollTop-=e.wheelDelta/120*60;});}}this.fireEvent("postRenderAfter");this.hide(true);this._UIBase_postRender();},_doAutoRender:function _doAutoRender(){if(!this.getDom()&&this.autoRender){this.render();}},mesureSize:function mesureSize(){var box=this.getDom("content");return uiUtils.getClientRect(box);},fitSize:function fitSize(){if(this.captureWheel&&this.sized){return this.__size;}this.sized=true;var popBodyEl=this.getDom("body");popBodyEl.style.width="";popBodyEl.style.height="";var size=this.mesureSize();if(this.captureWheel){popBodyEl.style.width=-(-20-size.width)+"px";var height=parseInt(this.getDom("content").style.height,10);!window.isNaN(height)&&(size.height=height);}else{popBodyEl.style.width=size.width+"px";}popBodyEl.style.height=size.height+"px";this.__size=size;this.captureWheel&&(this.getDom("content").style.overflow="auto");return size;},showAnchor:function showAnchor(element,hoz){this.showAnchorRect(uiUtils.getClientRect(element),hoz);},showAnchorRect:function showAnchorRect(rect,hoz,adj){this._doAutoRender();var vpRect=uiUtils.getViewportRect();this.getDom().style.visibility="hidden";this._show();var popSize=this.fitSize();var sideLeft,sideUp,left,top;if(hoz){sideLeft=this.canSideLeft&&rect.right+popSize.width>vpRect.right&&rect.left>popSize.width;sideUp=this.canSideUp&&rect.top+popSize.height>vpRect.bottom&&rect.bottom>popSize.height;left=sideLeft?rect.left-popSize.width:rect.right;top=sideUp?rect.bottom-popSize.height:rect.top;}else{sideLeft=this.canSideLeft&&rect.right+popSize.width>vpRect.right&&rect.left>popSize.width;sideUp=this.canSideUp&&rect.top+popSize.height>vpRect.bottom&&rect.bottom>popSize.height;left=sideLeft?rect.right-popSize.width:rect.left;top=sideUp?rect.top-popSize.height:rect.bottom;}var popEl=this.getDom();uiUtils.setViewportOffset(popEl,{left:left,top:top});domUtils.removeClasses(popEl,ANCHOR_CLASSES);popEl.className+=" "+ANCHOR_CLASSES[(sideUp?1:0)*2+(sideLeft?1:0)];if(this.editor){popEl.style.zIndex=this.editor.container.style.zIndex*1+10;baidu.editor.ui.uiUtils.getFixedLayer().style.zIndex=popEl.style.zIndex-1;}this.getDom().style.visibility="visible";},showAt:function showAt(offset){var left=offset.left;var top=offset.top;var rect={left:left,top:top,right:left,bottom:top,height:0,width:0};this.showAnchorRect(rect,false,true);},_show:function _show(){if(this._hidden){var box=this.getDom();box.style.display="";this._hidden=false;//                if (box.setActive) {\n//                    box.setActive();\n//                }\nthis.fireEvent("show");}},isHidden:function isHidden(){return this._hidden;},show:function show(){this._doAutoRender();this._show();},hide:function hide(notNofity){if(!this._hidden&&this.getDom()){this.getDom().style.display="none";this._hidden=true;if(!notNofity){this.fireEvent("hide");}}},queryAutoHide:function queryAutoHide(el){return!el||!uiUtils.contains(this.getDom(),el);}};utils.inherits(Popup,UIBase);domUtils.on(document,"mousedown",function(evt){var el=evt.target||evt.srcElement;closeAllPopup(evt,el);});domUtils.on(window,"scroll",function(evt,el){closeAllPopup(evt,el);});})();// ui/colorpicker.js\n///import core\n///import uicore\n(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,ColorPicker=baidu.editor.ui.ColorPicker=function(options){this.initOptions(options);this.noColorText=this.noColorText||this.editor.getLang("clearColor");this.initUIBase();};ColorPicker.prototype={getHtmlTpl:function getHtmlTpl(){return genColorPicker(this.noColorText,this.editor);},_onTableClick:function _onTableClick(evt){var tgt=evt.target||evt.srcElement;var color=tgt.getAttribute("data-color");if(color){this.fireEvent("pickcolor",color);}},_onTableOver:function _onTableOver(evt){var tgt=evt.target||evt.srcElement;var color=tgt.getAttribute("data-color");if(color){this.getDom("preview").style.backgroundColor=color;}},_onTableOut:function _onTableOut(){this.getDom("preview").style.backgroundColor="";},_onPickNoColor:function _onPickNoColor(){this.fireEvent("picknocolor");}};utils.inherits(ColorPicker,UIBase);var COLORS=("ffffff,000000,eeece1,1f497d,4f81bd,c0504d,9bbb59,8064a2,4bacc6,f79646,"+"f2f2f2,7f7f7f,ddd9c3,c6d9f0,dbe5f1,f2dcdb,ebf1dd,e5e0ec,dbeef3,fdeada,"+"d8d8d8,595959,c4bd97,8db3e2,b8cce4,e5b9b7,d7e3bc,ccc1d9,b7dde8,fbd5b5,"+"bfbfbf,3f3f3f,938953,548dd4,95b3d7,d99694,c3d69b,b2a2c7,92cddc,fac08f,"+"a5a5a5,262626,494429,17365d,366092,953734,76923c,5f497a,31859b,e36c09,"+"7f7f7f,0c0c0c,1d1b10,0f243e,244061,632423,4f6128,3f3151,205867,974806,"+"c00000,ff0000,ffc000,ffff00,92d050,00b050,00b0f0,0070c0,002060,7030a0,").split(",");function genColorPicker(noColorText,editor){var html=\'<div id="##" class="edui-colorpicker %%">\'+\'<div class="edui-colorpicker-topbar edui-clearfix">\'+\'<div unselectable="on" id="##_preview" class="edui-colorpicker-preview"></div>\'+\'<div unselectable="on" class="edui-colorpicker-nocolor" onclick="$$._onPickNoColor(event, this);">\'+noColorText+"</div>"+"</div>"+\'<table  class="edui-box" style="border-collapse: collapse;" onmouseover="$$._onTableOver(event, this);" onmouseout="$$._onTableOut(event, this);" onclick="return $$._onTableClick(event, this);" cellspacing="0" cellpadding="0">\'+\'<tr style="border-bottom: 1px solid #ddd;font-size: 13px;line-height: 25px;color:#39C;padding-top: 2px"><td colspan="10">\'+editor.getLang("themeColor")+"</td> </tr>"+\'<tr class="edui-colorpicker-tablefirstrow" >\';for(var i=0;i<COLORS.length;i++){if(i&&i%10===0){html+="</tr>"+(i==60?\'<tr style="border-bottom: 1px solid #ddd;font-size: 13px;line-height: 25px;color:#39C;"><td colspan="10">\'+editor.getLang("standardColor")+"</td></tr>":"")+"<tr"+(i==60?\' class="edui-colorpicker-tablefirstrow"\':"")+">";}html+=i<70?\'<td style="padding: 0 2px;"><a hidefocus title="\'+COLORS[i]+\'" onclick="return false;" href="javascript:" unselectable="on" class="edui-box edui-colorpicker-colorcell"\'+\' data-color="#\'+COLORS[i]+\'"\'+\' style="background-color:#\'+COLORS[i]+";border:solid #ccc;"+(i<10||i>=60?"border-width:1px;":i>=10&&i<20?"border-width:1px 1px 0 1px;":"border-width:0 1px 0 1px;")+\'"\'+"></a></td>":"";}html+="</tr></table></div>";return html;}})();// ui/tablepicker.js\n///import core\n///import uicore\n(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase;var TablePicker=baidu.editor.ui.TablePicker=function(options){this.initOptions(options);this.initTablePicker();};TablePicker.prototype={defaultNumRows:10,defaultNumCols:10,maxNumRows:20,maxNumCols:20,numRows:10,numCols:10,lengthOfCellSide:22,initTablePicker:function initTablePicker(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){var me=this;return\'<div id="##" class="edui-tablepicker %%">\'+\'<div class="edui-tablepicker-body">\'+\'<div class="edui-infoarea">\'+\'<span id="##_label" class="edui-label"></span>\'+"</div>"+\'<div class="edui-pickarea"\'+\' onmousemove="$$._onMouseMove(event, this);"\'+\' onmouseover="$$._onMouseOver(event, this);"\'+\' onmouseout="$$._onMouseOut(event, this);"\'+\' onclick="$$._onClick(event, this);"\'+">"+\'<div id="##_overlay" class="edui-overlay"></div>\'+"</div>"+"</div>"+"</div>";},_UIBase_render:UIBase.prototype.render,render:function render(holder){this._UIBase_render(holder);this.getDom("label").innerHTML="0"+this.editor.getLang("t_row")+" x 0"+this.editor.getLang("t_col");},_track:function _track(numCols,numRows){var style=this.getDom("overlay").style;var sideLen=this.lengthOfCellSide;style.width=numCols*sideLen+"px";style.height=numRows*sideLen+"px";var label=this.getDom("label");label.innerHTML=numCols+this.editor.getLang("t_col")+" x "+numRows+this.editor.getLang("t_row");this.numCols=numCols;this.numRows=numRows;},_onMouseOver:function _onMouseOver(evt,el){var rel=evt.relatedTarget||evt.fromElement;if(!uiUtils.contains(el,rel)&&el!==rel){this.getDom("label").innerHTML="0"+this.editor.getLang("t_col")+" x 0"+this.editor.getLang("t_row");this.getDom("overlay").style.visibility="";}},_onMouseOut:function _onMouseOut(evt,el){var rel=evt.relatedTarget||evt.toElement;if(!uiUtils.contains(el,rel)&&el!==rel){this.getDom("label").innerHTML="0"+this.editor.getLang("t_col")+" x 0"+this.editor.getLang("t_row");this.getDom("overlay").style.visibility="hidden";}},_onMouseMove:function _onMouseMove(evt,el){var style=this.getDom("overlay").style;var offset=uiUtils.getEventOffset(evt);var sideLen=this.lengthOfCellSide;var numCols=Math.ceil(offset.left/sideLen);var numRows=Math.ceil(offset.top/sideLen);this._track(numCols,numRows);},_onClick:function _onClick(){this.fireEvent("picktable",this.numCols,this.numRows);}};utils.inherits(TablePicker,UIBase);})();// ui/stateful.js\n(function(){var browser=baidu.editor.browser,domUtils=baidu.editor.dom.domUtils,uiUtils=baidu.editor.ui.uiUtils;var TPL_STATEFUL=\'onmousedown="$$.Stateful_onMouseDown(event, this);"\'+\' onmouseup="$$.Stateful_onMouseUp(event, this);"\'+(browser.ie?\' onmouseenter="$$.Stateful_onMouseEnter(event, this);"\'+\' onmouseleave="$$.Stateful_onMouseLeave(event, this);"\':\' onmouseover="$$.Stateful_onMouseOver(event, this);"\'+\' onmouseout="$$.Stateful_onMouseOut(event, this);"\');baidu.editor.ui.Stateful={alwalysHoverable:false,target:null,//目标元素和this指向dom不一样\nStateful_init:function Stateful_init(){this._Stateful_dGetHtmlTpl=this.getHtmlTpl;this.getHtmlTpl=this.Stateful_getHtmlTpl;},Stateful_getHtmlTpl:function Stateful_getHtmlTpl(){var tpl=this._Stateful_dGetHtmlTpl();// 使用function避免$转义\nreturn tpl.replace(/stateful/g,function(){return TPL_STATEFUL;});},Stateful_onMouseEnter:function Stateful_onMouseEnter(evt,el){this.target=el;if(!this.isDisabled()||this.alwalysHoverable){this.addState("hover");this.fireEvent("over");}},Stateful_onMouseLeave:function Stateful_onMouseLeave(evt,el){if(!this.isDisabled()||this.alwalysHoverable){this.removeState("hover");this.removeState("active");this.fireEvent("out");}},Stateful_onMouseOver:function Stateful_onMouseOver(evt,el){var rel=evt.relatedTarget;if(!uiUtils.contains(el,rel)&&el!==rel){this.Stateful_onMouseEnter(evt,el);}},Stateful_onMouseOut:function Stateful_onMouseOut(evt,el){var rel=evt.relatedTarget;if(!uiUtils.contains(el,rel)&&el!==rel){this.Stateful_onMouseLeave(evt,el);}},Stateful_onMouseDown:function Stateful_onMouseDown(evt,el){if(!this.isDisabled()){this.addState("active");}},Stateful_onMouseUp:function Stateful_onMouseUp(evt,el){if(!this.isDisabled()){this.removeState("active");}},Stateful_postRender:function Stateful_postRender(){if(this.disabled&&!this.hasState("disabled")){this.addState("disabled");}},hasState:function hasState(state){return domUtils.hasClass(this.getStateDom(),"edui-state-"+state);},addState:function addState(state){if(!this.hasState(state)){this.getStateDom().className+=" edui-state-"+state;}},removeState:function removeState(state){if(this.hasState(state)){domUtils.removeClasses(this.getStateDom(),["edui-state-"+state]);}},getStateDom:function getStateDom(){return this.getDom("state");},isChecked:function isChecked(){return this.hasState("checked");},setChecked:function setChecked(checked){if(!this.isDisabled()&&checked){this.addState("checked");}else{this.removeState("checked");}},isDisabled:function isDisabled(){return this.hasState("disabled");},setDisabled:function setDisabled(disabled){if(disabled){this.removeState("hover");this.removeState("checked");this.removeState("active");this.addState("disabled");}else{this.removeState("disabled");}}};})();// ui/button.js\n///import core\n///import uicore\n///import ui/stateful.js\n(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,Stateful=baidu.editor.ui.Stateful,Button=baidu.editor.ui.Button=function(options){if(options.name){var btnName=options.name;var cssRules=options.cssRules;if(!options.className){options.className="edui-for-"+btnName;}options.cssRules=".edui-"+(options.theme||"default")+" .edui-toolbar .edui-button.edui-for-"+btnName+" .edui-icon {"+cssRules+"}";}this.initOptions(options);this.initButton();};Button.prototype={uiName:"button",label:"",title:"",showIcon:true,showText:true,cssRules:"",initButton:function initButton(){this.initUIBase();this.Stateful_init();if(this.cssRules){utils.cssRule("edui-customize-"+this.name+"-style",this.cssRules);}},getHtmlTpl:function getHtmlTpl(){return\'<div id="##" class="edui-box %%">\'+\'<div id="##_state" stateful>\'+\'<div class="%%-wrap"><div id="##_body" unselectable="on" \'+(this.title?\'title="\'+this.title+\'"\':"")+\' class="%%-body" onmousedown="return $$._onMouseDown(event, this);" onclick="return $$._onClick(event, this);">\'+(this.showIcon?\'<div class="edui-box edui-icon"></div>\':"")+(this.showText?\'<div class="edui-box edui-label">\'+this.label+"</div>":"")+"</div>"+"</div>"+"</div></div>";},postRender:function postRender(){this.Stateful_postRender();this.setDisabled(this.disabled);},_onMouseDown:function _onMouseDown(e){var target=e.target||e.srcElement,tagName=target&&target.tagName&&target.tagName.toLowerCase();if(tagName=="input"||tagName=="object"||tagName=="object"){return false;}},_onClick:function _onClick(){if(!this.isDisabled()){this.fireEvent("click");}},setTitle:function setTitle(text){var label=this.getDom("label");label.innerHTML=text;}};utils.inherits(Button,UIBase);utils.extend(Button.prototype,Stateful);})();// ui/splitbutton.js\n///import core\n///import uicore\n///import ui/stateful.js\n(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,Stateful=baidu.editor.ui.Stateful,SplitButton=baidu.editor.ui.SplitButton=function(options){this.initOptions(options);this.initSplitButton();};SplitButton.prototype={popup:null,uiName:"splitbutton",title:"",initSplitButton:function initSplitButton(){this.initUIBase();this.Stateful_init();var me=this;if(this.popup!=null){var popup=this.popup;this.popup=null;this.setPopup(popup);}},_UIBase_postRender:UIBase.prototype.postRender,postRender:function postRender(){this.Stateful_postRender();this._UIBase_postRender();},setPopup:function setPopup(popup){if(this.popup===popup)return;if(this.popup!=null){this.popup.dispose();}popup.addListener("show",utils.bind(this._onPopupShow,this));popup.addListener("hide",utils.bind(this._onPopupHide,this));popup.addListener("postrender",utils.bind(function(){popup.getDom("body").appendChild(uiUtils.createElementByHtml(\'<div id="\'+this.popup.id+\'_bordereraser" class="edui-bordereraser edui-background" style="width:\'+(uiUtils.getClientRect(this.getDom()).width+20)+\'px"></div>\'));popup.getDom().className+=" "+this.className;},this));this.popup=popup;},_onPopupShow:function _onPopupShow(){this.addState("opened");},_onPopupHide:function _onPopupHide(){this.removeState("opened");},getHtmlTpl:function getHtmlTpl(){return\'<div id="##" class="edui-box %%">\'+"<div "+(this.title?\'title="\'+this.title+\'"\':"")+\' id="##_state" stateful><div class="%%-body">\'+\'<div id="##_button_body" class="edui-box edui-button-body" onclick="$$._onButtonClick(event, this);">\'+\'<div class="edui-box edui-icon"></div>\'+"</div>"+\'<div class="edui-box edui-splitborder"></div>\'+\'<div class="edui-box edui-arrow" onclick="$$._onArrowClick();"></div>\'+"</div></div></div>";},showPopup:function showPopup(){// 当popup往上弹出的时候，做特殊处理\nvar rect=uiUtils.getClientRect(this.getDom());rect.top-=this.popup.SHADOW_RADIUS;rect.height+=this.popup.SHADOW_RADIUS;this.popup.showAnchorRect(rect);},_onArrowClick:function _onArrowClick(event,el){if(!this.isDisabled()){this.showPopup();}},_onButtonClick:function _onButtonClick(){if(!this.isDisabled()){this.fireEvent("buttonclick");}}};utils.inherits(SplitButton,UIBase);utils.extend(SplitButton.prototype,Stateful,true);})();// ui/colorbutton.js\n///import core\n///import uicore\n///import ui/colorpicker.js\n///import ui/popup.js\n///import ui/splitbutton.js\n(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,ColorPicker=baidu.editor.ui.ColorPicker,Popup=baidu.editor.ui.Popup,SplitButton=baidu.editor.ui.SplitButton,ColorButton=baidu.editor.ui.ColorButton=function(options){this.initOptions(options);this.initColorButton();};ColorButton.prototype={initColorButton:function initColorButton(){var me=this;this.popup=new Popup({content:new ColorPicker({noColorText:me.editor.getLang("clearColor"),editor:me.editor,onpickcolor:function onpickcolor(t,color){me._onPickColor(color);},onpicknocolor:function onpicknocolor(t,color){me._onPickNoColor(color);}}),editor:me.editor});this.initSplitButton();},_SplitButton_postRender:SplitButton.prototype.postRender,postRender:function postRender(){this._SplitButton_postRender();this.getDom("button_body").appendChild(uiUtils.createElementByHtml(\'<div id="\'+this.id+\'_colorlump" class="edui-colorlump"></div>\'));this.getDom().className+=" edui-colorbutton";},setColor:function setColor(color){this.getDom("colorlump").style.backgroundColor=color;this.color=color;},_onPickColor:function _onPickColor(color){if(this.fireEvent("pickcolor",color)!==false){this.setColor(color);this.popup.hide();}},_onPickNoColor:function _onPickNoColor(color){if(this.fireEvent("picknocolor")!==false){this.popup.hide();}}};utils.inherits(ColorButton,SplitButton);})();// ui/tablebutton.js\n///import core\n///import uicore\n///import ui/popup.js\n///import ui/tablepicker.js\n///import ui/splitbutton.js\n(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,TablePicker=baidu.editor.ui.TablePicker,SplitButton=baidu.editor.ui.SplitButton,TableButton=baidu.editor.ui.TableButton=function(options){this.initOptions(options);this.initTableButton();};TableButton.prototype={initTableButton:function initTableButton(){var me=this;this.popup=new Popup({content:new TablePicker({editor:me.editor,onpicktable:function onpicktable(t,numCols,numRows){me._onPickTable(numCols,numRows);}}),editor:me.editor});this.initSplitButton();},_onPickTable:function _onPickTable(numCols,numRows){if(this.fireEvent("picktable",numCols,numRows)!==false){this.popup.hide();}}};utils.inherits(TableButton,SplitButton);})();// ui/autotypesetpicker.js\n///import core\n///import uicore\n(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase;var AutoTypeSetPicker=baidu.editor.ui.AutoTypeSetPicker=function(options){this.initOptions(options);this.initAutoTypeSetPicker();};AutoTypeSetPicker.prototype={initAutoTypeSetPicker:function initAutoTypeSetPicker(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){var me=this.editor,opt=me.options.autotypeset,lang=me.getLang("autoTypeSet");var textAlignInputName="textAlignValue"+me.uid,imageBlockInputName="imageBlockLineValue"+me.uid,symbolConverInputName="symbolConverValue"+me.uid;return\'<div id="##" class="edui-autotypesetpicker %%">\'+\'<div class="edui-autotypesetpicker-body">\'+"<table >"+\'<tr><td nowrap><input type="checkbox" name="mergeEmptyline" \'+(opt["mergeEmptyline"]?"checked":"")+">"+lang.mergeLine+\'</td><td colspan="2"><input type="checkbox" name="removeEmptyline" \'+(opt["removeEmptyline"]?"checked":"")+">"+lang.delLine+"</td></tr>"+\'<tr><td nowrap><input type="checkbox" name="removeClass" \'+(opt["removeClass"]?"checked":"")+">"+lang.removeFormat+\'</td><td colspan="2"><input type="checkbox" name="indent" \'+(opt["indent"]?"checked":"")+">"+lang.indent+"</td></tr>"+"<tr>"+\'<td nowrap><input type="checkbox" name="textAlign" \'+(opt["textAlign"]?"checked":"")+">"+lang.alignment+"</td>"+\'<td colspan="2" id="\'+textAlignInputName+\'">\'+\'<input type="radio" name="\'+textAlignInputName+\'" value="left" \'+(opt["textAlign"]&&opt["textAlign"]=="left"?"checked":"")+">"+me.getLang("justifyleft")+\'<input type="radio" name="\'+textAlignInputName+\'" value="center" \'+(opt["textAlign"]&&opt["textAlign"]=="center"?"checked":"")+">"+me.getLang("justifycenter")+\'<input type="radio" name="\'+textAlignInputName+\'" value="right" \'+(opt["textAlign"]&&opt["textAlign"]=="right"?"checked":"")+">"+me.getLang("justifyright")+"</td>"+"</tr>"+"<tr>"+\'<td nowrap><input type="checkbox" name="imageBlockLine" \'+(opt["imageBlockLine"]?"checked":"")+">"+lang.imageFloat+"</td>"+\'<td nowrap id="\'+imageBlockInputName+\'">\'+\'<input type="radio" name="\'+imageBlockInputName+\'" value="none" \'+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="none"?"checked":"")+">"+me.getLang("default")+\'<input type="radio" name="\'+imageBlockInputName+\'" value="left" \'+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="left"?"checked":"")+">"+me.getLang("justifyleft")+\'<input type="radio" name="\'+imageBlockInputName+\'" value="center" \'+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="center"?"checked":"")+">"+me.getLang("justifycenter")+\'<input type="radio" name="\'+imageBlockInputName+\'" value="right" \'+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="right"?"checked":"")+">"+me.getLang("justifyright")+"</td>"+"</tr>"+\'<tr><td nowrap><input type="checkbox" name="clearFontSize" \'+(opt["clearFontSize"]?"checked":"")+">"+lang.removeFontsize+\'</td><td colspan="2"><input type="checkbox" name="clearFontFamily" \'+(opt["clearFontFamily"]?"checked":"")+">"+lang.removeFontFamily+"</td></tr>"+\'<tr><td nowrap colspan="3"><input type="checkbox" name="removeEmptyNode" \'+(opt["removeEmptyNode"]?"checked":"")+">"+lang.removeHtml+"</td></tr>"+\'<tr><td nowrap colspan="3"><input type="checkbox" name="pasteFilter" \'+(opt["pasteFilter"]?"checked":"")+">"+lang.pasteFilter+"</td></tr>"+"<tr>"+\'<td nowrap><input type="checkbox" name="symbolConver" \'+(opt["bdc2sb"]||opt["tobdc"]?"checked":"")+">"+lang.symbol+"</td>"+\'<td id="\'+symbolConverInputName+\'">\'+\'<input type="radio" name="bdc" value="bdc2sb" \'+(opt["bdc2sb"]?"checked":"")+">"+lang.bdc2sb+\'<input type="radio" name="bdc" value="tobdc" \'+(opt["tobdc"]?"checked":"")+">"+lang.tobdc+""+"</td>"+\'<td nowrap align="right"><button >\'+lang.run+"</button></td>"+"</tr>"+"</table>"+"</div>"+"</div>";},_UIBase_render:UIBase.prototype.render};utils.inherits(AutoTypeSetPicker,UIBase);})();// ui/autotypesetbutton.js\n///import core\n///import uicore\n///import ui/popup.js\n///import ui/autotypesetpicker.js\n///import ui/splitbutton.js\n(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,AutoTypeSetPicker=baidu.editor.ui.AutoTypeSetPicker,SplitButton=baidu.editor.ui.SplitButton,AutoTypeSetButton=baidu.editor.ui.AutoTypeSetButton=function(options){this.initOptions(options);this.initAutoTypeSetButton();};function getPara(me){var opt={},cont=me.getDom(),editorId=me.editor.uid,inputType=null,attrName=null,ipts=domUtils.getElementsByTagName(cont,"input");for(var i=ipts.length-1,ipt;ipt=ipts[i--];){inputType=ipt.getAttribute("type");if(inputType=="checkbox"){attrName=ipt.getAttribute("name");opt[attrName]&&delete opt[attrName];if(ipt.checked){var attrValue=document.getElementById(attrName+"Value"+editorId);if(attrValue){if(/input/gi.test(attrValue.tagName)){opt[attrName]=attrValue.value;}else{var iptChilds=attrValue.getElementsByTagName("input");for(var j=iptChilds.length-1,iptchild;iptchild=iptChilds[j--];){if(iptchild.checked){opt[attrName]=iptchild.value;break;}}}}else{opt[attrName]=true;}}else{opt[attrName]=false;}}else{opt[ipt.getAttribute("value")]=ipt.checked;}}var selects=domUtils.getElementsByTagName(cont,"select");for(var i=0,si;si=selects[i++];){var attr=si.getAttribute("name");opt[attr]=opt[attr]?si.value:"";}utils.extend(me.editor.options.autotypeset,opt);me.editor.setPreferences("autotypeset",opt);}AutoTypeSetButton.prototype={initAutoTypeSetButton:function initAutoTypeSetButton(){var me=this;this.popup=new Popup({//传入配置参数\ncontent:new AutoTypeSetPicker({editor:me.editor}),editor:me.editor,hide:function hide(){if(!this._hidden&&this.getDom()){getPara(this);this.getDom().style.display="none";this._hidden=true;this.fireEvent("hide");}}});var flag=0;this.popup.addListener("postRenderAfter",function(){var popupUI=this;if(flag)return;var cont=this.getDom(),btn=cont.getElementsByTagName("button")[0];btn.onclick=function(){getPara(popupUI);me.editor.execCommand("autotypeset");popupUI.hide();};domUtils.on(cont,"click",function(e){var target=e.target||e.srcElement,editorId=me.editor.uid;if(target&&target.tagName=="INPUT"){// 点击图片浮动的checkbox,去除对应的radio\nif(target.name=="imageBlockLine"||target.name=="textAlign"||target.name=="symbolConver"){var checked=target.checked,radioTd=document.getElementById(target.name+"Value"+editorId),radios=radioTd.getElementsByTagName("input"),defalutSelect={imageBlockLine:"none",textAlign:"left",symbolConver:"tobdc"};for(var i=0;i<radios.length;i++){if(checked){if(radios[i].value==defalutSelect[target.name]){radios[i].checked="checked";}}else{radios[i].checked=false;}}}// 点击radio,选中对应的checkbox\nif(target.name=="imageBlockLineValue"+editorId||target.name=="textAlignValue"+editorId||target.name=="bdc"){var checkboxs=target.parentNode.previousSibling.getElementsByTagName("input");checkboxs&&(checkboxs[0].checked=true);}getPara(popupUI);}});flag=1;});this.initSplitButton();}};utils.inherits(AutoTypeSetButton,SplitButton);})();// ui/cellalignpicker.js\n///import core\n///import uicore\n(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,Stateful=baidu.editor.ui.Stateful,UIBase=baidu.editor.ui.UIBase;/**\n     * 该参数将新增一个参数： selected， 参数类型为一个Object， 形如{ \'align\': \'center\', \'valign\': \'top\' }， 表示单元格的初始\n     * 对齐状态为： 竖直居上，水平居中; 其中 align的取值为：\'center\', \'left\', \'right\'; valign的取值为: \'top\', \'middle\', \'bottom\'\n     * @update 2013/4/2 hancong03@baidu.com\n     */var CellAlignPicker=baidu.editor.ui.CellAlignPicker=function(options){this.initOptions(options);this.initSelected();this.initCellAlignPicker();};CellAlignPicker.prototype={//初始化选中状态， 该方法将根据传递进来的参数获取到应该选中的对齐方式图标的索引\ninitSelected:function initSelected(){var status={valign:{top:0,middle:1,bottom:2},align:{left:0,center:1,right:2},count:3},result=-1;if(this.selected){this.selectedIndex=status.valign[this.selected.valign]*status.count+status.align[this.selected.align];}},initCellAlignPicker:function initCellAlignPicker(){this.initUIBase();this.Stateful_init();},getHtmlTpl:function getHtmlTpl(){var alignType=["left","center","right"],COUNT=9,tempClassName=null,tempIndex=-1,tmpl=[];for(var i=0;i<COUNT;i++){tempClassName=this.selectedIndex===i?\' class="edui-cellalign-selected" \':"";tempIndex=i%3;tempIndex===0&&tmpl.push("<tr>");tmpl.push(\'<td index="\'+i+\'" \'+tempClassName+\' stateful><div class="edui-icon edui-\'+alignType[tempIndex]+\'"></div></td>\');tempIndex===2&&tmpl.push("</tr>");}return\'<div id="##" class="edui-cellalignpicker %%">\'+\'<div class="edui-cellalignpicker-body">\'+\'<table onclick="$$._onClick(event);">\'+tmpl.join("")+"</table>"+"</div>"+"</div>";},getStateDom:function getStateDom(){return this.target;},_onClick:function _onClick(evt){var target=evt.target||evt.srcElement;if(/icon/.test(target.className)){this.items[target.parentNode.getAttribute("index")].onclick();Popup.postHide(evt);}},_UIBase_render:UIBase.prototype.render};utils.inherits(CellAlignPicker,UIBase);utils.extend(CellAlignPicker.prototype,Stateful,true);})();// ui/pastepicker.js\n///import core\n///import uicore\n(function(){var utils=baidu.editor.utils,Stateful=baidu.editor.ui.Stateful,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase;var PastePicker=baidu.editor.ui.PastePicker=function(options){this.initOptions(options);this.initPastePicker();};PastePicker.prototype={initPastePicker:function initPastePicker(){this.initUIBase();this.Stateful_init();},getHtmlTpl:function getHtmlTpl(){return\'<div class="edui-pasteicon" onclick="$$._onClick(this)"></div>\'+\'<div class="edui-pastecontainer">\'+\'<div class="edui-title">\'+this.editor.getLang("pasteOpt")+"</div>"+\'<div class="edui-button">\'+\'<div title="\'+this.editor.getLang("pasteSourceFormat")+\'" onclick="$$.format(false)" stateful>\'+\'<div class="edui-richtxticon"></div></div>\'+\'<div title="\'+this.editor.getLang("tagFormat")+\'" onclick="$$.format(2)" stateful>\'+\'<div class="edui-tagicon"></div></div>\'+\'<div title="\'+this.editor.getLang("pasteTextFormat")+\'" onclick="$$.format(true)" stateful>\'+\'<div class="edui-plaintxticon"></div></div>\'+"</div>"+"</div>"+"</div>";},getStateDom:function getStateDom(){return this.target;},format:function format(param){this.editor.ui._isTransfer=true;this.editor.fireEvent("pasteTransfer",param);},_onClick:function _onClick(cur){var node=domUtils.getNextDomNode(cur),screenHt=uiUtils.getViewportRect().height,subPop=uiUtils.getClientRect(node);if(subPop.top+subPop.height>screenHt)node.style.top=-subPop.height-cur.offsetHeight+"px";else node.style.top="";if(/hidden/gi.test(domUtils.getComputedStyle(node,"visibility"))){node.style.visibility="visible";domUtils.addClass(cur,"edui-state-opened");}else{node.style.visibility="hidden";domUtils.removeClasses(cur,"edui-state-opened");}},_UIBase_render:UIBase.prototype.render};utils.inherits(PastePicker,UIBase);utils.extend(PastePicker.prototype,Stateful,true);})();// ui/toolbar.js\n(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase,Toolbar=baidu.editor.ui.Toolbar=function(options){this.initOptions(options);this.initToolbar();};Toolbar.prototype={items:null,initToolbar:function initToolbar(){this.items=this.items||[];this.initUIBase();},add:function add(item,index){if(index===undefined){this.items.push(item);}else{this.items.splice(index,0,item);}},getHtmlTpl:function getHtmlTpl(){var buff=[];for(var i=0;i<this.items.length;i++){buff[i]=this.items[i].renderHtml();}return\'<div id="##" class="edui-toolbar %%" onselectstart="return false;" onmousedown="return $$._onMouseDown(event, this);">\'+buff.join("")+"</div>";},postRender:function postRender(){var box=this.getDom();for(var i=0;i<this.items.length;i++){this.items[i].postRender();}uiUtils.makeUnselectable(box);},_onMouseDown:function _onMouseDown(e){var target=e.target||e.srcElement,tagName=target&&target.tagName&&target.tagName.toLowerCase();if(tagName=="input"||tagName=="object"||tagName=="object"){return false;}}};utils.inherits(Toolbar,UIBase);})();// ui/menu.js\n///import core\n///import uicore\n///import ui\\popup.js\n///import ui\\stateful.js\n(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase,Popup=baidu.editor.ui.Popup,Stateful=baidu.editor.ui.Stateful,CellAlignPicker=baidu.editor.ui.CellAlignPicker,Menu=baidu.editor.ui.Menu=function(options){this.initOptions(options);this.initMenu();};var menuSeparator={renderHtml:function renderHtml(){return\'<div class="edui-menuitem edui-menuseparator"><div class="edui-menuseparator-inner"></div></div>\';},postRender:function postRender(){},queryAutoHide:function queryAutoHide(){return true;}};Menu.prototype={items:null,uiName:"menu",initMenu:function initMenu(){this.items=this.items||[];this.initPopup();this.initItems();},initItems:function initItems(){for(var i=0;i<this.items.length;i++){var item=this.items[i];if(item=="-"){this.items[i]=this.getSeparator();}else if(!(item instanceof MenuItem)){item.editor=this.editor;item.theme=this.editor.options.theme;this.items[i]=this.createItem(item);}}},getSeparator:function getSeparator(){return menuSeparator;},createItem:function createItem(item){//新增一个参数menu, 该参数存储了menuItem所对应的menu引用\nitem.menu=this;return new MenuItem(item);},_Popup_getContentHtmlTpl:Popup.prototype.getContentHtmlTpl,getContentHtmlTpl:function getContentHtmlTpl(){if(this.items.length==0){return this._Popup_getContentHtmlTpl();}var buff=[];for(var i=0;i<this.items.length;i++){var item=this.items[i];buff[i]=item.renderHtml();}return\'<div class="%%-body">\'+buff.join("")+"</div>";},_Popup_postRender:Popup.prototype.postRender,postRender:function postRender(){var me=this;for(var i=0;i<this.items.length;i++){var item=this.items[i];item.ownerMenu=this;item.postRender();}domUtils.on(this.getDom(),"mouseover",function(evt){evt=evt||event;var rel=evt.relatedTarget||evt.fromElement;var el=me.getDom();if(!uiUtils.contains(el,rel)&&el!==rel){me.fireEvent("over");}});this._Popup_postRender();},queryAutoHide:function queryAutoHide(el){if(el){if(uiUtils.contains(this.getDom(),el)){return false;}for(var i=0;i<this.items.length;i++){var item=this.items[i];if(item.queryAutoHide(el)===false){return false;}}}},clearItems:function clearItems(){for(var i=0;i<this.items.length;i++){var item=this.items[i];clearTimeout(item._showingTimer);clearTimeout(item._closingTimer);if(item.subMenu){item.subMenu.destroy();}}this.items=[];},destroy:function destroy(){if(this.getDom()){domUtils.remove(this.getDom());}this.clearItems();},dispose:function dispose(){this.destroy();}};utils.inherits(Menu,Popup);/**\n     * @update 2013/04/03 hancong03 新增一个参数menu, 该参数存储了menuItem所对应的menu引用\n     * @type {Function}\n     */var MenuItem=baidu.editor.ui.MenuItem=function(options){this.initOptions(options);this.initUIBase();this.Stateful_init();if(this.subMenu&&!(this.subMenu instanceof Menu)){if(options.className&&options.className.indexOf("aligntd")!=-1){var me=this;//获取单元格对齐初始状态\nthis.subMenu.selected=this.editor.queryCommandValue("cellalignment");this.subMenu=new Popup({content:new CellAlignPicker(this.subMenu),parentMenu:me,editor:me.editor,destroy:function destroy(){if(this.getDom()){domUtils.remove(this.getDom());}}});this.subMenu.addListener("postRenderAfter",function(){domUtils.on(this.getDom(),"mouseover",function(){me.addState("opened");});});}else{this.subMenu=new Menu(this.subMenu);}}};MenuItem.prototype={label:"",subMenu:null,ownerMenu:null,uiName:"menuitem",alwalysHoverable:true,getHtmlTpl:function getHtmlTpl(){return\'<div id="##" class="%%" stateful onclick="$$._onClick(event, this);">\'+\'<div class="%%-body">\'+this.renderLabelHtml()+"</div>"+"</div>";},postRender:function postRender(){var me=this;this.addListener("over",function(){me.ownerMenu.fireEvent("submenuover",me);if(me.subMenu){me.delayShowSubMenu();}});if(this.subMenu){this.getDom().className+=" edui-hassubmenu";this.subMenu.render();this.addListener("out",function(){me.delayHideSubMenu();});this.subMenu.addListener("over",function(){clearTimeout(me._closingTimer);me._closingTimer=null;me.addState("opened");});this.ownerMenu.addListener("hide",function(){me.hideSubMenu();});this.ownerMenu.addListener("submenuover",function(t,subMenu){if(subMenu!==me){me.delayHideSubMenu();}});this.subMenu._bakQueryAutoHide=this.subMenu.queryAutoHide;this.subMenu.queryAutoHide=function(el){if(el&&uiUtils.contains(me.getDom(),el)){return false;}return this._bakQueryAutoHide(el);};}this.getDom().style.tabIndex="-1";uiUtils.makeUnselectable(this.getDom());this.Stateful_postRender();},delayShowSubMenu:function delayShowSubMenu(){var me=this;if(!me.isDisabled()){me.addState("opened");clearTimeout(me._showingTimer);clearTimeout(me._closingTimer);me._closingTimer=null;me._showingTimer=setTimeout(function(){me.showSubMenu();},250);}},delayHideSubMenu:function delayHideSubMenu(){var me=this;if(!me.isDisabled()){me.removeState("opened");clearTimeout(me._showingTimer);if(!me._closingTimer){me._closingTimer=setTimeout(function(){if(!me.hasState("opened")){me.hideSubMenu();}me._closingTimer=null;},400);}}},renderLabelHtml:function renderLabelHtml(){return\'<div class="edui-arrow"></div>\'+\'<div class="edui-box edui-icon"></div>\'+\'<div class="edui-box edui-label %%-label">\'+(this.label||"")+"</div>";},getStateDom:function getStateDom(){return this.getDom();},queryAutoHide:function queryAutoHide(el){if(this.subMenu&&this.hasState("opened")){return this.subMenu.queryAutoHide(el);}},_onClick:function _onClick(event,this_){if(this.hasState("disabled"))return;if(this.fireEvent("click",event,this_)!==false){if(this.subMenu){this.showSubMenu();}else{Popup.postHide(event);}}},showSubMenu:function showSubMenu(){var rect=uiUtils.getClientRect(this.getDom());rect.right-=5;rect.left+=2;rect.width-=7;rect.top-=4;rect.bottom+=4;rect.height+=8;this.subMenu.showAnchorRect(rect,true,true);},hideSubMenu:function hideSubMenu(){this.subMenu.hide();}};utils.inherits(MenuItem,UIBase);utils.extend(MenuItem.prototype,Stateful,true);})();// ui/combox.js\n///import core\n///import uicore\n///import ui/menu.js\n///import ui/splitbutton.js\n(function(){// todo: menu和item提成通用list\nvar utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,Menu=baidu.editor.ui.Menu,SplitButton=baidu.editor.ui.SplitButton,Combox=baidu.editor.ui.Combox=function(options){this.initOptions(options);this.initCombox();};Combox.prototype={uiName:"combox",onbuttonclick:function onbuttonclick(){this.showPopup();},initCombox:function initCombox(){var me=this;this.items=this.items||[];for(var i=0;i<this.items.length;i++){var item=this.items[i];item.uiName="listitem";item.index=i;item.onclick=function(){me.selectByIndex(this.index);};}this.popup=new Menu({items:this.items,uiName:"list",editor:this.editor,captureWheel:true,combox:this});this.initSplitButton();},_SplitButton_postRender:SplitButton.prototype.postRender,postRender:function postRender(){this._SplitButton_postRender();this.setLabel(this.label||"");this.setValue(this.initValue||"");},showPopup:function showPopup(){var rect=uiUtils.getClientRect(this.getDom());rect.top+=1;rect.bottom-=1;rect.height-=2;this.popup.showAnchorRect(rect);},getValue:function getValue(){return this.value;},setValue:function setValue(value){var index=this.indexByValue(value);if(index!=-1){this.selectedIndex=index;this.setLabel(this.items[index].label);this.value=this.items[index].value;}else{this.selectedIndex=-1;this.setLabel(this.getLabelForUnknowValue(value));this.value=value;}},setLabel:function setLabel(label){this.getDom("button_body").innerHTML=label;this.label=label;},getLabelForUnknowValue:function getLabelForUnknowValue(value){return value;},indexByValue:function indexByValue(value){for(var i=0;i<this.items.length;i++){if(value==this.items[i].value){return i;}}return-1;},getItem:function getItem(index){return this.items[index];},selectByIndex:function selectByIndex(index){if(index<this.items.length&&this.fireEvent("select",index)!==false){this.selectedIndex=index;this.value=this.items[index].value;this.setLabel(this.items[index].label);}}};utils.inherits(Combox,SplitButton);})();// ui/dialog.js\n///import core\n///import uicore\n///import ui/mask.js\n///import ui/button.js\n(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,uiUtils=baidu.editor.ui.uiUtils,Mask=baidu.editor.ui.Mask,UIBase=baidu.editor.ui.UIBase,Button=baidu.editor.ui.Button,Dialog=baidu.editor.ui.Dialog=function(options){if(options.name){var name=options.name;var cssRules=options.cssRules;if(!options.className){options.className="edui-for-"+name;}if(cssRules){options.cssRules=".edui-for-"+name+" .edui-dialog-content  {"+cssRules+"}";}}this.initOptions(utils.extend({autoReset:true,draggable:true,onok:function onok(){},oncancel:function oncancel(){},onclose:function onclose(t,ok){return ok?this.onok():this.oncancel();},//是否控制dialog中的scroll事件， 默认为不阻止\nholdScroll:false},options));this.initDialog();};var modalMask;var dragMask;var activeDialog;Dialog.prototype={draggable:false,uiName:"dialog",initDialog:function initDialog(){var me=this,theme=this.editor.options.theme;if(this.cssRules){this.cssRules=".edui-"+theme+" "+this.cssRules;utils.cssRule("edui-customize-"+this.name+"-style",this.cssRules);}this.initUIBase();this.modalMask=modalMask||(modalMask=new Mask({className:"edui-dialog-modalmask",theme:theme,onclick:function onclick(){activeDialog&&activeDialog.close(false);}}));this.dragMask=dragMask||(dragMask=new Mask({className:"edui-dialog-dragmask",theme:theme}));this.closeButton=new Button({className:"edui-dialog-closebutton",title:me.closeDialog,theme:theme,onclick:function onclick(){me.close(false);}});this.fullscreen&&this.initResizeEvent();if(this.buttons){for(var i=0;i<this.buttons.length;i++){if(!(this.buttons[i]instanceof Button)){this.buttons[i]=new Button(utils.extend(this.buttons[i],{editor:this.editor},true));}}}},initResizeEvent:function initResizeEvent(){var me=this;domUtils.on(window,"resize",function(){if(me._hidden||me._hidden===undefined){return;}if(me.__resizeTimer){window.clearTimeout(me.__resizeTimer);}me.__resizeTimer=window.setTimeout(function(){me.__resizeTimer=null;var dialogWrapNode=me.getDom(),contentNode=me.getDom("content"),wrapRect=UE.ui.uiUtils.getClientRect(dialogWrapNode),contentRect=UE.ui.uiUtils.getClientRect(contentNode),vpRect=uiUtils.getViewportRect();contentNode.style.width=vpRect.width-wrapRect.width+contentRect.width+"px";contentNode.style.height=vpRect.height-wrapRect.height+contentRect.height+"px";dialogWrapNode.style.width=vpRect.width+"px";dialogWrapNode.style.height=vpRect.height+"px";me.fireEvent("resize");},100);});},fitSize:function fitSize(){var popBodyEl=this.getDom("body");//            if (!(baidu.editor.browser.ie && baidu.editor.browser.version == 7)) {\n//                uiUtils.removeStyle(popBodyEl, \'width\');\n//                uiUtils.removeStyle(popBodyEl, \'height\');\n//            }\nvar size=this.mesureSize();popBodyEl.style.width=size.width+"px";popBodyEl.style.height=size.height+"px";return size;},safeSetOffset:function safeSetOffset(offset){var me=this;var el=me.getDom();var vpRect=uiUtils.getViewportRect();var rect=uiUtils.getClientRect(el);var left=offset.left;if(left+rect.width>vpRect.right){left=vpRect.right-rect.width;}var top=offset.top;if(top+rect.height>vpRect.bottom){top=vpRect.bottom-rect.height;}el.style.left=Math.max(left,0)+"px";el.style.top=Math.max(top,0)+"px";},showAtCenter:function showAtCenter(){var vpRect=uiUtils.getViewportRect();if(!this.fullscreen){this.getDom().style.display="";var popSize=this.fitSize();var titleHeight=this.getDom("titlebar").offsetHeight|0;var left=vpRect.width/2-popSize.width/2;var top=vpRect.height/2-(popSize.height-titleHeight)/2-titleHeight;var popEl=this.getDom();this.safeSetOffset({left:Math.max(left|0,0),top:Math.max(top|0,0)});if(!domUtils.hasClass(popEl,"edui-state-centered")){popEl.className+=" edui-state-centered";}}else{var dialogWrapNode=this.getDom(),contentNode=this.getDom("content");dialogWrapNode.style.display="block";var wrapRect=UE.ui.uiUtils.getClientRect(dialogWrapNode),contentRect=UE.ui.uiUtils.getClientRect(contentNode);dialogWrapNode.style.left="-100000px";contentNode.style.width=vpRect.width-wrapRect.width+contentRect.width+"px";contentNode.style.height=vpRect.height-wrapRect.height+contentRect.height+"px";dialogWrapNode.style.width=vpRect.width+"px";dialogWrapNode.style.height=vpRect.height+"px";dialogWrapNode.style.left=0;//保存环境的overflow值\nthis._originalContext={html:{overflowX:document.documentElement.style.overflowX,overflowY:document.documentElement.style.overflowY},body:{overflowX:document.body.style.overflowX,overflowY:document.body.style.overflowY}};document.documentElement.style.overflowX="hidden";document.documentElement.style.overflowY="hidden";document.body.style.overflowX="hidden";document.body.style.overflowY="hidden";}this._show();},getContentHtml:function getContentHtml(){var contentHtml="";if(typeof this.content=="string"){contentHtml=this.content;}else if(this.iframeUrl){contentHtml=\'<span id="\'+this.id+\'_contmask" class="dialogcontmask"></span><iframe id="\'+this.id+\'_iframe" class="%%-iframe" height="100%" width="100%" frameborder="0" src="\'+this.iframeUrl+\'"></iframe>\';}return contentHtml;},getHtmlTpl:function getHtmlTpl(){var footHtml="";if(this.buttons){var buff=[];for(var i=0;i<this.buttons.length;i++){buff[i]=this.buttons[i].renderHtml();}footHtml=\'<div class="%%-foot">\'+\'<div id="##_buttons" class="%%-buttons">\'+buff.join("")+"</div>"+"</div>";}return\'<div id="##" class="%%"><div \'+(!this.fullscreen?\'class="%%"\':\'class="%%-wrap edui-dialog-fullscreen-flag"\')+\'><div id="##_body" class="%%-body">\'+\'<div class="%%-shadow"></div>\'+\'<div id="##_titlebar" class="%%-titlebar">\'+\'<div class="%%-draghandle" onmousedown="$$._onTitlebarMouseDown(event, this);">\'+\'<span class="%%-caption">\'+(this.title||"")+"</span>"+"</div>"+this.closeButton.renderHtml()+"</div>"+\'<div id="##_content" class="%%-content">\'+(this.autoReset?"":this.getContentHtml())+"</div>"+footHtml+"</div></div></div>";},postRender:function postRender(){// todo: 保持居中/记住上次关闭位置选项\nif(!this.modalMask.getDom()){this.modalMask.render();this.modalMask.hide();}if(!this.dragMask.getDom()){this.dragMask.render();this.dragMask.hide();}var me=this;this.addListener("show",function(){me.modalMask.show(this.getDom().style.zIndex-2);});this.addListener("hide",function(){me.modalMask.hide();});if(this.buttons){for(var i=0;i<this.buttons.length;i++){this.buttons[i].postRender();}}domUtils.on(window,"resize",function(){setTimeout(function(){if(!me.isHidden()){me.safeSetOffset(uiUtils.getClientRect(me.getDom()));}});});//hold住scroll事件，防止dialog的滚动影响页面\n//            if( this.holdScroll ) {\n//\n//                if( !me.iframeUrl ) {\n//                    domUtils.on( document.getElementById( me.id + "_iframe"), !browser.gecko ? "mousewheel" : "DOMMouseScroll", function(e){\n//                        domUtils.preventDefault(e);\n//                    } );\n//                } else {\n//                    me.addListener(\'dialogafterreset\', function(){\n//                        window.setTimeout(function(){\n//                            var iframeWindow = document.getElementById( me.id + "_iframe").contentWindow;\n//\n//                            if( browser.ie ) {\n//\n//                                var timer = window.setInterval(function(){\n//\n//                                    if( iframeWindow.document && iframeWindow.document.body ) {\n//                                        window.clearInterval( timer );\n//                                        timer = null;\n//                                        domUtils.on( iframeWindow.document.body, !browser.gecko ? "mousewheel" : "DOMMouseScroll", function(e){\n//                                            domUtils.preventDefault(e);\n//                                        } );\n//                                    }\n//\n//                                }, 100);\n//\n//                            } else {\n//                                domUtils.on( iframeWindow, !browser.gecko ? "mousewheel" : "DOMMouseScroll", function(e){\n//                                    domUtils.preventDefault(e);\n//                                } );\n//                            }\n//\n//                        }, 1);\n//                    });\n//                }\n//\n//            }\nthis._hide();},mesureSize:function mesureSize(){var body=this.getDom("body");var width=uiUtils.getClientRect(this.getDom("content")).width;var dialogBodyStyle=body.style;dialogBodyStyle.width=width;return uiUtils.getClientRect(body);},_onTitlebarMouseDown:function _onTitlebarMouseDown(evt,el){if(this.draggable){var rect;var vpRect=uiUtils.getViewportRect();var me=this;uiUtils.startDrag(evt,{ondragstart:function ondragstart(){rect=uiUtils.getClientRect(me.getDom());me.getDom("contmask").style.visibility="visible";me.dragMask.show(me.getDom().style.zIndex-1);},ondragmove:function ondragmove(x,y){var left=rect.left+x;var top=rect.top+y;me.safeSetOffset({left:left,top:top});},ondragstop:function ondragstop(){me.getDom("contmask").style.visibility="hidden";domUtils.removeClasses(me.getDom(),["edui-state-centered"]);me.dragMask.hide();}});}},reset:function reset(){this.getDom("content").innerHTML=this.getContentHtml();this.fireEvent("dialogafterreset");},_show:function _show(){if(this._hidden){this.getDom().style.display="";//要高过编辑器的zindxe\nthis.editor.container.style.zIndex&&(this.getDom().style.zIndex=this.editor.container.style.zIndex*1+10);this._hidden=false;this.fireEvent("show");baidu.editor.ui.uiUtils.getFixedLayer().style.zIndex=this.getDom().style.zIndex-4;}},isHidden:function isHidden(){return this._hidden;},_hide:function _hide(){if(!this._hidden){var wrapNode=this.getDom();wrapNode.style.display="none";wrapNode.style.zIndex="";wrapNode.style.width="";wrapNode.style.height="";this._hidden=true;this.fireEvent("hide");}},open:function open(){if(this.autoReset){//有可能还没有渲染\ntry{this.reset();}catch(e){this.render();this.open();}}this.showAtCenter();if(this.iframeUrl){try{this.getDom("iframe").focus();}catch(ex){}}activeDialog=this;},_onCloseButtonClick:function _onCloseButtonClick(evt,el){this.close(false);},close:function close(ok){if(this.fireEvent("close",ok)!==false){//还原环境\nif(this.fullscreen){document.documentElement.style.overflowX=this._originalContext.html.overflowX;document.documentElement.style.overflowY=this._originalContext.html.overflowY;document.body.style.overflowX=this._originalContext.body.overflowX;document.body.style.overflowY=this._originalContext.body.overflowY;delete this._originalContext;}this._hide();//销毁content\nvar content=this.getDom("content");var iframe=this.getDom("iframe");if(content&&iframe){var doc=iframe.contentDocument||iframe.contentWindow.document;doc&&(doc.body.innerHTML="");domUtils.remove(content);}}}};utils.inherits(Dialog,UIBase);})();// ui/menubutton.js\n///import core\n///import uicore\n///import ui/menu.js\n///import ui/splitbutton.js\n(function(){var utils=baidu.editor.utils,Menu=baidu.editor.ui.Menu,SplitButton=baidu.editor.ui.SplitButton,MenuButton=baidu.editor.ui.MenuButton=function(options){this.initOptions(options);this.initMenuButton();};MenuButton.prototype={initMenuButton:function initMenuButton(){var me=this;this.uiName="menubutton";this.popup=new Menu({items:me.items,className:me.className,editor:me.editor});this.popup.addListener("show",function(){var list=this;for(var i=0;i<list.items.length;i++){list.items[i].removeState("checked");if(list.items[i].value==me._value){list.items[i].addState("checked");this.value=me._value;}}});this.initSplitButton();},setValue:function setValue(value){this._value=value;}};utils.inherits(MenuButton,SplitButton);})();// ui/multiMenu.js\n///import core\n///import uicore\n///commands 表情\n(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,SplitButton=baidu.editor.ui.SplitButton,MultiMenuPop=baidu.editor.ui.MultiMenuPop=function(options){this.initOptions(options);this.initMultiMenu();};MultiMenuPop.prototype={initMultiMenu:function initMultiMenu(){var me=this;this.popup=new Popup({content:"",editor:me.editor,iframe_rendered:false,onshow:function onshow(){if(!this.iframe_rendered){this.iframe_rendered=true;this.getDom("content").innerHTML=\'<iframe id="\'+me.id+\'_iframe" src="\'+me.iframeUrl+\'" frameborder="0"></iframe>\';me.editor.container.style.zIndex&&(this.getDom().style.zIndex=me.editor.container.style.zIndex*1+1);}}// canSideUp:false,\n// canSideLeft:false\n});this.onbuttonclick=function(){this.showPopup();};this.initSplitButton();}};utils.inherits(MultiMenuPop,SplitButton);})();// ui/shortcutmenu.js\n(function(){var UI=baidu.editor.ui,UIBase=UI.UIBase,uiUtils=UI.uiUtils,utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils;var allMenus=[],//存储所有快捷菜单\ntimeID,isSubMenuShow=false;//是否有子pop显示\nvar ShortCutMenu=UI.ShortCutMenu=function(options){this.initOptions(options);this.initShortCutMenu();};ShortCutMenu.postHide=hideAllMenu;ShortCutMenu.prototype={isHidden:true,SPACE:5,initShortCutMenu:function initShortCutMenu(){this.items=this.items||[];this.initUIBase();this.initItems();this.initEvent();allMenus.push(this);},initEvent:function initEvent(){var me=this,doc=me.editor.document;domUtils.on(doc,"mousemove",function(e){if(me.isHidden===false){//有pop显示就不隐藏快捷菜单\nif(me.getSubMenuMark()||me.eventType=="contextmenu")return;var flag=true,el=me.getDom(),wt=el.offsetWidth,ht=el.offsetHeight,distanceX=wt/2+me.SPACE,//距离中心X标准\ndistanceY=ht/2,//距离中心Y标准\nx=Math.abs(e.screenX-me.left),//离中心距离横坐标\ny=Math.abs(e.screenY-me.top);//离中心距离纵坐标\nclearTimeout(timeID);timeID=setTimeout(function(){if(y>0&&y<distanceY){me.setOpacity(el,"1");}else if(y>distanceY&&y<distanceY+70){me.setOpacity(el,"0.5");flag=false;}else if(y>distanceY+70&&y<distanceY+140){me.hide();}if(flag&&x>0&&x<distanceX){me.setOpacity(el,"1");}else if(x>distanceX&&x<distanceX+70){me.setOpacity(el,"0.5");}else if(x>distanceX+70&&x<distanceX+140){me.hide();}});}});//ie\\ff下 mouseout不准\nif(browser.chrome){domUtils.on(doc,"mouseout",function(e){var relatedTgt=e.relatedTarget||e.toElement;if(relatedTgt==null||relatedTgt.tagName=="HTML"){me.hide();}});}me.editor.addListener("afterhidepop",function(){if(!me.isHidden){isSubMenuShow=true;}});},initItems:function initItems(){if(utils.isArray(this.items)){for(var i=0,len=this.items.length;i<len;i++){var item=this.items[i].toLowerCase();if(UI[item]){this.items[i]=new UI[item](this.editor);this.items[i].className+=" edui-shortcutsubmenu ";}}}},setOpacity:function setOpacity(el,value){if(browser.ie&&browser.version<9){el.style.filter="alpha(opacity = "+parseFloat(value)*100+");";}else{el.style.opacity=value;}},getSubMenuMark:function getSubMenuMark(){isSubMenuShow=false;var layerEle=uiUtils.getFixedLayer();var list=domUtils.getElementsByTagName(layerEle,"div",function(node){return domUtils.hasClass(node,"edui-shortcutsubmenu edui-popup");});for(var i=0,node;node=list[i++];){if(node.style.display!="none"){isSubMenuShow=true;}}return isSubMenuShow;},show:function show(e,hasContextmenu){var me=this,offset={},el=this.getDom(),fixedlayer=uiUtils.getFixedLayer();function setPos(offset){if(offset.left<0){offset.left=0;}if(offset.top<0){offset.top=0;}el.style.cssText="position:absolute;left:"+offset.left+"px;top:"+offset.top+"px;";}function setPosByCxtMenu(menu){if(!menu.tagName){menu=menu.getDom();}offset.left=parseInt(menu.style.left);offset.top=parseInt(menu.style.top);offset.top-=el.offsetHeight+15;setPos(offset);}me.eventType=e.type;el.style.cssText="display:block;left:-9999px";if(e.type=="contextmenu"&&hasContextmenu){var menu=domUtils.getElementsByTagName(fixedlayer,"div","edui-contextmenu")[0];if(menu){setPosByCxtMenu(menu);}else{me.editor.addListener("aftershowcontextmenu",function(type,menu){setPosByCxtMenu(menu);});}}else{offset=uiUtils.getViewportOffsetByEvent(e);offset.top-=el.offsetHeight+me.SPACE;offset.left+=me.SPACE+20;setPos(offset);me.setOpacity(el,0.2);}me.isHidden=false;me.left=e.screenX+el.offsetWidth/2-me.SPACE;me.top=e.screenY-el.offsetHeight/2-me.SPACE;if(me.editor){el.style.zIndex=me.editor.container.style.zIndex*1+10;fixedlayer.style.zIndex=el.style.zIndex-1;}},hide:function hide(){if(this.getDom()){this.getDom().style.display="none";}this.isHidden=true;},postRender:function postRender(){if(utils.isArray(this.items)){for(var i=0,item;item=this.items[i++];){item.postRender();}}},getHtmlTpl:function getHtmlTpl(){var buff;if(utils.isArray(this.items)){buff=[];for(var i=0;i<this.items.length;i++){buff[i]=this.items[i].renderHtml();}buff=buff.join("");}else{buff=this.items;}return\'<div id="##" class="%% edui-toolbar" data-src="shortcutmenu" onmousedown="return false;" onselectstart="return false;" >\'+buff+"</div>";}};utils.inherits(ShortCutMenu,UIBase);function hideAllMenu(e){var tgt=e.target||e.srcElement,cur=domUtils.findParent(tgt,function(node){return domUtils.hasClass(node,"edui-shortcutmenu")||domUtils.hasClass(node,"edui-popup");},true);if(!cur){for(var i=0,menu;menu=allMenus[i++];){menu.hide();}}}domUtils.on(document,"mousedown",function(e){hideAllMenu(e);});domUtils.on(window,"scroll",function(e){hideAllMenu(e);});})();// ui/breakline.js\n(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,Breakline=baidu.editor.ui.Breakline=function(options){this.initOptions(options);this.initSeparator();};Breakline.prototype={uiName:"Breakline",initSeparator:function initSeparator(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return"<br/>";}};utils.inherits(Breakline,UIBase);})();// ui/message.js\n///import core\n///import uicore\n(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,Message=baidu.editor.ui.Message=function(options){this.initOptions(options);this.initMessage();};Message.prototype={initMessage:function initMessage(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return\'<div id="##" class="edui-message %%">\'+\' <div id="##_closer" class="edui-message-closer">×</div>\'+\' <div id="##_body" class="edui-message-body edui-message-type-info">\'+\' <iframe style="position:absolute;z-index:-1;left:0;top:0;background-color: transparent;" frameborder="0" width="100%" height="100%" src="about:blank"></iframe>\'+\' <div class="edui-shadow"></div>\'+\' <div id="##_content" class="edui-message-content">\'+"  </div>"+" </div>"+"</div>";},reset:function reset(opt){var me=this;if(!opt.keepshow){clearTimeout(this.timer);me.timer=setTimeout(function(){me.hide();},opt.timeout||4000);}opt.content!==undefined&&me.setContent(opt.content);opt.type!==undefined&&me.setType(opt.type);me.show();},postRender:function postRender(){var me=this,closer=this.getDom("closer");closer&&domUtils.on(closer,"click",function(){me.hide();});},setContent:function setContent(content){this.getDom("content").innerHTML=content;},setType:function setType(type){type=type||"info";var body=this.getDom("body");body.className=body.className.replace(/edui-message-type-[\\w-]+/,"edui-message-type-"+type);},getContent:function getContent(){return this.getDom("content").innerHTML;},getType:function getType(){var arr=this.getDom("body").match(/edui-message-type-([\\w-]+)/);return arr?arr[1]:"";},show:function show(){this.getDom().style.display="block";},hide:function hide(){var dom=this.getDom();if(dom){dom.style.display="none";dom.parentNode&&dom.parentNode.removeChild(dom);}}};utils.inherits(Message,UIBase);})();// adapter/editorui.js\n//ui跟编辑器的适配層\n//那个按钮弹出是dialog，是下拉筐等都是在这个js中配置\n//自己写的ui也要在这里配置，放到baidu.editor.ui下边，当编辑器实例化的时候会根据ueditor.config中的toolbars找到相应的进行实例化\n(function(){var utils=baidu.editor.utils;var editorui=baidu.editor.ui;var _Dialog=editorui.Dialog;editorui.buttons={};editorui.Dialog=function(options){var dialog=new _Dialog(options);dialog.addListener("hide",function(){if(dialog.editor){var editor=dialog.editor;try{if(browser.gecko){var y=editor.window.scrollY,x=editor.window.scrollX;editor.body.focus();editor.window.scrollTo(x,y);}else{editor.focus();}}catch(ex){}}});return dialog;};var iframeUrlMap={anchor:"~/dialogs/anchor/anchor.html",insertimage:"~/dialogs/image/image.html",link:"~/dialogs/link/link.html",spechars:"~/dialogs/spechars/spechars.html",searchreplace:"~/dialogs/searchreplace/searchreplace.html",map:"~/dialogs/map/map.html",gmap:"~/dialogs/gmap/gmap.html",insertvideo:"~/dialogs/video/video.html",help:"~/dialogs/help/help.html",preview:"~/dialogs/preview/preview.html",emotion:"~/dialogs/emotion/emotion.html",wordimage:"~/dialogs/wordimage/wordimage.html",attachment:"~/dialogs/attachment/attachment.html",insertframe:"~/dialogs/insertframe/insertframe.html",edittip:"~/dialogs/table/edittip.html",edittable:"~/dialogs/table/edittable.html",edittd:"~/dialogs/table/edittd.html",webapp:"~/dialogs/webapp/webapp.html",snapscreen:"~/dialogs/snapscreen/snapscreen.html",scrawl:"~/dialogs/scrawl/scrawl.html",music:"~/dialogs/music/music.html",template:"~/dialogs/template/template.html",background:"~/dialogs/background/background.html",charts:"~/dialogs/charts/charts.html"};//为工具栏添加按钮，以下都是统一的按钮触发命令，所以写在一起\nvar btnCmds=["undo","redo","formatmatch","bold","italic","underline","fontborder","touppercase","tolowercase","strikethrough","subscript","superscript","source","indent","outdent","blockquote","pasteplain","pagebreak","selectall","print","horizontal","removeformat","time","date","unlink","insertparagraphbeforetable","insertrow","insertcol","mergeright","mergedown","deleterow","deletecol","splittorows","splittocols","splittocells","mergecells","deletetable","drafts"];for(var i=0,ci;ci=btnCmds[i++];){ci=ci.toLowerCase();editorui[ci]=function(cmd){return function(editor){var ui=new editorui.Button({className:"edui-for-"+cmd,title:editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd)||"",onclick:function onclick(){editor.execCommand(cmd);},theme:editor.options.theme,showText:false});editorui.buttons[cmd]=ui;editor.addListener("selectionchange",function(type,causeByUi,uiReady){var state=editor.queryCommandState(cmd);if(state==-1){ui.setDisabled(true);ui.setChecked(false);}else{if(!uiReady){ui.setDisabled(false);ui.setChecked(state);}}});return ui;};}(ci);}//清除文档\neditorui.cleardoc=function(editor){var ui=new editorui.Button({className:"edui-for-cleardoc",title:editor.options.labelMap.cleardoc||editor.getLang("labelMap.cleardoc")||"",theme:editor.options.theme,onclick:function onclick(){if(confirm(editor.getLang("confirmClear"))){editor.execCommand("cleardoc");}}});editorui.buttons["cleardoc"]=ui;editor.addListener("selectionchange",function(){ui.setDisabled(editor.queryCommandState("cleardoc")==-1);});return ui;};//排版，图片排版，文字方向\nvar typeset={justify:["left","right","center","justify"],imagefloat:["none","left","center","right"],directionality:["ltr","rtl"]};for(var p in typeset){(function(cmd,val){for(var i=0,ci;ci=val[i++];){(function(cmd2){editorui[cmd.replace("float","")+cmd2]=function(editor){var ui=new editorui.Button({className:"edui-for-"+cmd.replace("float","")+cmd2,title:editor.options.labelMap[cmd.replace("float","")+cmd2]||editor.getLang("labelMap."+cmd.replace("float","")+cmd2)||"",theme:editor.options.theme,onclick:function onclick(){editor.execCommand(cmd,cmd2);}});editorui.buttons[cmd]=ui;editor.addListener("selectionchange",function(type,causeByUi,uiReady){ui.setDisabled(editor.queryCommandState(cmd)==-1);ui.setChecked(editor.queryCommandValue(cmd)==cmd2&&!uiReady);});return ui;};})(ci);}})(p,typeset[p]);}//字体颜色和背景颜色\nfor(var i=0,ci;ci=["backcolor","forecolor"][i++];){editorui[ci]=function(cmd){return function(editor){var ui=new editorui.ColorButton({className:"edui-for-"+cmd,color:"default",title:editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd)||"",editor:editor,onpickcolor:function onpickcolor(t,color){editor.execCommand(cmd,color);},onpicknocolor:function onpicknocolor(){editor.execCommand(cmd,"default");this.setColor("transparent");this.color="default";},onbuttonclick:function onbuttonclick(){editor.execCommand(cmd,this.color);}});editorui.buttons[cmd]=ui;editor.addListener("selectionchange",function(){ui.setDisabled(editor.queryCommandState(cmd)==-1);});return ui;};}(ci);}var dialogBtns={noOk:["searchreplace","help","spechars","webapp","preview"],ok:["attachment","anchor","link","insertimage","map","gmap","insertframe","wordimage","insertvideo","insertframe","edittip","edittable","edittd","scrawl","template","music","background","charts"]};for(var p in dialogBtns){(function(type,vals){for(var i=0,ci;ci=vals[i++];){//todo opera下存在问题\nif(browser.opera&&ci==="searchreplace"){continue;}(function(cmd){editorui[cmd]=function(editor,iframeUrl,title){iframeUrl=iframeUrl||(editor.options.iframeUrlMap||{})[cmd]||iframeUrlMap[cmd];title=editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd)||"";var dialog;//没有iframeUrl不创建dialog\nif(iframeUrl){dialog=new editorui.Dialog(utils.extend({iframeUrl:editor.ui.mapUrl(iframeUrl),editor:editor,className:"edui-for-"+cmd,title:title,holdScroll:cmd==="insertimage",fullscreen:/charts|preview/.test(cmd),closeDialog:editor.getLang("closeDialog")},type=="ok"?{buttons:[{className:"edui-okbutton",label:editor.getLang("ok"),editor:editor,onclick:function onclick(){dialog.close(true);}},{className:"edui-cancelbutton",label:editor.getLang("cancel"),editor:editor,onclick:function onclick(){dialog.close(false);}}]}:{}));editor.ui._dialogs[cmd+"Dialog"]=dialog;}var ui=new editorui.Button({className:"edui-for-"+cmd,title:title,onclick:function onclick(){if(dialog){switch(cmd){case"wordimage":var images=editor.execCommand("wordimage");if(images&&images.length){dialog.render();dialog.open();}break;case"scrawl":if(editor.queryCommandState("scrawl")!=-1){dialog.render();dialog.open();}break;default:dialog.render();dialog.open();}}},theme:editor.options.theme,disabled:cmd=="scrawl"&&editor.queryCommandState("scrawl")==-1||cmd=="charts"});editorui.buttons[cmd]=ui;editor.addListener("selectionchange",function(){//只存在于右键菜单而无工具栏按钮的ui不需要检测状态\nvar unNeedCheckState={edittable:1};if(cmd in unNeedCheckState)return;var state=editor.queryCommandState(cmd);if(ui.getDom()){ui.setDisabled(state==-1);ui.setChecked(state);}});return ui;};})(ci.toLowerCase());}})(p,dialogBtns[p]);}editorui.snapscreen=function(editor,iframeUrl,title){title=editor.options.labelMap["snapscreen"]||editor.getLang("labelMap.snapscreen")||"";var ui=new editorui.Button({className:"edui-for-snapscreen",title:title,onclick:function onclick(){editor.execCommand("snapscreen");},theme:editor.options.theme});editorui.buttons["snapscreen"]=ui;iframeUrl=iframeUrl||(editor.options.iframeUrlMap||{})["snapscreen"]||iframeUrlMap["snapscreen"];if(iframeUrl){var dialog=new editorui.Dialog({iframeUrl:editor.ui.mapUrl(iframeUrl),editor:editor,className:"edui-for-snapscreen",title:title,buttons:[{className:"edui-okbutton",label:editor.getLang("ok"),editor:editor,onclick:function onclick(){dialog.close(true);}},{className:"edui-cancelbutton",label:editor.getLang("cancel"),editor:editor,onclick:function onclick(){dialog.close(false);}}]});dialog.render();editor.ui._dialogs["snapscreenDialog"]=dialog;}editor.addListener("selectionchange",function(){ui.setDisabled(editor.queryCommandState("snapscreen")==-1);});return ui;};editorui.insertcode=function(editor,list,title){list=editor.options["insertcode"]||[];title=editor.options.labelMap["insertcode"]||editor.getLang("labelMap.insertcode")||"";// if (!list.length) return;\nvar items=[];utils.each(list,function(key,val){items.push({label:key,value:val,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return\'<div class="edui-label %%-label" >\'+(this.label||"")+"</div>";}});});var ui=new editorui.Combox({editor:editor,items:items,onselect:function onselect(t,index){editor.execCommand("insertcode",this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},title:title,initValue:title,className:"edui-for-insertcode",indexByValue:function indexByValue(value){if(value){for(var i=0,ci;ci=this.items[i];i++){if(ci.value.indexOf(value)!=-1)return i;}}return-1;}});editorui.buttons["insertcode"]=ui;editor.addListener("selectionchange",function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState("insertcode");if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue("insertcode");if(!value){ui.setValue(title);return;}//trace:1871 ie下从源码模式切换回来时，字体会带单引号，而且会有逗号\nvalue&&(value=value.replace(/[\'"]/g,"").split(",")[0]);ui.setValue(value);}}});return ui;};editorui.fontfamily=function(editor,list,title){list=editor.options["fontfamily"]||[];title=editor.options.labelMap["fontfamily"]||editor.getLang("labelMap.fontfamily")||"";if(!list.length)return;for(var i=0,ci,items=[];ci=list[i];i++){var langLabel=editor.getLang("fontfamily")[ci.name]||"";(function(key,val){items.push({label:key,value:val,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return\'<div class="edui-label %%-label" style="font-family:\'+utils.unhtml(this.value)+\'">\'+(this.label||"")+"</div>";}});})(ci.label||langLabel,ci.val);}var ui=new editorui.Combox({editor:editor,items:items,onselect:function onselect(t,index){editor.execCommand("FontFamily",this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},title:title,initValue:title,className:"edui-for-fontfamily",indexByValue:function indexByValue(value){if(value){for(var i=0,ci;ci=this.items[i];i++){if(ci.value.indexOf(value)!=-1)return i;}}return-1;}});editorui.buttons["fontfamily"]=ui;editor.addListener("selectionchange",function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState("FontFamily");if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue("FontFamily");//trace:1871 ie下从源码模式切换回来时，字体会带单引号，而且会有逗号\nvalue&&(value=value.replace(/[\'"]/g,"").split(",")[0]);ui.setValue(value);}}});return ui;};editorui.fontsize=function(editor,list,title){title=editor.options.labelMap["fontsize"]||editor.getLang("labelMap.fontsize")||"";list=list||editor.options["fontsize"]||[];if(!list.length)return;var items=[];for(var i=0;i<list.length;i++){var size=list[i]+"px";items.push({label:size,value:size,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return\'<div class="edui-label %%-label" style="line-height:1;font-size:\'+this.value+\'">\'+(this.label||"")+"</div>";}});}var ui=new editorui.Combox({editor:editor,items:items,title:title,initValue:title,onselect:function onselect(t,index){editor.execCommand("FontSize",this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},className:"edui-for-fontsize"});editorui.buttons["fontsize"]=ui;editor.addListener("selectionchange",function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState("FontSize");if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);ui.setValue(editor.queryCommandValue("FontSize"));}}});return ui;};editorui.paragraph=function(editor,list,title){title=editor.options.labelMap["paragraph"]||editor.getLang("labelMap.paragraph")||"";list=editor.options["paragraph"]||[];if(utils.isEmptyObject(list))return;var items=[];for(var i in list){items.push({value:i,label:list[i]||editor.getLang("paragraph")[i],theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return\'<div class="edui-label %%-label"><span class="edui-for-\'+this.value+\'">\'+(this.label||"")+"</span></div>";}});}var ui=new editorui.Combox({editor:editor,items:items,title:title,initValue:title,className:"edui-for-paragraph",onselect:function onselect(t,index){editor.execCommand("Paragraph",this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();}});editorui.buttons["paragraph"]=ui;editor.addListener("selectionchange",function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState("Paragraph");if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue("Paragraph");var index=ui.indexByValue(value);if(index!=-1){ui.setValue(value);}else{ui.setValue(ui.initValue);}}}});return ui;};//自定义标题\neditorui.customstyle=function(editor){var list=editor.options["customstyle"]||[],title=editor.options.labelMap["customstyle"]||editor.getLang("labelMap.customstyle")||"";if(!list.length)return;var langCs=editor.getLang("customstyle");for(var i=0,items=[],t;t=list[i++];){(function(t){var ck={};ck.label=t.label?t.label:langCs[t.name];ck.style=t.style;ck.className=t.className;ck.tag=t.tag;items.push({label:ck.label,value:ck,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return\'<div class="edui-label %%-label">\'+"<"+ck.tag+" "+(ck.className?\' class="\'+ck.className+\'"\':"")+(ck.style?\' style="\'+ck.style+\'"\':"")+">"+ck.label+"</"+ck.tag+">"+"</div>";}});})(t);}var ui=new editorui.Combox({editor:editor,items:items,title:title,initValue:title,className:"edui-for-customstyle",onselect:function onselect(t,index){editor.execCommand("customstyle",this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},indexByValue:function indexByValue(value){for(var i=0,ti;ti=this.items[i++];){if(ti.label==value){return i-1;}}return-1;}});editorui.buttons["customstyle"]=ui;editor.addListener("selectionchange",function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState("customstyle");if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue("customstyle");var index=ui.indexByValue(value);if(index!=-1){ui.setValue(value);}else{ui.setValue(ui.initValue);}}}});return ui;};editorui.inserttable=function(editor,iframeUrl,title){title=editor.options.labelMap["inserttable"]||editor.getLang("labelMap.inserttable")||"";var ui=new editorui.TableButton({editor:editor,title:title,className:"edui-for-inserttable",onpicktable:function onpicktable(t,numCols,numRows){editor.execCommand("InsertTable",{numRows:numRows,numCols:numCols,border:1});},onbuttonclick:function onbuttonclick(){this.showPopup();}});editorui.buttons["inserttable"]=ui;editor.addListener("selectionchange",function(){ui.setDisabled(editor.queryCommandState("inserttable")==-1);});return ui;};editorui.lineheight=function(editor){var val=editor.options.lineheight||[];if(!val.length)return;for(var i=0,ci,items=[];ci=val[i++];){items.push({//todo:写死了\nlabel:ci,value:ci,theme:editor.options.theme,onclick:function onclick(){editor.execCommand("lineheight",this.value);}});}var ui=new editorui.MenuButton({editor:editor,className:"edui-for-lineheight",title:editor.options.labelMap["lineheight"]||editor.getLang("labelMap.lineheight")||"",items:items,onbuttonclick:function onbuttonclick(){var value=editor.queryCommandValue("LineHeight")||this.value;editor.execCommand("LineHeight",value);}});editorui.buttons["lineheight"]=ui;editor.addListener("selectionchange",function(){var state=editor.queryCommandState("LineHeight");if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue("LineHeight");value&&ui.setValue((value+"").replace(/cm/,""));ui.setChecked(state);}});return ui;};var rowspacings=["top","bottom"];for(var r=0,ri;ri=rowspacings[r++];){(function(cmd){editorui["rowspacing"+cmd]=function(editor){var val=editor.options["rowspacing"+cmd]||[];if(!val.length)return null;for(var i=0,ci,items=[];ci=val[i++];){items.push({label:ci,value:ci,theme:editor.options.theme,onclick:function onclick(){editor.execCommand("rowspacing",this.value,cmd);}});}var ui=new editorui.MenuButton({editor:editor,className:"edui-for-rowspacing"+cmd,title:editor.options.labelMap["rowspacing"+cmd]||editor.getLang("labelMap.rowspacing"+cmd)||"",items:items,onbuttonclick:function onbuttonclick(){var value=editor.queryCommandValue("rowspacing",cmd)||this.value;editor.execCommand("rowspacing",value,cmd);}});editorui.buttons[cmd]=ui;editor.addListener("selectionchange",function(){var state=editor.queryCommandState("rowspacing",cmd);if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue("rowspacing",cmd);value&&ui.setValue((value+"").replace(/%/,""));ui.setChecked(state);}});return ui;};})(ri);}//有序，无序列表\nvar lists=["insertorderedlist","insertunorderedlist"];for(var l=0,cl;cl=lists[l++];){(function(cmd){editorui[cmd]=function(editor){var vals=editor.options[cmd],_onMenuClick=function _onMenuClick(){editor.execCommand(cmd,this.value);},items=[];for(var i in vals){items.push({label:vals[i]||editor.getLang()[cmd][i]||"",value:i,theme:editor.options.theme,onclick:_onMenuClick});}var ui=new editorui.MenuButton({editor:editor,className:"edui-for-"+cmd,title:editor.getLang("labelMap."+cmd)||"",items:items,onbuttonclick:function onbuttonclick(){var value=editor.queryCommandValue(cmd)||this.value;editor.execCommand(cmd,value);}});editorui.buttons[cmd]=ui;editor.addListener("selectionchange",function(){var state=editor.queryCommandState(cmd);if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue(cmd);ui.setValue(value);ui.setChecked(state);}});return ui;};})(cl);}editorui.fullscreen=function(editor,title){title=editor.options.labelMap["fullscreen"]||editor.getLang("labelMap.fullscreen")||"";var ui=new editorui.Button({className:"edui-for-fullscreen",title:title,theme:editor.options.theme,onclick:function onclick(){if(editor.ui){editor.ui.setFullScreen(!editor.ui.isFullScreen());}this.setChecked(editor.ui.isFullScreen());}});editorui.buttons["fullscreen"]=ui;editor.addListener("selectionchange",function(){var state=editor.queryCommandState("fullscreen");ui.setDisabled(state==-1);ui.setChecked(editor.ui.isFullScreen());});return ui;};// 表情\neditorui["emotion"]=function(editor,iframeUrl){var cmd="emotion";var ui=new editorui.MultiMenuPop({title:editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd+"")||"",editor:editor,className:"edui-for-"+cmd,iframeUrl:editor.ui.mapUrl(iframeUrl||(editor.options.iframeUrlMap||{})[cmd]||iframeUrlMap[cmd])});editorui.buttons[cmd]=ui;editor.addListener("selectionchange",function(){ui.setDisabled(editor.queryCommandState(cmd)==-1);});return ui;};editorui.autotypeset=function(editor){var ui=new editorui.AutoTypeSetButton({editor:editor,title:editor.options.labelMap["autotypeset"]||editor.getLang("labelMap.autotypeset")||"",className:"edui-for-autotypeset",onbuttonclick:function onbuttonclick(){editor.execCommand("autotypeset");}});editorui.buttons["autotypeset"]=ui;editor.addListener("selectionchange",function(){ui.setDisabled(editor.queryCommandState("autotypeset")==-1);});return ui;};/* 简单上传插件 */editorui["simpleupload"]=function(editor){var name="simpleupload",ui=new editorui.Button({className:"edui-for-"+name,title:editor.options.labelMap[name]||editor.getLang("labelMap."+name)||"",onclick:function onclick(){},theme:editor.options.theme,showText:false});editorui.buttons[name]=ui;editor.addListener("ready",function(){var b=ui.getDom("body"),iconSpan=b.children[0];editor.fireEvent("simpleuploadbtnready",iconSpan);});editor.addListener("selectionchange",function(type,causeByUi,uiReady){var state=editor.queryCommandState(name);if(state==-1){ui.setDisabled(true);ui.setChecked(false);}else{if(!uiReady){ui.setDisabled(false);ui.setChecked(state);}}});return ui;};})();// adapter/editor.js\n///import core\n///commands 全屏\n///commandsName FullScreen\n///commandsTitle  全屏\n(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase,domUtils=baidu.editor.dom.domUtils;var nodeStack=[];function EditorUI(options){this.initOptions(options);this.initEditorUI();}EditorUI.prototype={uiName:"editor",initEditorUI:function initEditorUI(){this.editor.ui=this;this._dialogs={};this.initUIBase();this._initToolbars();var editor=this.editor,me=this;editor.addListener("ready",function(){//提供getDialog方法\neditor.getDialog=function(name){return editor.ui._dialogs[name+"Dialog"];};domUtils.on(editor.window,"scroll",function(evt){baidu.editor.ui.Popup.postHide(evt);});//提供编辑器实时宽高(全屏时宽高不变化)\neditor.ui._actualFrameWidth=editor.options.initialFrameWidth;UE.browser.ie&&UE.browser.version===6&&editor.container.ownerDocument.execCommand("BackgroundImageCache",false,true);//display bottom-bar label based on config\nif(editor.options.elementPathEnabled){editor.ui.getDom("elementpath").innerHTML=\'<div class="edui-editor-breadcrumb">\'+editor.getLang("elementPathTip")+":</div>";}if(editor.options.wordCount){var countFn=function countFn(){setCount(editor,me);domUtils.un(editor.document,"click",arguments.callee);};domUtils.on(editor.document,"click",countFn);editor.ui.getDom("wordcount").innerHTML=editor.getLang("wordCountTip");}editor.ui._scale();if(editor.options.scaleEnabled){if(editor.autoHeightEnabled){editor.disableAutoHeight();}me.enableScale();}else{me.disableScale();}if(!editor.options.elementPathEnabled&&!editor.options.wordCount&&!editor.options.scaleEnabled){editor.ui.getDom("elementpath").style.display="none";editor.ui.getDom("wordcount").style.display="none";editor.ui.getDom("scale").style.display="none";}if(!editor.selection.isFocus())return;editor.fireEvent("selectionchange",false,true);});editor.addListener("mousedown",function(t,evt){var el=evt.target||evt.srcElement;baidu.editor.ui.Popup.postHide(evt,el);baidu.editor.ui.ShortCutMenu.postHide(evt);});editor.addListener("delcells",function(){if(UE.ui["edittip"]){new UE.ui["edittip"](editor);}editor.getDialog("edittip").open();});var pastePop,isPaste=false,timer;editor.addListener("afterpaste",function(){if(editor.queryCommandState("pasteplain"))return;if(baidu.editor.ui.PastePicker){pastePop=new baidu.editor.ui.Popup({content:new baidu.editor.ui.PastePicker({editor:editor}),editor:editor,className:"edui-wordpastepop"});pastePop.render();}isPaste=true;});editor.addListener("afterinserthtml",function(){clearTimeout(timer);timer=setTimeout(function(){if(pastePop&&(isPaste||editor.ui._isTransfer)){if(pastePop.isHidden()){var span=domUtils.createElement(editor.document,"span",{style:"line-height:0px;",innerHTML:\'\\uFEFF\'}),range=editor.selection.getRange();range.insertNode(span);var tmp=getDomNode(span,"firstChild","previousSibling");tmp&&pastePop.showAnchor(tmp.nodeType==3?tmp.parentNode:tmp);domUtils.remove(span);}else{pastePop.show();}delete editor.ui._isTransfer;isPaste=false;}},200);});editor.addListener("contextmenu",function(t,evt){baidu.editor.ui.Popup.postHide(evt);});editor.addListener("keydown",function(t,evt){if(pastePop)pastePop.dispose(evt);var keyCode=evt.keyCode||evt.which;if(evt.altKey&&keyCode==90){UE.ui.buttons["fullscreen"].onclick();}});editor.addListener("wordcount",function(type){setCount(this,me);});function setCount(editor,ui){editor.setOpt({wordCount:true,maximumWords:10000,wordCountMsg:editor.options.wordCountMsg||editor.getLang("wordCountMsg"),wordOverFlowMsg:editor.options.wordOverFlowMsg||editor.getLang("wordOverFlowMsg")});var opt=editor.options,max=opt.maximumWords,msg=opt.wordCountMsg,errMsg=opt.wordOverFlowMsg,countDom=ui.getDom("wordcount");if(!opt.wordCount){return;}var count=editor.getContentLength(true);if(count>max){countDom.innerHTML=errMsg;editor.fireEvent("wordcountoverflow");}else{countDom.innerHTML=msg.replace("{#leave}",max-count).replace("{#count}",count);}}editor.addListener("selectionchange",function(){if(editor.options.elementPathEnabled){me[(editor.queryCommandState("elementpath")==-1?"dis":"en")+"ableElementPath"]();}if(editor.options.scaleEnabled){me[(editor.queryCommandState("scale")==-1?"dis":"en")+"ableScale"]();}});var popup=new baidu.editor.ui.Popup({editor:editor,content:"",className:"edui-bubble",_onEditButtonClick:function _onEditButtonClick(){this.hide();editor.ui._dialogs.linkDialog.open();},_onImgEditButtonClick:function _onImgEditButtonClick(name){this.hide();editor.ui._dialogs[name]&&editor.ui._dialogs[name].open();},_onImgSetFloat:function _onImgSetFloat(value){this.hide();editor.execCommand("imagefloat",value);},_setIframeAlign:function _setIframeAlign(value){var frame=popup.anchorEl;var newFrame=frame.cloneNode(true);switch(value){case-2:newFrame.setAttribute("align","");break;case-1:newFrame.setAttribute("align","left");break;case 1:newFrame.setAttribute("align","right");break;}frame.parentNode.insertBefore(newFrame,frame);domUtils.remove(frame);popup.anchorEl=newFrame;popup.showAnchor(popup.anchorEl);},_updateIframe:function _updateIframe(){var frame=editor._iframe=popup.anchorEl;if(domUtils.hasClass(frame,"ueditor_baidumap")){editor.selection.getRange().selectNode(frame).select();editor.ui._dialogs.mapDialog.open();popup.hide();}else{editor.ui._dialogs.insertframeDialog.open();popup.hide();}},_onRemoveButtonClick:function _onRemoveButtonClick(cmdName){editor.execCommand(cmdName);this.hide();},queryAutoHide:function queryAutoHide(el){if(el&&el.ownerDocument==editor.document){if(el.tagName.toLowerCase()=="img"||domUtils.findParentByTagName(el,"a",true)){return el!==popup.anchorEl;}}return baidu.editor.ui.Popup.prototype.queryAutoHide.call(this,el);}});popup.render();if(editor.options.imagePopup){editor.addListener("mouseover",function(t,evt){evt=evt||window.event;var el=evt.target||evt.srcElement;if(editor.ui._dialogs.insertframeDialog&&/iframe/gi.test(el.tagName)){var html=popup.formatHtml("<nobr>"+editor.getLang("property")+\': <span onclick=$$._setIframeAlign(-2) class="edui-clickable">\'+editor.getLang("default")+\'</span>&nbsp;&nbsp;<span onclick=$$._setIframeAlign(-1) class="edui-clickable">\'+editor.getLang("justifyleft")+\'</span>&nbsp;&nbsp;<span onclick=$$._setIframeAlign(1) class="edui-clickable">\'+editor.getLang("justifyright")+"</span>&nbsp;&nbsp;"+\' <span onclick="$$._updateIframe( this);" class="edui-clickable">\'+editor.getLang("modify")+"</span></nobr>");if(html){popup.getDom("content").innerHTML=html;popup.anchorEl=el;popup.showAnchor(popup.anchorEl);}else{popup.hide();}}});editor.addListener("selectionchange",function(t,causeByUi){if(!causeByUi)return;var html="",str="",img=editor.selection.getRange().getClosedNode(),dialogs=editor.ui._dialogs;if(img&&img.tagName=="IMG"){var dialogName="insertimageDialog";if(img.className.indexOf("edui-faked-video")!=-1||img.className.indexOf("edui-upload-video")!=-1){dialogName="insertvideoDialog";}if(img.className.indexOf("edui-faked-webapp")!=-1){dialogName="webappDialog";}if(img.src.indexOf("http://api.map.baidu.com")!=-1){dialogName="mapDialog";}if(img.className.indexOf("edui-faked-music")!=-1){dialogName="musicDialog";}if(img.src.indexOf("http://maps.google.com/maps/api/staticmap")!=-1){dialogName="gmapDialog";}if(img.getAttribute("anchorname")){dialogName="anchorDialog";html=popup.formatHtml("<nobr>"+editor.getLang("property")+\': <span onclick=$$._onImgEditButtonClick("anchorDialog") class="edui-clickable">\'+editor.getLang("modify")+"</span>&nbsp;&nbsp;"+"<span onclick=$$._onRemoveButtonClick(\'anchor\') class=\\"edui-clickable\\">"+editor.getLang("delete")+"</span></nobr>");}if(img.getAttribute("word_img")){//todo 放到dialog去做查询\neditor.word_img=[img.getAttribute("word_img")];dialogName="wordimageDialog";}if(domUtils.hasClass(img,"loadingclass")||domUtils.hasClass(img,"loaderrorclass")){dialogName="";}if(!dialogs[dialogName]){return;}str="<nobr>"+editor.getLang("property")+": "+\'<span onclick=$$._onImgSetFloat("none") class="edui-clickable">\'+editor.getLang("default")+"</span>&nbsp;&nbsp;"+\'<span onclick=$$._onImgSetFloat("left") class="edui-clickable">\'+editor.getLang("justifyleft")+"</span>&nbsp;&nbsp;"+\'<span onclick=$$._onImgSetFloat("right") class="edui-clickable">\'+editor.getLang("justifyright")+"</span>&nbsp;&nbsp;"+\'<span onclick=$$._onImgSetFloat("center") class="edui-clickable">\'+editor.getLang("justifycenter")+"</span>&nbsp;&nbsp;"+"<span onclick=\\"$$._onImgEditButtonClick(\'"+dialogName+\'\\\');" class="edui-clickable">\'+editor.getLang("modify")+"</span></nobr>";!html&&(html=popup.formatHtml(str));}if(editor.ui._dialogs.linkDialog){var link=editor.queryCommandValue("link");var url;if(link&&(url=link.getAttribute("_href")||link.getAttribute("href",2))){var txt=url;if(url.length>30){txt=url.substring(0,20)+"...";}if(html){html+=\'<div style="height:5px;"></div>\';}html+=popup.formatHtml("<nobr>"+editor.getLang("anthorMsg")+\': <a target="_blank" href="\'+url+\'" title="\'+url+\'" >\'+txt+"</a>"+\' <span class="edui-clickable" onclick="$$._onEditButtonClick();">\'+editor.getLang("modify")+"</span>"+\' <span class="edui-clickable" onclick="$$._onRemoveButtonClick(\\\'unlink\\\');"> \'+editor.getLang("clear")+"</span></nobr>");popup.showAnchor(link);}}if(html){popup.getDom("content").innerHTML=html;popup.anchorEl=img||link;popup.showAnchor(popup.anchorEl);}else{popup.hide();}});}},_initToolbars:function _initToolbars(){var editor=this.editor;var toolbars=this.toolbars||[];var toolbarUis=[];var extraUIs=[];for(var i=0;i<toolbars.length;i++){var toolbar=toolbars[i];var toolbarUi=new baidu.editor.ui.Toolbar({theme:editor.options.theme});for(var j=0;j<toolbar.length;j++){var toolbarItem=toolbar[j];var toolbarItemUi=null;if(typeof toolbarItem=="string"){toolbarItem=toolbarItem.toLowerCase();if(toolbarItem=="|"){toolbarItem="Separator";}if(toolbarItem=="||"){toolbarItem="Breakline";}var ui=baidu.editor.ui[toolbarItem];if(ui){if(utils.isFunction(ui)){toolbarItemUi=new baidu.editor.ui[toolbarItem](editor);}else{if(ui.id&&ui.id!=editor.key){continue;}var itemUI=ui.execFn.call(editor,editor,toolbarItem);if(itemUI){if(ui.index===undefined){toolbarUi.add(itemUI);continue;}else{extraUIs.push({index:ui.index,itemUI:itemUI});}}}}//fullscreen这里单独处理一下，放到首行去\nif(toolbarItem=="fullscreen"){if(toolbarUis&&toolbarUis[0]){toolbarUis[0].items.splice(0,0,toolbarItemUi);}else{toolbarItemUi&&toolbarUi.items.splice(0,0,toolbarItemUi);}continue;}}else{toolbarItemUi=toolbarItem;}if(toolbarItemUi&&toolbarItemUi.id){toolbarUi.add(toolbarItemUi);}}toolbarUis[i]=toolbarUi;}//接受外部定制的UI\nutils.each(extraUIs,function(obj){toolbarUi.add(obj.itemUI,obj.index);});this.toolbars=toolbarUis;},getHtmlTpl:function getHtmlTpl(){return\'<div id="##" class="%%">\'+\'<div id="##_toolbarbox" class="%%-toolbarbox">\'+(this.toolbars.length?\'<div id="##_toolbarboxouter" class="%%-toolbarboxouter"><div class="%%-toolbarboxinner">\'+this.renderToolbarBoxHtml()+"</div></div>":"")+\'<div id="##_toolbarmsg" class="%%-toolbarmsg" style="display:none;">\'+\'<div id = "##_upload_dialog" class="%%-toolbarmsg-upload" onclick="$$.showWordImageDialog();">\'+this.editor.getLang("clickToUpload")+"</div>"+\'<div class="%%-toolbarmsg-close" onclick="$$.hideToolbarMsg();">x</div>\'+\'<div id="##_toolbarmsg_label" class="%%-toolbarmsg-label"></div>\'+\'<div style="height:0;overflow:hidden;clear:both;"></div>\'+"</div>"+\'<div id="##_message_holder" class="%%-messageholder"></div>\'+"</div>"+\'<div id="##_iframeholder" class="%%-iframeholder">\'+"</div>"+//modify wdcount by matao\n\'<div id="##_bottombar" class="%%-bottomContainer"><table><tr>\'+\'<td id="##_elementpath" class="%%-bottombar"></td>\'+\'<td id="##_wordcount" class="%%-wordcount"></td>\'+\'<td id="##_scale" class="%%-scale"><div class="%%-icon"></div></td>\'+"</tr></table></div>"+\'<div id="##_scalelayer"></div>\'+"</div>";},showWordImageDialog:function showWordImageDialog(){this._dialogs["wordimageDialog"].open();},renderToolbarBoxHtml:function renderToolbarBoxHtml(){var buff=[];for(var i=0;i<this.toolbars.length;i++){buff.push(this.toolbars[i].renderHtml());}return buff.join("");},setFullScreen:function setFullScreen(fullscreen){var editor=this.editor,container=editor.container.parentNode.parentNode;if(this._fullscreen!=fullscreen){this._fullscreen=fullscreen;this.editor.fireEvent("beforefullscreenchange",fullscreen);if(baidu.editor.browser.gecko){var bk=editor.selection.getRange().createBookmark();}if(fullscreen){while(container.tagName!="BODY"){var position=baidu.editor.dom.domUtils.getComputedStyle(container,"position");nodeStack.push(position);container.style.position="static";container=container.parentNode;}this._bakHtmlOverflow=document.documentElement.style.overflow;this._bakBodyOverflow=document.body.style.overflow;this._bakAutoHeight=this.editor.autoHeightEnabled;this._bakScrollTop=Math.max(document.documentElement.scrollTop,document.body.scrollTop);this._bakEditorContaninerWidth=editor.iframe.parentNode.offsetWidth;if(this._bakAutoHeight){//当全屏时不能执行自动长高\neditor.autoHeightEnabled=false;this.editor.disableAutoHeight();}document.documentElement.style.overflow="hidden";//修复，滚动条不收起的问题\nwindow.scrollTo(0,window.scrollY);this._bakCssText=this.getDom().style.cssText;this._bakCssText1=this.getDom("iframeholder").style.cssText;editor.iframe.parentNode.style.width="";this._updateFullScreen();}else{while(container.tagName!="BODY"){container.style.position=nodeStack.shift();container=container.parentNode;}this.getDom().style.cssText=this._bakCssText;this.getDom("iframeholder").style.cssText=this._bakCssText1;if(this._bakAutoHeight){editor.autoHeightEnabled=true;this.editor.enableAutoHeight();}document.documentElement.style.overflow=this._bakHtmlOverflow;document.body.style.overflow=this._bakBodyOverflow;editor.iframe.parentNode.style.width=this._bakEditorContaninerWidth+"px";window.scrollTo(0,this._bakScrollTop);}if(browser.gecko&&editor.body.contentEditable==="true"){var input=document.createElement("input");document.body.appendChild(input);editor.body.contentEditable=false;setTimeout(function(){input.focus();setTimeout(function(){editor.body.contentEditable=true;editor.fireEvent("fullscreenchanged",fullscreen);editor.selection.getRange().moveToBookmark(bk).select(true);baidu.editor.dom.domUtils.remove(input);fullscreen&&window.scroll(0,0);},0);},0);}if(editor.body.contentEditable==="true"){this.editor.fireEvent("fullscreenchanged",fullscreen);this.triggerLayout();}}},_updateFullScreen:function _updateFullScreen(){if(this._fullscreen){var vpRect=uiUtils.getViewportRect();this.getDom().style.cssText="border:0;position:absolute;left:0;top:"+(this.editor.options.topOffset||0)+"px;width:"+vpRect.width+"px;height:"+vpRect.height+"px;z-index:"+(this.getDom().style.zIndex*1+100);uiUtils.setViewportOffset(this.getDom(),{left:0,top:this.editor.options.topOffset||0});this.editor.setHeight(vpRect.height-this.getDom("toolbarbox").offsetHeight-this.getDom("bottombar").offsetHeight-(this.editor.options.topOffset||0),true);//不手动调一下，会导致全屏失效\nif(browser.gecko){try{window.onresize();}catch(e){}}}},_updateElementPath:function _updateElementPath(){var bottom=this.getDom("elementpath"),list;if(this.elementPathEnabled&&(list=this.editor.queryCommandValue("elementpath"))){var buff=[];for(var i=0,ci;ci=list[i];i++){buff[i]=this.formatHtml(\'<span unselectable="on" onclick="$$.editor.execCommand(&quot;elementpath&quot;, &quot;\'+i+\'&quot;);">\'+ci+"</span>");}bottom.innerHTML=\'<div class="edui-editor-breadcrumb" onmousedown="return false;">\'+this.editor.getLang("elementPathTip")+": "+buff.join(" &gt; ")+"</div>";}else{bottom.style.display="none";}},disableElementPath:function disableElementPath(){var bottom=this.getDom("elementpath");bottom.innerHTML="";bottom.style.display="none";this.elementPathEnabled=false;},enableElementPath:function enableElementPath(){var bottom=this.getDom("elementpath");bottom.style.display="";this.elementPathEnabled=true;this._updateElementPath();},_scale:function _scale(){var doc=document,editor=this.editor,editorHolder=editor.container,editorDocument=editor.document,toolbarBox=this.getDom("toolbarbox"),bottombar=this.getDom("bottombar"),scale=this.getDom("scale"),scalelayer=this.getDom("scalelayer");var isMouseMove=false,position=null,minEditorHeight=0,minEditorWidth=editor.options.minFrameWidth,pageX=0,pageY=0,scaleWidth=0,scaleHeight=0;function down(){position=domUtils.getXY(editorHolder);if(!minEditorHeight){minEditorHeight=editor.options.minFrameHeight+toolbarBox.offsetHeight+bottombar.offsetHeight;}scalelayer.style.cssText="position:absolute;left:0;display:;top:0;background-color:#41ABFF;opacity:0.4;filter: Alpha(opacity=40);width:"+editorHolder.offsetWidth+"px;height:"+editorHolder.offsetHeight+"px;z-index:"+(editor.options.zIndex+1);domUtils.on(doc,"mousemove",move);domUtils.on(editorDocument,"mouseup",up);domUtils.on(doc,"mouseup",up);}var me=this;//by xuheng 全屏时关掉缩放\nthis.editor.addListener("fullscreenchanged",function(e,fullScreen){if(fullScreen){me.disableScale();}else{if(me.editor.options.scaleEnabled){me.enableScale();var tmpNode=me.editor.document.createElement("span");me.editor.body.appendChild(tmpNode);me.editor.body.style.height=Math.max(domUtils.getXY(tmpNode).y,me.editor.iframe.offsetHeight-20)+"px";domUtils.remove(tmpNode);}}});function move(event){clearSelection();var e=event||window.event;pageX=e.pageX||doc.documentElement.scrollLeft+e.clientX;pageY=e.pageY||doc.documentElement.scrollTop+e.clientY;scaleWidth=pageX-position.x;scaleHeight=pageY-position.y;if(scaleWidth>=minEditorWidth){isMouseMove=true;scalelayer.style.width=scaleWidth+"px";}if(scaleHeight>=minEditorHeight){isMouseMove=true;scalelayer.style.height=scaleHeight+"px";}}function up(){if(isMouseMove){isMouseMove=false;editor.ui._actualFrameWidth=scalelayer.offsetWidth-2;editorHolder.style.width=editor.ui._actualFrameWidth+"px";editor.setHeight(scalelayer.offsetHeight-bottombar.offsetHeight-toolbarBox.offsetHeight-2,true);}if(scalelayer){scalelayer.style.display="none";}clearSelection();domUtils.un(doc,"mousemove",move);domUtils.un(editorDocument,"mouseup",up);domUtils.un(doc,"mouseup",up);}function clearSelection(){if(browser.ie)doc.selection.clear();else window.getSelection().removeAllRanges();}this.enableScale=function(){//trace:2868\nif(editor.queryCommandState("source")==1)return;scale.style.display="";this.scaleEnabled=true;domUtils.on(scale,"mousedown",down);};this.disableScale=function(){scale.style.display="none";this.scaleEnabled=false;domUtils.un(scale,"mousedown",down);};},isFullScreen:function isFullScreen(){return this._fullscreen;},postRender:function postRender(){UIBase.prototype.postRender.call(this);for(var i=0;i<this.toolbars.length;i++){this.toolbars[i].postRender();}var me=this;var timerId,domUtils=baidu.editor.dom.domUtils,updateFullScreenTime=function updateFullScreenTime(){clearTimeout(timerId);timerId=setTimeout(function(){me._updateFullScreen();});};domUtils.on(window,"resize",updateFullScreenTime);me.addListener("destroy",function(){domUtils.un(window,"resize",updateFullScreenTime);clearTimeout(timerId);});},showToolbarMsg:function showToolbarMsg(msg,flag){this.getDom("toolbarmsg_label").innerHTML=msg;this.getDom("toolbarmsg").style.display="";//\nif(!flag){var w=this.getDom("upload_dialog");w.style.display="none";}},hideToolbarMsg:function hideToolbarMsg(){this.getDom("toolbarmsg").style.display="none";},mapUrl:function mapUrl(url){return url?url.replace("~/",this.editor.options.UEDITOR_HOME_URL||""):"";},triggerLayout:function triggerLayout(){var dom=this.getDom();if(dom.style.zoom=="1"){dom.style.zoom="100%";}else{dom.style.zoom="1";}}};utils.inherits(EditorUI,baidu.editor.ui.UIBase);var instances={};UE.ui.Editor=function(options){var editor=new UE.Editor(options);editor.options.editor=editor;utils.loadFile(document,{href:editor.options.themePath+editor.options.theme+"/css/ueditor.css",tag:"link",type:"text/css",rel:"stylesheet"});var oldRender=editor.render;editor.render=function(holder){if(holder.constructor===String){editor.key=holder;instances[holder]=editor;}utils.domReady(function(){editor.langIsReady?renderUI():editor.addListener("langReady",renderUI);function renderUI(){editor.setOpt({labelMap:editor.options.labelMap||editor.getLang("labelMap")});new EditorUI(editor.options);if(holder){if(holder.constructor===String){holder=document.getElementById(holder);}holder&&holder.getAttribute("name")&&(editor.options.textarea=holder.getAttribute("name"));if(holder&&/script|textarea/gi.test(holder.tagName)){var newDiv=document.createElement("div");holder.parentNode.insertBefore(newDiv,holder);var cont=holder.value||holder.innerHTML;editor.options.initialContent=/^[\\t\\r\\n ]*$/.test(cont)?editor.options.initialContent:cont.replace(/>[\\n\\r\\t]+([ ]{4})+/g,">").replace(/[\\n\\r\\t]+([ ]{4})+</g,"<").replace(/>[\\n\\r\\t]+</g,"><");holder.className&&(newDiv.className=holder.className);holder.style.cssText&&(newDiv.style.cssText=holder.style.cssText);if(/textarea/i.test(holder.tagName)){editor.textarea=holder;editor.textarea.style.display="none";}else{holder.parentNode.removeChild(holder);}if(holder.id){newDiv.id=holder.id;domUtils.removeAttributes(holder,"id");}holder=newDiv;holder.innerHTML="";}}domUtils.addClass(holder,"edui-"+editor.options.theme);editor.ui.render(holder);var opt=editor.options;//给实例添加一个编辑器的容器引用\neditor.container=editor.ui.getDom();var parents=domUtils.findParents(holder,true);var displays=[];for(var i=0,ci;ci=parents[i];i++){displays[i]=ci.style.display;ci.style.display="block";}if(opt.initialFrameWidth){opt.minFrameWidth=opt.initialFrameWidth;}else{opt.minFrameWidth=opt.initialFrameWidth=holder.offsetWidth;var styleWidth=holder.style.width;if(/%$/.test(styleWidth)){opt.initialFrameWidth=styleWidth;}}if(opt.initialFrameHeight){opt.minFrameHeight=opt.initialFrameHeight;}else{opt.initialFrameHeight=opt.minFrameHeight=holder.offsetHeight;}for(var i=0,ci;ci=parents[i];i++){ci.style.display=displays[i];}//编辑器最外容器设置了高度，会导致，编辑器不占位\n//todo 先去掉，没有找到原因\nif(holder.style.height){holder.style.height="";}editor.container.style.width=opt.initialFrameWidth+(/%$/.test(opt.initialFrameWidth)?"":"px");editor.container.style.zIndex=opt.zIndex;oldRender.call(editor,editor.ui.getDom("iframeholder"));editor.fireEvent("afteruiready");}});};return editor;};/**\n     * @file\n     * @name UE\n     * @short UE\n     * @desc UEditor的顶部命名空间\n     *//**\n     * @name getEditor\n     * @since 1.2.4+\n     * @grammar UE.getEditor(id,[opt])  =>  Editor实例\n     * @desc 提供一个全局的方法得到编辑器实例\n     *\n     * * \'\'id\'\'  放置编辑器的容器id, 如果容器下的编辑器已经存在，就直接返回\n     * * \'\'opt\'\' 编辑器的可选参数\n     * @example\n     *  UE.getEditor(\'containerId\',{onready:function(){//创建一个编辑器实例\n     *      this.setContent(\'hello\')\n     *  }});\n     *  UE.getEditor(\'containerId\'); //返回刚创建的实例\n     *\n     */UE.getEditor=function(id,opt){var editor=instances[id];if(!editor){editor=instances[id]=new UE.ui.Editor(opt);editor.render(id);}return editor;};UE.delEditor=function(id){var editor;if(editor=instances[id]){editor.key&&editor.destroy();delete instances[id];}};UE.registerUI=function(uiName,fn,index,editorId){utils.each(uiName.split(/\\s+/),function(name){baidu.editor.ui[name]={id:editorId,execFn:fn,index:index};});};})();// adapter/message.js\nUE.registerUI("message",function(editor){var editorui=baidu.editor.ui;var Message=editorui.Message;var holder;var _messageItems=[];var me=editor;me.setOpt("enableMessageShow",true);if(me.getOpt("enableMessageShow")===false){return;}me.addListener("ready",function(){holder=document.getElementById(me.ui.id+"_message_holder");updateHolderPos();setTimeout(function(){updateHolderPos();},500);});me.addListener("showmessage",function(type,opt){opt=utils.isString(opt)?{content:opt}:opt;var message=new Message({timeout:opt.timeout,type:opt.type,content:opt.content,keepshow:opt.keepshow,editor:me}),mid=opt.id||"msg_"+(+new Date()).toString(36);message.render(holder);_messageItems[mid]=message;message.reset(opt);updateHolderPos();return mid;});me.addListener("updatemessage",function(type,id,opt){opt=utils.isString(opt)?{content:opt}:opt;var message=_messageItems[id];message.render(holder);message&&message.reset(opt);});me.addListener("hidemessage",function(type,id){var message=_messageItems[id];message&&message.hide();});function updateHolderPos(){if(!holder||!me.ui)return;var toolbarbox=me.ui.getDom("toolbarbox");if(toolbarbox){holder.style.top=toolbarbox.offsetHeight+3+"px";}holder.style.zIndex=Math.max(me.options.zIndex,me.iframe.style.zIndex)+1;}});// adapter/autosave.js\nUE.registerUI("autosave",function(editor){var timer=null,uid=null;editor.on("afterautosave",function(){clearTimeout(timer);timer=setTimeout(function(){if(uid){editor.trigger("hidemessage",uid);}uid=editor.trigger("showmessage",{content:editor.getLang("autosave.success"),timeout:2000});},2000);});});// })();\nexports.default=UE;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * Created with JetBrains PhpStorm.\r\n * User: taoqili\r\n * Date: 12-6-12\r\n * Time: 下午5:02\r\n * To change this template use File | Settings | File Templates.\r\n */\nvar i18N = {\n    'labelMap': {\n        'anchor': '锚点', 'undo': '撤销', 'redo': '重做', 'bold': '加粗', 'indent': '首行缩进', 'snapscreen': '截图',\n        'italic': '斜体', 'underline': '下划线', 'strikethrough': '删除线', 'subscript': '下标', 'fontborder': '字符边框',\n        'superscript': '上标', 'formatmatch': '格式刷', 'source': '源代码', 'blockquote': '引用',\n        'pasteplain': '纯文本粘贴模式', 'selectall': '全选', 'print': '打印', 'preview': '预览',\n        'horizontal': '分隔线', 'removeformat': '清除格式', 'time': '时间', 'date': '日期',\n        'unlink': '取消链接', 'insertrow': '前插入行', 'insertcol': '前插入列', 'mergeright': '右合并单元格', 'mergedown': '下合并单元格',\n        'deleterow': '删除行', 'deletecol': '删除列', 'splittorows': '拆分成行',\n        'splittocols': '拆分成列', 'splittocells': '完全拆分单元格', 'deletecaption': '删除表格标题', 'inserttitle': '插入标题',\n        'mergecells': '合并多个单元格', 'deletetable': '删除表格', 'cleardoc': '清空文档', 'insertparagraphbeforetable': \"表格前插入行\", 'insertcode': '代码语言',\n        'fontfamily': '字体', 'fontsize': '字号', 'paragraph': '段落格式', 'simpleupload': '单图上传', 'insertimage': '多图上传', 'edittable': '表格属性', 'edittd': '单元格属性', 'link': '超链接',\n        'emotion': '表情', 'spechars': '特殊字符', 'searchreplace': '查询替换', 'map': 'Baidu地图', 'gmap': 'Google地图',\n        'insertvideo': '视频', 'help': '帮助', 'justifyleft': '居左对齐', 'justifyright': '居右对齐', 'justifycenter': '居中对齐',\n        'justifyjustify': '两端对齐', 'forecolor': '字体颜色', 'backcolor': '背景色', 'insertorderedlist': '有序列表',\n        'insertunorderedlist': '无序列表', 'fullscreen': '全屏', 'directionalityltr': '从左向右输入', 'directionalityrtl': '从右向左输入',\n        'rowspacingtop': '段前距', 'rowspacingbottom': '段后距', 'pagebreak': '分页', 'insertframe': '插入Iframe', 'imagenone': '默认',\n        'imageleft': '左浮动', 'imageright': '右浮动', 'attachment': '附件', 'imagecenter': '居中', 'wordimage': '图片转存',\n        'lineheight': '行间距', 'edittip': '编辑提示', 'customstyle': '自定义标题', 'autotypeset': '自动排版',\n        'webapp': '百度应用', 'touppercase': '字母大写', 'tolowercase': '字母小写', 'background': '背景', 'template': '模板', 'scrawl': '涂鸦',\n        'music': '音乐', 'inserttable': '插入表格', 'drafts': '从草稿箱加载', 'charts': '图表'\n    },\n    'insertorderedlist': {\n        'num': '1,2,3...',\n        'num1': '1),2),3)...',\n        'num2': '(1),(2),(3)...',\n        'cn': '一,二,三....',\n        'cn1': '一),二),三)....',\n        'cn2': '(一),(二),(三)....',\n        'decimal': '1,2,3...',\n        'lower-alpha': 'a,b,c...',\n        'lower-roman': 'i,ii,iii...',\n        'upper-alpha': 'A,B,C...',\n        'upper-roman': 'I,II,III...'\n    },\n    'insertunorderedlist': {\n        'circle': '○ 大圆圈',\n        'disc': '● 小黑点',\n        'square': '■ 小方块 ',\n        'dash': '— 破折号',\n        'dot': ' 。 小圆圈'\n    },\n    'paragraph': { 'p': '段落', 'h1': '标题 1', 'h2': '标题 2', 'h3': '标题 3', 'h4': '标题 4', 'h5': '标题 5', 'h6': '标题 6' },\n    'fontfamily': {\n        'songti': '宋体',\n        'kaiti': '楷体',\n        'heiti': '黑体',\n        'lishu': '隶书',\n        'yahei': '微软雅黑',\n        'andaleMono': 'andale mono',\n        'arial': 'arial',\n        'arialBlack': 'arial black',\n        'comicSansMs': 'comic sans ms',\n        'impact': 'impact',\n        'timesNewRoman': 'times new roman'\n    },\n    'customstyle': {\n        'tc': '标题居中',\n        'tl': '标题居左',\n        'im': '强调',\n        'hi': '明显强调'\n    },\n    'autoupload': {\n        'exceedSizeError': '文件大小超出限制',\n        'exceedTypeError': '文件格式不允许',\n        'jsonEncodeError': '服务器返回格式错误',\n        'loading': \"正在上传...\",\n        'loadError': \"上传错误\",\n        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！'\n    },\n    'simpleupload': {\n        'exceedSizeError': '文件大小超出限制',\n        'exceedTypeError': '文件格式不允许',\n        'jsonEncodeError': '服务器返回格式错误',\n        'loading': \"正在上传...\",\n        'loadError': \"上传错误\",\n        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！'\n    },\n    'elementPathTip': \"元素路径\",\n    'wordCountTip': \"字数统计\",\n    'wordCountMsg': '当前已输入{#count}个字符, 您还可以输入{#leave}个字符。 ',\n    'wordOverFlowMsg': '<span style=\"color:red;\">字数超出最大允许值，服务器可能拒绝保存！</span>',\n    'ok': \"确认\",\n    'cancel': \"取消\",\n    'closeDialog': \"关闭对话框\",\n    'tableDrag': \"表格拖动必须引入uiUtils.js文件！\",\n    'autofloatMsg': \"工具栏浮动依赖编辑器UI，您首先需要引入UI文件!\",\n    'loadconfigError': '获取后台配置项请求出错，上传功能将不能正常使用！',\n    'loadconfigFormatError': '后台配置项返回格式出错，上传功能将不能正常使用！',\n    'loadconfigHttpError': '请求后台配置项http错误，上传功能将不能正常使用！',\n    'snapScreen_plugin': {\n        'browserMsg': \"仅支持IE浏览器！\",\n        'callBackErrorMsg': \"服务器返回数据有误，请检查配置项之后重试。\",\n        'uploadErrorMsg': \"截图上传失败，请检查服务器端环境! \"\n    },\n    'insertcode': {\n        'as3': 'ActionScript 3',\n        'bash': 'Bash/Shell',\n        'cpp': 'C/C++',\n        'css': 'CSS',\n        'cf': 'ColdFusion',\n        'c#': 'C#',\n        'delphi': 'Delphi',\n        'diff': 'Diff',\n        'erlang': 'Erlang',\n        'groovy': 'Groovy',\n        'html': 'HTML',\n        'java': 'Java',\n        'jfx': 'JavaFX',\n        'js': 'JavaScript',\n        'pl': 'Perl',\n        'php': 'PHP',\n        'plain': 'Plain Text',\n        'ps': 'PowerShell',\n        'python': 'Python',\n        'ruby': 'Ruby',\n        'scala': 'Scala',\n        'sql': 'SQL',\n        'vb': 'Visual Basic',\n        'xml': 'XML'\n    },\n    'confirmClear': \"确定清空当前文档么？\",\n    'contextMenu': {\n        'delete': \"删除\",\n        'selectall': \"全选\",\n        'deletecode': \"删除代码\",\n        'cleardoc': \"清空文档\",\n        'confirmclear': \"确定清空当前文档么？\",\n        'unlink': \"删除超链接\",\n        'paragraph': \"段落格式\",\n        'edittable': \"表格属性\",\n        'aligntd': \"单元格对齐方式\",\n        'aligntable': '表格对齐方式',\n        'tableleft': '左浮动',\n        'tablecenter': '居中显示',\n        'tableright': '右浮动',\n        'edittd': \"单元格属性\",\n        'setbordervisible': '设置表格边线可见',\n        'justifyleft': '左对齐',\n        'justifyright': '右对齐',\n        'justifycenter': '居中对齐',\n        'justifyjustify': '两端对齐',\n        'table': \"表格\",\n        'inserttable': '插入表格',\n        'deletetable': \"删除表格\",\n        'insertparagraphbefore': \"前插入段落\",\n        'insertparagraphafter': '后插入段落',\n        'deleterow': \"删除当前行\",\n        'deletecol': \"删除当前列\",\n        'insertrow': \"前插入行\",\n        'insertcol': \"左插入列\",\n        'insertrownext': '后插入行',\n        'insertcolnext': '右插入列',\n        'insertcaption': '插入表格名称',\n        'deletecaption': '删除表格名称',\n        'inserttitle': '插入表格标题行',\n        'deletetitle': '删除表格标题行',\n        'inserttitlecol': '插入表格标题列',\n        'deletetitlecol': '删除表格标题列',\n        'averageDiseRow': '平均分布各行',\n        'averageDisCol': '平均分布各列',\n        'mergeright': \"向右合并\",\n        'mergeleft': \"向左合并\",\n        'mergedown': \"向下合并\",\n        'mergecells': \"合并单元格\",\n        'splittocells': \"完全拆分单元格\",\n        'splittocols': \"拆分成列\",\n        'splittorows': \"拆分成行\",\n        'tablesort': '表格排序',\n        'enablesort': '设置表格可排序',\n        'disablesort': '取消表格可排序',\n        'reversecurrent': '逆序当前',\n        'orderbyasc': '按ASCII字符升序',\n        'reversebyasc': '按ASCII字符降序',\n        'orderbynum': '按数值大小升序',\n        'reversebynum': '按数值大小降序',\n        'borderbk': '边框底纹',\n        'setcolor': '表格隔行变色',\n        'unsetcolor': '取消表格隔行变色',\n        'setbackground': '选区背景隔行',\n        'unsetbackground': '取消选区背景',\n        'redandblue': '红蓝相间',\n        'threecolorgradient': '三色渐变',\n        'copy': \"复制(Ctrl + c)\",\n        'copymsg': \"浏览器不支持,请使用 'Ctrl + c'\",\n        'paste': \"粘贴(Ctrl + v)\",\n        'pastemsg': \"浏览器不支持,请使用 'Ctrl + v'\"\n    },\n    'copymsg': \"浏览器不支持,请使用 'Ctrl + c'\",\n    'pastemsg': \"浏览器不支持,请使用 'Ctrl + v'\",\n    'anthorMsg': \"链接\",\n    'clearColor': '清空颜色',\n    'standardColor': '标准颜色',\n    'themeColor': '主题颜色',\n    'property': '属性',\n    'default': '默认',\n    'modify': '修改',\n    'justifyleft': '左对齐',\n    'justifyright': '右对齐',\n    'justifycenter': '居中',\n    'justify': '默认',\n    'clear': '清除',\n    'anchorMsg': '锚点',\n    'delete': '删除',\n    'clickToUpload': \"点击上传\",\n    'unset': '尚未设置语言文件',\n    't_row': '行',\n    't_col': '列',\n    'more': '更多',\n    'pasteOpt': '粘贴选项',\n    'pasteSourceFormat': \"保留源格式\",\n    'tagFormat': '只保留标签',\n    'pasteTextFormat': '只保留文本',\n    'autoTypeSet': {\n        'mergeLine': \"合并空行\",\n        'delLine': \"清除空行\",\n        'removeFormat': \"清除格式\",\n        'indent': \"首行缩进\",\n        'alignment': \"对齐方式\",\n        'imageFloat': \"图片浮动\",\n        'removeFontsize': \"清除字号\",\n        'removeFontFamily': \"清除字体\",\n        'removeHtml': \"清除冗余HTML代码\",\n        'pasteFilter': \"粘贴过滤\",\n        'run': \"执行\",\n        'symbol': '符号转换',\n        'bdc2sb': '全角转半角',\n        'tobdc': '半角转全角'\n    },\n\n    'background': {\n        'static': {\n            'lang_background_normal': '背景设置',\n            'lang_background_local': '在线图片',\n            'lang_background_set': '选项',\n            'lang_background_none': '无背景色',\n            'lang_background_colored': '有背景色',\n            'lang_background_color': '颜色设置',\n            'lang_background_netimg': '网络图片',\n            'lang_background_align': '对齐方式',\n            'lang_background_position': '精确定位',\n            'repeatType': { 'options': [\"居中\", \"横向重复\", \"纵向重复\", \"平铺\", \"自定义\"] }\n\n        },\n        'noUploadImage': \"当前未上传过任何图片！\",\n        'toggleSelect': \"单击可切换选中状态\\n原图尺寸: \"\n    },\n    //===============dialog i18N=======================\n    'insertimage': {\n        'static': {\n            'lang_tab_remote': \"插入图片\", //节点\n            'lang_tab_upload': \"本地上传\",\n            'lang_tab_online': \"在线管理\",\n            'lang_tab_search': \"图片搜索\",\n            'lang_input_url': \"地 址：\",\n            'lang_input_size': \"大 小：\",\n            'lang_input_width': \"宽度\",\n            'lang_input_height': \"高度\",\n            'lang_input_border': \"边 框：\",\n            'lang_input_vhspace': \"边 距：\",\n            'lang_input_title': \"描 述：\",\n            'lang_input_align': '图片浮动方式：',\n            'lang_imgLoading': \"　图片加载中……\",\n            'lang_start_upload': \"开始上传\",\n            'lock': { 'title': \"锁定宽高比例\" }, //属性\n            'searchType': { 'title': \"图片类型\", 'options': [\"新闻\", \"壁纸\", \"表情\", \"头像\"] }, //select的option\n            'searchTxt': { 'value': \"请输入搜索关键词\" },\n            'searchBtn': { 'value': \"百度一下\" },\n            'searchReset': { 'value': \"清空搜索\" },\n            'noneAlign': { 'title': '无浮动' },\n            'leftAlign': { 'title': '左浮动' },\n            'rightAlign': { 'title': '右浮动' },\n            'centerAlign': { 'title': '居中独占一行' }\n        },\n        'uploadSelectFile': '点击选择图片',\n        'uploadAddFile': '继续添加',\n        'uploadStart': '开始上传',\n        'uploadPause': '暂停上传',\n        'uploadContinue': '继续上传',\n        'uploadRetry': '重试上传',\n        'uploadDelete': '删除',\n        'uploadTurnLeft': '向左旋转',\n        'uploadTurnRight': '向右旋转',\n        'uploadPreview': '预览中',\n        'uploadNoPreview': '不能预览',\n        'updateStatusReady': '选中_张图片，共_KB。',\n        'updateStatusConfirm': '已成功上传_张照片，_张照片上传失败',\n        'updateStatusFinish': '共_张（_KB），_张上传成功',\n        'updateStatusError': '，_张上传失败。',\n        'errorNotSupport': 'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。',\n        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！',\n        'errorExceedSize': '文件大小超出',\n        'errorFileType': '文件格式不允许',\n        'errorInterrupt': '文件传输中断',\n        'errorUploadRetry': '上传失败，请重试',\n        'errorHttp': 'http请求错误',\n        'errorServerUpload': '服务器返回出错',\n        'remoteLockError': \"宽高不正确,不能所定比例\",\n        'numError': \"请输入正确的长度或者宽度值！例如：123，400\",\n        'imageUrlError': \"不允许的图片格式或者图片域！\",\n        'imageLoadError': \"图片加载失败！请检查链接地址或网络状态！\",\n        'searchRemind': \"请输入搜索关键词\",\n        'searchLoading': \"图片加载中，请稍后……\",\n        'searchRetry': \" :( ，抱歉，没有找到图片！请重试一次！\"\n    },\n    'attachment': {\n        'static': {\n            'lang_tab_upload': '上传附件',\n            'lang_tab_online': '在线附件',\n            'lang_start_upload': \"开始上传\",\n            'lang_drop_remind': \"可以将文件拖到这里，单次最多可选100个文件\"\n        },\n        'uploadSelectFile': '点击选择文件',\n        'uploadAddFile': '继续添加',\n        'uploadStart': '开始上传',\n        'uploadPause': '暂停上传',\n        'uploadContinue': '继续上传',\n        'uploadRetry': '重试上传',\n        'uploadDelete': '删除',\n        'uploadTurnLeft': '向左旋转',\n        'uploadTurnRight': '向右旋转',\n        'uploadPreview': '预览中',\n        'updateStatusReady': '选中_个文件，共_KB。',\n        'updateStatusConfirm': '已成功上传_个文件，_个文件上传失败',\n        'updateStatusFinish': '共_个（_KB），_个上传成功',\n        'updateStatusError': '，_张上传失败。',\n        'errorNotSupport': 'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。',\n        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！',\n        'errorExceedSize': '文件大小超出',\n        'errorFileType': '文件格式不允许',\n        'errorInterrupt': '文件传输中断',\n        'errorUploadRetry': '上传失败，请重试',\n        'errorHttp': 'http请求错误',\n        'errorServerUpload': '服务器返回出错'\n    },\n    'insertvideo': {\n        'static': {\n            'lang_tab_insertV': \"插入视频\",\n            'lang_tab_searchV': \"搜索视频\",\n            'lang_tab_uploadV': \"上传视频\",\n            'lang_video_url': \"视频网址\",\n            'lang_video_size': \"视频尺寸\",\n            'lang_videoW': \"宽度\",\n            'lang_videoH': \"高度\",\n            'lang_alignment': \"对齐方式\",\n            'videoSearchTxt': { 'value': \"请输入搜索关键字！\" },\n            'videoType': { 'options': [\"全部\", \"热门\", \"娱乐\", \"搞笑\", \"体育\", \"科技\", \"综艺\"] },\n            'videoSearchBtn': { 'value': \"百度一下\" },\n            'videoSearchReset': { 'value': \"清空结果\" },\n\n            'lang_input_fileStatus': ' 当前未上传文件',\n            'startUpload': { 'style': \"background:url(upload.png) no-repeat;\" },\n\n            'lang_upload_size': \"视频尺寸\",\n            'lang_upload_width': \"宽度\",\n            'lang_upload_height': \"高度\",\n            'lang_upload_alignment': \"对齐方式\",\n            'lang_format_advice': \"建议使用mp4格式.\"\n\n        },\n        'numError': \"请输入正确的数值，如123,400\",\n        'floatLeft': \"左浮动\",\n        'floatRight': \"右浮动\",\n        '\"default\"': \"默认\",\n        'block': \"独占一行\",\n        'urlError': \"输入的视频地址有误，请检查后再试！\",\n        'loading': \" &nbsp;视频加载中，请等待……\",\n        'clickToSelect': \"点击选中\",\n        'goToSource': '访问源视频',\n        'noVideo': \" &nbsp; &nbsp;抱歉，找不到对应的视频，请重试！\",\n\n        'browseFiles': '浏览文件',\n        'uploadSuccess': '上传成功!',\n        'delSuccessFile': '从成功队列中移除',\n        'delFailSaveFile': '移除保存失败文件',\n        'statusPrompt': ' 个文件已上传！ ',\n        'flashVersionError': '当前Flash版本过低，请更新FlashPlayer后重试！',\n        'flashLoadingError': 'Flash加载失败!请检查路径或网络状态',\n        'fileUploadReady': '等待上传……',\n        'delUploadQueue': '从上传队列中移除',\n        'limitPrompt1': '单次不能选择超过',\n        'limitPrompt2': '个文件！请重新选择！',\n        'delFailFile': '移除失败文件',\n        'fileSizeLimit': '文件大小超出限制！',\n        'emptyFile': '空文件无法上传！',\n        'fileTypeError': '文件类型不允许！',\n        'unknownError': '未知错误！',\n        'fileUploading': '上传中，请等待……',\n        'cancelUpload': '取消上传',\n        'netError': '网络错误',\n        'failUpload': '上传失败!',\n        'serverIOError': '服务器IO错误！',\n        'noAuthority': '无权限！',\n        'fileNumLimit': '上传个数限制',\n        'failCheck': '验证失败，本次上传被跳过！',\n        'fileCanceling': '取消中，请等待……',\n        'stopUploading': '上传已停止……',\n\n        'uploadSelectFile': '点击选择文件',\n        'uploadAddFile': '继续添加',\n        'uploadStart': '开始上传',\n        'uploadPause': '暂停上传',\n        'uploadContinue': '继续上传',\n        'uploadRetry': '重试上传',\n        'uploadDelete': '删除',\n        'uploadTurnLeft': '向左旋转',\n        'uploadTurnRight': '向右旋转',\n        'uploadPreview': '预览中',\n        'updateStatusReady': '选中_个文件，共_KB。',\n        'updateStatusConfirm': '成功上传_个，_个失败',\n        'updateStatusFinish': '共_个(_KB)，_个成功上传',\n        'updateStatusError': '，_张上传失败。',\n        'errorNotSupport': 'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。',\n        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！',\n        'errorExceedSize': '文件大小超出',\n        'errorFileType': '文件格式不允许',\n        'errorInterrupt': '文件传输中断',\n        'errorUploadRetry': '上传失败，请重试',\n        'errorHttp': 'http请求错误',\n        'errorServerUpload': '服务器返回出错'\n    },\n    'webapp': {\n        'tip1': \"本功能由百度APP提供，如看到此页面，请各位站长首先申请百度APPKey!\",\n        'tip2': \"申请完成之后请至ueditor.config.js中配置获得的appkey! \",\n        'applyFor': \"点此申请\",\n        'anthorApi': \"百度API\"\n    },\n    'template': {\n        'static': {\n            'lang_template_bkcolor': '背景颜色',\n            'lang_template_clear': '保留原有内容',\n            'lang_template_select': '选择模板'\n        },\n        'blank': \"空白文档\",\n        'blog': \"博客文章\",\n        'resume': \"个人简历\",\n        'richText': \"图文混排\",\n        'sciPapers': \"科技论文\"\n\n    },\n    'scrawl': {\n        'static': {\n            'lang_input_previousStep': \"上一步\",\n            'lang_input_nextsStep': \"下一步\",\n            'lang_input_clear': '清空',\n            'lang_input_addPic': '添加背景',\n            'lang_input_ScalePic': '缩放背景',\n            'lang_input_removePic': '删除背景',\n            'J_imgTxt': { title: '添加背景图片' }\n        },\n        'noScarwl': \"尚未作画，白纸一张~\",\n        'scrawlUpLoading': \"涂鸦上传中,别急哦~\",\n        'continueBtn': \"继续\",\n        'imageError': \"糟糕，图片读取失败了！\",\n        'backgroundUploading': '背景图片上传中,别急哦~'\n    },\n    'music': {\n        'static': {\n            'lang_input_tips': \"输入歌手/歌曲/专辑，搜索您感兴趣的音乐！\",\n            'J_searchBtn': { value: '搜索歌曲' }\n        },\n        'emptyTxt': '未搜索到相关音乐结果，请换一个关键词试试。',\n        'chapter': '歌曲',\n        'singer': '歌手',\n        'special': '专辑',\n        'listenTest': '试听'\n    },\n    'anchor': {\n        'static': {\n            'lang_input_anchorName': '锚点名字：'\n        }\n    },\n    'charts': {\n        'static': {\n            'lang_data_source': '数据源：',\n            'lang_chart_format': '图表格式：',\n            'lang_data_align': '数据对齐方式',\n            'lang_chart_align_same': '数据源与图表X轴Y轴一致',\n            'lang_chart_align_reverse': '数据源与图表X轴Y轴相反',\n            'lang_chart_title': '图表标题',\n            'lang_chart_main_title': '主标题：',\n            'lang_chart_sub_title': '子标题：',\n            'lang_chart_x_title': 'X轴标题：',\n            'lang_chart_y_title': 'Y轴标题：',\n            'lang_chart_tip': '提示文字',\n            'lang_cahrt_tip_prefix': '提示文字前缀：',\n            'lang_cahrt_tip_description': '仅饼图有效， 当鼠标移动到饼图中相应的块上时，提示框内的文字的前缀',\n            'lang_chart_data_unit': '数据单位',\n            'lang_chart_data_unit_title': '单位：',\n            'lang_chart_data_unit_description': '显示在每个数据点上的数据的单位， 比如： 温度的单位 ℃',\n            'lang_chart_type': '图表类型：',\n            'lang_prev_btn': '上一个',\n            'lang_next_btn': '下一个'\n        }\n    },\n    'emotion': {\n        'static': {\n            'lang_input_choice': '精选',\n            'lang_input_Tuzki': '兔斯基',\n            'lang_input_BOBO': 'BOBO',\n            'lang_input_lvdouwa': '绿豆蛙',\n            'lang_input_babyCat': 'baby猫',\n            'lang_input_bubble': '泡泡',\n            'lang_input_youa': '有啊'\n        }\n    },\n    'gmap': {\n        'static': {\n            'lang_input_address': '地址',\n            'lang_input_search': '搜索',\n            'address': { value: \"北京\" }\n        },\n        searchError: '无法定位到该地址!'\n    },\n    'help': {\n        'static': {\n            'lang_input_about': '关于UEditor',\n            'lang_input_shortcuts': '快捷键',\n            'lang_input_introduction': 'UEditor是由百度web前端研发部开发的所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点。开源基于BSD协议，允许自由使用和修改代码。',\n            'lang_Txt_shortcuts': '快捷键',\n            'lang_Txt_func': '功能',\n            'lang_Txt_bold': '给选中字设置为加粗',\n            'lang_Txt_copy': '复制选中内容',\n            'lang_Txt_cut': '剪切选中内容',\n            'lang_Txt_Paste': '粘贴',\n            'lang_Txt_undo': '重新执行上次操作',\n            'lang_Txt_redo': '撤销上一次操作',\n            'lang_Txt_italic': '给选中字设置为斜体',\n            'lang_Txt_underline': '给选中字加下划线',\n            'lang_Txt_selectAll': '全部选中',\n            'lang_Txt_visualEnter': '软回车',\n            'lang_Txt_fullscreen': '全屏'\n        }\n    },\n    'insertframe': {\n        'static': {\n            'lang_input_address': '地址：',\n            'lang_input_width': '宽度：',\n            'lang_input_height': '高度：',\n            'lang_input_isScroll': '允许滚动条：',\n            'lang_input_frameborder': '显示框架边框：',\n            'lang_input_alignMode': '对齐方式：',\n            'align': { title: \"对齐方式\", options: [\"默认\", \"左对齐\", \"右对齐\", \"居中\"] }\n        },\n        'enterAddress': '请输入地址!'\n    },\n    'link': {\n        'static': {\n            'lang_input_text': '文本内容：',\n            'lang_input_url': '链接地址：',\n            'lang_input_title': '标题：',\n            'lang_input_target': '是否在新窗口打开：'\n        },\n        'validLink': '只支持选中一个链接时生效',\n        'httpPrompt': '您输入的超链接中不包含http等协议名称，默认将为您添加http://前缀'\n    },\n    'map': {\n        'static': {\n            lang_city: \"城市\",\n            lang_address: \"地址\",\n            city: { value: \"北京\" },\n            lang_search: \"搜索\",\n            lang_dynamicmap: \"插入动态地图\"\n        },\n        cityMsg: \"请选择城市\",\n        errorMsg: \"抱歉，找不到该位置！\"\n    },\n    'searchreplace': {\n        'static': {\n            lang_tab_search: \"查找\",\n            lang_tab_replace: \"替换\",\n            lang_search1: \"查找\",\n            lang_search2: \"查找\",\n            lang_replace: \"替换\",\n            lang_searchReg: '支持正则表达式，添加前后斜杠标示为正则表达式，例如“/表达式/”',\n            lang_searchReg1: '支持正则表达式，添加前后斜杠标示为正则表达式，例如“/表达式/”',\n            lang_case_sensitive1: \"区分大小写\",\n            lang_case_sensitive2: \"区分大小写\",\n            nextFindBtn: { value: \"下一个\" },\n            preFindBtn: { value: \"上一个\" },\n            nextReplaceBtn: { value: \"下一个\" },\n            preReplaceBtn: { value: \"上一个\" },\n            repalceBtn: { value: \"替换\" },\n            repalceAllBtn: { value: \"全部替换\" }\n        },\n        getEnd: \"已经搜索到文章末尾！\",\n        getStart: \"已经搜索到文章头部\",\n        countMsg: \"总共替换了{#count}处！\"\n    },\n    'snapscreen': {\n        'static': {\n            lang_showMsg: \"截图功能需要首先安装UEditor截图插件！ \",\n            lang_download: \"点此下载\",\n            lang_step1: \"第一步，下载UEditor截图插件并运行安装。\",\n            lang_step2: \"第二步，插件安装完成后即可使用，如不生效，请重启浏览器后再试！\"\n        }\n    },\n    'spechars': {\n        'static': {},\n        tsfh: \"特殊字符\",\n        lmsz: \"罗马字符\",\n        szfh: \"数学字符\",\n        rwfh: \"日文字符\",\n        xlzm: \"希腊字母\",\n        ewzm: \"俄文字符\",\n        pyzm: \"拼音字母\",\n        yyyb: \"英语音标\",\n        zyzf: \"其他\"\n    },\n    'edittable': {\n        'static': {\n            'lang_tableStyle': '表格样式',\n            'lang_insertCaption': '添加表格名称行',\n            'lang_insertTitle': '添加表格标题行',\n            'lang_insertTitleCol': '添加表格标题列',\n            'lang_orderbycontent': \"使表格内容可排序\",\n            'lang_tableSize': '自动调整表格尺寸',\n            'lang_autoSizeContent': '按表格文字自适应',\n            'lang_autoSizePage': '按页面宽度自适应',\n            'lang_example': '示例',\n            'lang_borderStyle': '表格边框',\n            'lang_color': '颜色:'\n        },\n        captionName: '表格名称',\n        titleName: '标题',\n        cellsName: '内容',\n        errorMsg: '有合并单元格，不可排序'\n    },\n    'edittip': {\n        'static': {\n            lang_delRow: '删除整行',\n            lang_delCol: '删除整列'\n        }\n    },\n    'edittd': {\n        'static': {\n            lang_tdBkColor: '背景颜色:'\n        }\n    },\n    'formula': {\n        'static': {}\n    },\n    'wordimage': {\n        'static': {\n            lang_resave: \"转存步骤\",\n            uploadBtn: { src: \"upload.png\", alt: \"上传\" },\n            clipboard: { style: \"background: url(copy.png) -153px -1px no-repeat;\" },\n            lang_step: \"1、点击顶部复制按钮，将地址复制到剪贴板；2、点击添加照片按钮，在弹出的对话框中使用Ctrl+V粘贴地址；3、点击打开后选择图片上传流程。\"\n        },\n        'fileType': \"图片\",\n        'flashError': \"FLASH初始化失败，请检查FLASH插件是否正确安装！\",\n        'netError': \"网络连接错误，请重试！\",\n        'copySuccess': \"图片地址已经复制！\",\n        'flashI18n': {} //留空默认中文\n    },\n    'autosave': {\n        'saving': '保存中...',\n        'success': '本地保存成功'\n    }\n};\n\nexports.default = i18N;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * ueditor完整配置项\n * 可以在这里配置整个编辑器的特性\n */\n/**************************提示********************************\n * 所有被注释的配置项均为UEditor默认值。\n * 修改默认配置请首先确保已经完全明确该参数的真实用途。\n * 主要有两种修改方案，一种是取消此处注释，然后修改成对应参数；另一种是在实例化编辑器时传入对应参数。\n * 当升级编辑器时，可直接使用旧版配置文件替换新版配置文件,不用担心旧版配置文件中因缺少新功能所需的参数而导致脚本报错。\n **************************提示********************************/\n\n// (function() {\n/**\n   * 编辑器资源文件根路径。它所表示的含义是：以编辑器实例化页面为当前路径，指向编辑器资源文件（即dialog等文件夹）的路径。\n   * 鉴于很多同学在使用编辑器的时候出现的种种路径问题，此处强烈建议大家使用\"相对于网站根目录的相对路径\"进行配置。\n   * \"相对于网站根目录的相对路径\"也就是以斜杠开头的形如\"/myProject/ueditor/\"这样的路径。\n   * 如果站点中有多个不在同一层级的页面需要实例化编辑器，且引用了同一UEditor的时候，此处的URL可能不适用于每个页面的编辑器。\n   * 因此，UEditor提供了针对不同页面的编辑器可单独配置的根路径，具体来说，在需要实例化编辑器的页面最顶部写上如下代码即可。当然，需要令此处的URL等于对应的配置。\n   * window.UEDITOR_HOME_URL = \"/xxxx/xxxx/\";\n   */\nvar URL = window.UEDITOR_HOME_URL || getUEBasePath();\n\n/**\n   * 配置项主体。注意，此处所有涉及到路径的配置别遗漏URL变量。\n   */\nwindow.UEDITOR_CONFIG = {\n  //为编辑器实例添加一个路径，这个不能被注释\n  UEDITOR_HOME_URL: URL,\n\n  // 服务器统一请求接口路径\n  serverUrl: URL + \"php/controller.php\",\n\n  //工具栏上的所有的功能按钮和下拉框，可以在new编辑器的实例时选择自己需要的重新定义\n  toolbars: [[\"fullscreen\", \"source\", \"|\", \"undo\", \"redo\", \"|\", \"bold\", \"italic\", \"underline\", \"fontborder\", \"strikethrough\", \"superscript\", \"subscript\", \"removeformat\", \"formatmatch\", \"autotypeset\", \"blockquote\", \"pasteplain\", \"|\", \"forecolor\", \"backcolor\", \"insertorderedlist\", \"insertunorderedlist\", \"selectall\", \"cleardoc\", \"|\", \"rowspacingtop\", \"rowspacingbottom\", \"lineheight\", \"|\", \"customstyle\", \"paragraph\", \"fontfamily\", \"fontsize\", \"|\", \"directionalityltr\", \"directionalityrtl\", \"indent\", \"|\", \"justifyleft\", \"justifycenter\", \"justifyright\", \"justifyjustify\", \"|\", \"touppercase\", \"tolowercase\", \"|\", \"link\", \"unlink\", \"anchor\", \"|\", \"imagenone\", \"imageleft\", \"imageright\", \"imagecenter\", \"|\", \"simpleupload\", \"insertimage\", \"emotion\", \"scrawl\", \"insertvideo\", \"music\", \"attachment\", \"map\", \"gmap\", \"insertframe\", \"insertcode\", \"webapp\", \"pagebreak\", \"template\", \"background\", \"|\", \"horizontal\", \"date\", \"time\", \"spechars\", \"snapscreen\", \"wordimage\", \"|\", \"inserttable\", \"deletetable\", \"insertparagraphbeforetable\", \"insertrow\", \"deleterow\", \"insertcol\", \"deletecol\", \"mergecells\", \"mergeright\", \"mergedown\", \"splittocells\", \"splittorows\", \"splittocols\", \"charts\", \"|\", \"print\", \"preview\", \"searchreplace\", \"drafts\", \"help\"]]\n  //当鼠标放在工具栏上时显示的tooltip提示,留空支持自动多语言配置，否则以配置值为准\n  //,labelMap:{\n  //    'anchor':'', 'undo':''\n  //}\n\n  //语言配置项,默认是zh-cn。有需要的话也可以使用如下这样的方式来自动多语言切换，当然，前提条件是lang文件夹下存在对应的语言文件：\n  //lang值也可以通过自动获取 (navigator.language||navigator.browserLanguage ||navigator.userLanguage).toLowerCase()\n  //,lang:\"zh-cn\"\n  //,langPath:URL +\"lang/\"\n\n  //主题配置项,默认是default。有需要的话也可以使用如下这样的方式来自动多主题切换，当然，前提条件是themes文件夹下存在对应的主题文件：\n  //现有如下皮肤:default\n  //,theme:'default'\n  //,themePath:URL +\"themes/\"\n\n  //,zIndex : 900     //编辑器层级的基数,默认是900\n\n  //针对getAllHtml方法，会在对应的head标签中增加该编码设置。\n  //,charset:\"utf-8\"\n\n  //若实例化编辑器的页面手动修改的domain，此处需要设置为true\n  //,customDomain:false\n\n  //常用配置项目\n  //,isShow : true    //默认显示编辑器\n\n  //,textarea:'editorValue' // 提交表单时，服务器获取编辑器提交内容的所用的参数，多实例时可以给容器name属性，会将name给定的值最为每个实例的键值，不用每次实例化的时候都设置这个值\n\n  //,initialContent:'欢迎使用ueditor!'    //初始化编辑器的内容,也可以通过textarea/script给值，看官网例子\n\n  //,autoClearinitialContent:true //是否自动清除编辑器初始内容，注意：如果focus属性设置为true,这个也为真，那么编辑器一上来就会触发导致初始化的内容看不到了\n\n  //,focus:false //初始化时，是否让编辑器获得焦点true或false\n\n  //如果自定义，最好给p标签如下的行高，要不输入中文时，会有跳动感\n  //,initialStyle:'p{line-height:1em}'//编辑器层级的基数,可以用来改变字体等\n\n  //,iframeJsUrl: '' //给编辑区域的iframe引入一个js文件\n  //,iframeCssUrl: URL + '/themes/iframe.css' //给编辑区域的iframe引入一个css文件\n\n  //indentValue\n  //首行缩进距离,默认是2em\n  //,indentValue:'2em'\n\n  //,initialFrameWidth:1000  //初始化编辑器宽度,默认1000\n  //,initialFrameHeight:320  //初始化编辑器高度,默认320\n\n  //,readonly : false //编辑器初始化结束后,编辑区域是否是只读的，默认是false\n\n  //,autoClearEmptyNode : true //getContent时，是否删除空的inlineElement节点（包括嵌套的情况）\n\n  //启用自动保存\n  //,enableAutoSave: true\n  //自动保存间隔时间， 单位ms\n  //,saveInterval: 500\n\n  //启用拖放上传\n  //,enableDragUpload: true\n  //启用粘贴上传\n  //,enablePasteUpload: true\n\n  //启用图片拉伸缩放\n  //,imageScaleEnabled: true\n\n  //,fullscreen : false //是否开启初始化时即全屏，默认关闭\n\n  //,imagePopup:true      //图片操作的浮层开关，默认打开\n\n  //,autoSyncData:true //自动同步编辑器要提交的数据\n  //,emotionLocalization:false //是否开启表情本地化，默认关闭。若要开启请确保emotion文件夹下包含官网提供的images表情文件夹\n\n  //粘贴只保留标签，去除标签所有属性\n  //,retainOnlyLabelPasted: false\n\n  //,pasteplain:false  //是否默认为纯文本粘贴。false为不使用纯文本粘贴，true为使用纯文本粘贴\n  //纯文本粘贴模式下的过滤规则\n  //'filterTxtRules' : function(){\n  //    function transP(node){\n  //        node.tagName = 'p';\n  //        node.setStyle();\n  //    }\n  //    return {\n  //        //直接删除及其字节点内容\n  //        '-' : 'script style object iframe embed input select',\n  //        'p': {$:{}},\n  //        'br':{$:{}},\n  //        'div':{'$':{}},\n  //        'li':{'$':{}},\n  //        'caption':transP,\n  //        'th':transP,\n  //        'tr':transP,\n  //        'h1':transP,'h2':transP,'h3':transP,'h4':transP,'h5':transP,'h6':transP,\n  //        'td':function(node){\n  //            //没有内容的td直接删掉\n  //            var txt = !!node.innerText();\n  //            if(txt){\n  //                node.parentNode.insertAfter(UE.uNode.createText(' &nbsp; &nbsp;'),node);\n  //            }\n  //            node.parentNode.removeChild(node,node.innerText())\n  //        }\n  //    }\n  //}()\n\n  //,allHtmlEnabled:false //提交到后台的数据是否包含整个html字符串\n\n  //insertorderedlist\n  //有序列表的下拉配置,值留空时支持多语言自动识别，若配置值，则以此值为准\n  //,'insertorderedlist':{\n  //      //自定的样式\n  //        'num':'1,2,3...',\n  //        'num1':'1),2),3)...',\n  //        'num2':'(1),(2),(3)...',\n  //        'cn':'一,二,三....',\n  //        'cn1':'一),二),三)....',\n  //        'cn2':'(一),(二),(三)....',\n  //     //系统自带\n  //     'decimal' : '' ,         //'1,2,3...'\n  //     'lower-alpha' : '' ,    // 'a,b,c...'\n  //     'lower-roman' : '' ,    //'i,ii,iii...'\n  //     'upper-alpha' : '' , lang   //'A,B,C'\n  //     'upper-roman' : ''      //'I,II,III...'\n  //}\n\n  //insertunorderedlist\n  //无序列表的下拉配置，值留空时支持多语言自动识别，若配置值，则以此值为准\n  //,insertunorderedlist : { //自定的样式\n  //    'dash' :'— 破折号', //-破折号\n  //    'dot':' 。 小圆圈', //系统自带\n  //    'circle' : '',  // '○ 小圆圈'\n  //    'disc' : '',    // '● 小圆点'\n  //    'square' : ''   //'■ 小方块'\n  //}\n  //,listDefaultPaddingLeft : '30'//默认的左边缩进的基数倍\n  //,listiconpath : 'http://bs.baidu.com/listicon/'//自定义标号的路径\n  //,maxListLevel : 3 //限制可以tab的级数, 设置-1为不限制\n\n  //,autoTransWordToList:false  //禁止word中粘贴进来的列表自动变成列表标签\n\n  //fontfamily\n  //字体设置 label留空支持多语言自动切换，若配置，则以配置值为准\n  //,'fontfamily':[\n  //    { label:'',name:'songti',val:'宋体,SimSun'},\n  //    { label:'',name:'kaiti',val:'楷体,楷体_GB2312, SimKai'},\n  //    { label:'',name:'yahei',val:'微软雅黑,Microsoft YaHei'},\n  //    { label:'',name:'heiti',val:'黑体, SimHei'},\n  //    { label:'',name:'lishu',val:'隶书, SimLi'},\n  //    { label:'',name:'andaleMono',val:'andale mono'},\n  //    { label:'',name:'arial',val:'arial, helvetica,sans-serif'},\n  //    { label:'',name:'arialBlack',val:'arial black,avant garde'},\n  //    { label:'',name:'comicSansMs',val:'comic sans ms'},\n  //    { label:'',name:'impact',val:'impact,chicago'},\n  //    { label:'',name:'timesNewRoman',val:'times new roman'}\n  //]\n\n  //fontsize\n  //字号\n  //,'fontsize':[10, 11, 12, 14, 16, 18, 20, 24, 36]\n\n  //paragraph\n  //段落格式 值留空时支持多语言自动识别，若配置，则以配置值为准\n  //,'paragraph':{'p':'', 'h1':'', 'h2':'', 'h3':'', 'h4':'', 'h5':'', 'h6':''}\n\n  //rowspacingtop\n  //段间距 值和显示的名字相同\n  //,'rowspacingtop':['5', '10', '15', '20', '25']\n\n  //rowspacingBottom\n  //段间距 值和显示的名字相同\n  //,'rowspacingbottom':['5', '10', '15', '20', '25']\n\n  //lineheight\n  //行内间距 值和显示的名字相同\n  //,'lineheight':['1', '1.5','1.75','2', '3', '4', '5']\n\n  //customstyle\n  //自定义样式，不支持国际化，此处配置值即可最后显示值\n  //block的元素是依据设置段落的逻辑设置的，inline的元素依据BIU的逻辑设置\n  //尽量使用一些常用的标签\n  //参数说明\n  //tag 使用的标签名字\n  //label 显示的名字也是用来标识不同类型的标识符，注意这个值每个要不同，\n  //style 添加的样式\n  //每一个对象就是一个自定义的样式\n  //,'customstyle':[\n  //    {tag:'h1', name:'tc', label:'', style:'border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:center;margin:0 0 20px 0;'},\n  //    {tag:'h1', name:'tl',label:'', style:'border-bottom:#ccc 2px solid;padding:0 4px 0 0;margin:0 0 10px 0;'},\n  //    {tag:'span',name:'im', label:'', style:'font-style:italic;font-weight:bold'},\n  //    {tag:'span',name:'hi', label:'', style:'font-style:italic;font-weight:bold;color:rgb(51, 153, 204)'}\n  //]\n\n  //打开右键菜单功能\n  //,enableContextMenu: true\n  //右键菜单的内容，可以参考plugins/contextmenu.js里边的默认菜单的例子，label留空支持国际化，否则以此配置为准\n  //,contextMenu:[\n  //    {\n  //        label:'',       //显示的名称\n  //        cmdName:'selectall',//执行的command命令，当点击这个右键菜单时\n  //        //exec可选，有了exec就会在点击时执行这个function，优先级高于cmdName\n  //        exec:function () {\n  //            //this是当前编辑器的实例\n  //            //this.ui._dialogs['inserttableDialog'].open();\n  //        }\n  //    }\n  //]\n\n  //快捷菜单\n  //,shortcutMenu:[\"fontfamily\", \"fontsize\", \"bold\", \"italic\", \"underline\", \"forecolor\", \"backcolor\", \"insertorderedlist\", \"insertunorderedlist\"]\n\n  //elementPathEnabled\n  //是否启用元素路径，默认是显示\n  //,elementPathEnabled : true\n\n  //wordCount\n  //,wordCount:true          //是否开启字数统计\n  //,maximumWords:10000       //允许的最大字符数\n  //字数统计提示，{#count}代表当前字数，{#leave}代表还可以输入多少字符数,留空支持多语言自动切换，否则按此配置显示\n  //,wordCountMsg:''   //当前已输入 {#count} 个字符，您还可以输入{#leave} 个字符\n  //超出字数限制提示  留空支持多语言自动切换，否则按此配置显示\n  //,wordOverFlowMsg:''    //<span style=\"color:red;\">你输入的字符个数已经超出最大允许值，服务器可能会拒绝保存！</span>\n\n  //tab\n  //点击tab键时移动的距离,tabSize倍数，tabNode什么字符做为单位\n  //,tabSize:4\n  //,tabNode:'&nbsp;'\n\n  //removeFormat\n  //清除格式时可以删除的标签和属性\n  //removeForamtTags标签\n  //,removeFormatTags:'b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var'\n  //removeFormatAttributes属性\n  //,removeFormatAttributes:'class,style,lang,width,height,align,hspace,valign'\n\n  //undo\n  //可以最多回退的次数,默认20\n  //,maxUndoCount:20\n  //当输入的字符数超过该值时，保存一次现场\n  //,maxInputCount:1\n\n  //autoHeightEnabled\n  // 是否自动长高,默认true\n  //,autoHeightEnabled:true\n\n  //scaleEnabled\n  //是否可以拉伸长高,默认true(当开启时，自动长高失效)\n  //,scaleEnabled:false\n  //,minFrameWidth:800    //编辑器拖动时最小宽度,默认800\n  //,minFrameHeight:220  //编辑器拖动时最小高度,默认220\n\n  //autoFloatEnabled\n  //是否保持toolbar的位置不动,默认true\n  //,autoFloatEnabled:true\n  //浮动时工具栏距离浏览器顶部的高度，用于某些具有固定头部的页面\n  //,topOffset:30\n  //编辑器底部距离工具栏高度(如果参数大于等于编辑器高度，则设置无效)\n  //,toolbarTopOffset:400\n\n  //设置远程图片是否抓取到本地保存\n  //,catchRemoteImageEnable: true //设置是否抓取远程图片\n\n  //pageBreakTag\n  //分页标识符,默认是_ueditor_page_break_tag_\n  //,pageBreakTag:'_ueditor_page_break_tag_'\n\n  //autotypeset\n  //自动排版参数\n  //,autotypeset: {\n  //    mergeEmptyline: true,           //合并空行\n  //    removeClass: true,              //去掉冗余的class\n  //    removeEmptyline: false,         //去掉空行\n  //    textAlign:\"left\",               //段落的排版方式，可以是 left,right,center,justify 去掉这个属性表示不执行排版\n  //    imageBlockLine: 'center',       //图片的浮动方式，独占一行剧中,左右浮动，默认: center,left,right,none 去掉这个属性表示不执行排版\n  //    pasteFilter: false,             //根据规则过滤没事粘贴进来的内容\n  //    clearFontSize: false,           //去掉所有的内嵌字号，使用编辑器默认的字号\n  //    clearFontFamily: false,         //去掉所有的内嵌字体，使用编辑器默认的字体\n  //    removeEmptyNode: false,         // 去掉空节点\n  //    //可以去掉的标签\n  //    removeTagNames: {标签名字:1},\n  //    indent: false,                  // 行首缩进\n  //    indentValue : '2em',            //行首缩进的大小\n  //    bdc2sb: false,\n  //    tobdc: false\n  //}\n\n  //tableDragable\n  //表格是否可以拖拽\n  //,tableDragable: true\n\n  //sourceEditor\n  //源码的查看方式,codemirror 是代码高亮，textarea是文本框,默认是codemirror\n  //注意默认codemirror只能在ie8+和非ie中使用\n  //,sourceEditor:\"codemirror\"\n  //如果sourceEditor是codemirror，还用配置一下两个参数\n  //codeMirrorJsUrl js加载的路径，默认是 URL + \"third-party/codemirror/codemirror.js\"\n  //,codeMirrorJsUrl:URL + \"third-party/codemirror/codemirror.js\"\n  //codeMirrorCssUrl css加载的路径，默认是 URL + \"third-party/codemirror/codemirror.css\"\n  //,codeMirrorCssUrl:URL + \"third-party/codemirror/codemirror.css\"\n  //编辑器初始化完成后是否进入源码模式，默认为否。\n  //,sourceEditorFirst:false\n\n  //iframeUrlMap\n  //dialog内容的路径 ～会被替换成URL,垓属性一旦打开，将覆盖所有的dialog的默认路径\n  //,iframeUrlMap:{\n  //    'anchor':'~/dialogs/anchor/anchor.html',\n  //}\n\n  //allowLinkProtocol 允许的链接地址，有这些前缀的链接地址不会自动添加http\n  //, allowLinkProtocols: ['http:', 'https:', '#', '/', 'ftp:', 'mailto:', 'tel:', 'git:', 'svn:']\n\n  //webAppKey 百度应用的APIkey，每个站长必须首先去百度官网注册一个key后方能正常使用app功能，注册介绍，http://app.baidu.com/static/cms/getapikey.html\n  //, webAppKey: \"\"\n\n  //默认过滤规则相关配置项目\n  //,disabledTableInTable:true  //禁止表格嵌套\n  //,allowDivTransToP:true      //允许进入编辑器的div标签自动变成p标签\n  //,rgb2Hex:true               //默认产出的数据中的color自动从rgb格式变成16进制格式\n};\n\nfunction getUEBasePath(docUrl, confUrl) {\n  return getBasePath(docUrl || self.document.URL || self.location.href, confUrl || getConfigFilePath());\n}\n\nfunction getConfigFilePath() {\n  var configPath = document.getElementsByTagName(\"script\");\n\n  return configPath[configPath.length - 1].src;\n}\n\nfunction getBasePath(docUrl, confUrl) {\n  var basePath = confUrl;\n\n  if (/^(\\/|\\\\\\\\)/.test(confUrl)) {\n    basePath = /^.+?\\w(\\/|\\\\\\\\)/.exec(docUrl)[0] + confUrl.replace(/^(\\/|\\\\\\\\)/, \"\");\n  } else if (!/^[a-z]+:/i.test(confUrl)) {\n    docUrl = docUrl.split(\"#\")[0].split(\"?\")[0].replace(/[^\\\\\\/]+$/, \"\");\n\n    basePath = docUrl + \"\" + confUrl;\n  }\n\n  return optimizationPath(basePath);\n}\n\nfunction optimizationPath(path) {\n  var protocol = /^[a-z]+:\\/\\//.exec(path)[0],\n      tmp = null,\n      res = [];\n\n  path = path.replace(protocol, \"\").split(\"?\")[0].split(\"#\")[0];\n\n  path = path.replace(/\\\\/g, \"/\").split(/\\//);\n\n  path[path.length - 1] = \"\";\n\n  while (path.length) {\n    if ((tmp = path.shift()) === \"..\") {\n      res.pop();\n    } else if (tmp !== \".\") {\n      res.push(tmp);\n    }\n  }\n\n  return protocol + res.join(\"/\");\n}\n\nwindow.UE = {\n  getUEBasePath: getUEBasePath\n};\n// })();\n\nexports.default = UEDITOR_CONFIG;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///18\n")},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(20);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(8)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2Nzcy91ZWRpdG9yLmNzcz82NDFmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxjQUFjLG1CQUFPLENBQUMsRUFBOEQ7O0FBRXBGLDRDQUE0QyxRQUFTOztBQUVyRDtBQUNBOzs7O0FBSUEsZUFBZTs7QUFFZjtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxDQUF5RDs7QUFFOUU7O0FBRUEsR0FBRyxLQUFVLEVBQUUiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi91ZWRpdG9yLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi91ZWRpdG9yLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vdWVkaXRvci5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///19\n")},function(module,exports,__webpack_require__){eval('var escape = __webpack_require__(21);\nexports = module.exports = __webpack_require__(6)(false);\n// imports\n\n\n// module\nexports.push([module.i, "/*基础UI构建\\r\\n*/\\r\\n/* common layer */\\r\\n.edui-default .edui-box {\\r\\n    border: none;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.edui-default a.edui-box {\\r\\n    display: block;\\r\\n    text-decoration: none;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.edui-default a.edui-box:hover {\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.edui-default a.edui-box:active {\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.edui-default table.edui-box {\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\n.edui-default ul.edui-box {\\r\\n    list-style-type: none;\\r\\n}\\r\\n\\r\\ndiv.edui-box {\\r\\n    position: relative;\\r\\n    display: -moz-inline-box !important;\\r\\n    display: inline-block !important;\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.edui-default .edui-clearfix {\\r\\n    zoom: 1\\r\\n}\\r\\n\\r\\n.edui-default .edui-clearfix:after {\\r\\n    content: \' \';\\r\\n    display: block;\\r\\n    clear: both;\\r\\n}\\r\\n\\r\\n * html div.edui-box {\\r\\n    display: inline !important;\\r\\n}\\r\\n\\r\\n*:first-child+html div.edui-box {\\r\\n    display: inline !important;\\r\\n}\\r\\n\\r\\n/* control layout */\\r\\n.edui-default .edui-button-body, .edui-splitbutton-body, .edui-menubutton-body, .edui-combox-body {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.edui-default .edui-popup {\\r\\n    position: absolute;\\r\\n    -webkit-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n}\\r\\n\\r\\n.edui-default .edui-popup .edui-shadow {\\r\\n    position: absolute;\\r\\n    z-index: -1;\\r\\n}\\r\\n\\r\\n.edui-default .edui-popup .edui-bordereraser {\\r\\n    position: absolute;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.edui-default .edui-tablepicker .edui-canvas {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.edui-default .edui-tablepicker .edui-canvas .edui-overlay {\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-modalmask, .edui-dialog-dragmask {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n/*\\r\\n * default theme\\r\\n */\\r\\n.edui-default .edui-label {\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n.edui-default span.edui-clickable {\\r\\n    color: blue;\\r\\n    cursor: pointer;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.edui-default span.edui-unclickable {\\r\\n    color: gray;\\r\\n    cursor: default;\\r\\n}\\n/* 工具栏 */\\r\\n.edui-default .edui-toolbar {\\r\\n    cursor: default;\\r\\n    -webkit-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    padding: 1px;\\r\\n    overflow: hidden; /*全屏下单独一行不占位*/\\r\\n    zoom: 1;\\r\\n    width:auto;\\r\\n    height:auto;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-button,\\r\\n.edui-default .edui-toolbar .edui-splitbutton,\\r\\n.edui-default .edui-toolbar .edui-menubutton,\\r\\n.edui-default .edui-toolbar .edui-combox {\\r\\n    margin: 1px;\\r\\n}\\n/*UI工具栏、编辑区域、底部*/\\r\\n.edui-default .edui-editor {\\r\\n    border: 1px solid #d4d4d4;\\r\\n    background-color: white;\\r\\n    position: relative;\\r\\n    overflow: visible;\\r\\n    -webkit-border-radius: 4px;\\r\\n    -moz-border-radius: 4px;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n.edui-editor div{\\r\\n    width:auto;\\r\\n    height:auto;\\r\\n}\\r\\n.edui-default .edui-editor-toolbarbox {\\r\\n    position: relative;\\r\\n    zoom: 1;\\r\\n    -webkit-box-shadow:0 1px 4px rgba(204, 204, 204, 0.6);\\r\\n    -moz-box-shadow:0 1px 4px rgba(204, 204, 204, 0.6);\\r\\n    box-shadow:0 1px 4px rgba(204, 204, 204, 0.6);\\r\\n    border-top-left-radius:2px;\\r\\n    border-top-right-radius:2px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-toolbarboxouter {\\r\\n    border-bottom: 1px solid #d4d4d4;\\r\\n    background-color: #fafafa;\\r\\n    background-image: -moz-linear-gradient(top, #ffffff, #f2f2f2);\\r\\n    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#ffffff), to(#f2f2f2));\\r\\n    background-image: -webkit-linear-gradient(top, #ffffff, #f2f2f2);\\r\\n    background-image: -o-linear-gradient(top, #ffffff, #f2f2f2);\\r\\n    background-image: linear-gradient(to bottom, #ffffff, #f2f2f2);\\r\\n    background-repeat: repeat-x;\\r\\n    /*border: 1px solid #d4d4d4;*/\\r\\n    -webkit-border-radius: 4px 4px 0 0;\\r\\n    -moz-border-radius: 4px 4px 0 0;\\r\\n    border-radius: 4px 4px 0 0;\\r\\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#ffffffff\', endColorstr=\'#fff2f2f2\', GradientType=0);\\r\\n    *zoom: 1;\\r\\n    -webkit-box-shadow: 0 1px 4px rgba(0, 0, 0, 0.065);\\r\\n    -moz-box-shadow: 0 1px 4px rgba(0, 0, 0, 0.065);\\r\\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.065);\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-toolbarboxinner {\\r\\n    padding: 2px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-iframeholder {\\r\\n    position: relative;\\r\\n    /*for fix ie6 toolbarmsg under iframe bug. relative -> static */\\r\\n    /*_position: static !important;*\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-iframeholder textarea {\\r\\n    font-family: consolas, \\"Courier New\\", \\"lucida console\\", monospace;\\r\\n    font-size: 12px;\\r\\n    line-height: 18px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-bottombar {\\r\\n    /*border-top: 1px solid #ccc;*/\\r\\n    /*height: 20px;*/\\r\\n    /*width: 40%;*/\\r\\n    /*float: left;*/\\r\\n    /*overflow: hidden;*/\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-bottomContainer {\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-bottomContainer table {\\r\\n    width: 100%;\\r\\n    height: 0;\\r\\n    overflow: hidden;\\r\\n    border-spacing: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-bottomContainer td {\\r\\n    white-space: nowrap;\\r\\n    border-top: 1px solid #ccc;\\r\\n    line-height: 20px;\\r\\n    font-size: 12px;\\r\\n    font-family: Arial, Helvetica, Tahoma, Verdana, Sans-Serif;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-wordcount {\\r\\n    text-align: right;\\r\\n    margin-right: 5px;\\r\\n    color: #aaa;\\r\\n}\\r\\n.edui-default .edui-editor-scale {\\r\\n    width: 12px;\\r\\n}\\r\\n.edui-default .edui-editor-scale .edui-editor-icon {\\r\\n    float: right;\\r\\n    width: 100%;\\r\\n    height: 12px;\\r\\n    margin-top: 10px;\\r\\n    background: url(" + escape(__webpack_require__(22)) + ") no-repeat;\\r\\n    cursor: se-resize;\\r\\n}\\r\\n.edui-default .edui-editor-breadcrumb {\\r\\n    margin: 2px 0 0 3px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-breadcrumb span {\\r\\n    cursor: pointer;\\r\\n    text-decoration: underline;\\r\\n    color: blue;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-for-fullscreen {\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.edui-default .edui-bubble .edui-popup-content {\\r\\n    border: 1px solid #DCAC6C;\\r\\n    background-color: #fff6d9;\\r\\n    padding: 5px;\\r\\n    font-size: 10pt;\\r\\n    font-family: \\"\\\\5B8B\\\\4F53\\";\\r\\n}\\r\\n\\r\\n.edui-default .edui-bubble .edui-shadow {\\r\\n    /*box-shadow: 1px 1px 3px #818181;*/\\r\\n    /*-webkit-box-shadow: 2px 2px 3px #818181;*/\\r\\n    /*-moz-box-shadow: 2px 2px 3px #818181;*/\\r\\n    /*filter: progid:DXImageTransform.Microsoft.Blur(PixelRadius = \'2\', MakeShadow = \'true\', ShadowOpacity = \'0.5\');*/\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-toolbarmsg {\\r\\n    background-color: #FFF6D9;\\r\\n    border-bottom: 1px solid #ccc;\\r\\n    position: absolute;\\r\\n    bottom: -25px;\\r\\n    left: 0;\\r\\n    z-index: 1009;\\r\\n    width: 99.9%;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-toolbarmsg-upload {\\r\\n    font-size: 14px;\\r\\n    color: blue;\\r\\n    width: 100px;\\r\\n    height: 16px;\\r\\n    line-height: 16px;\\r\\n    cursor: pointer;\\r\\n    position: absolute;\\r\\n    top: 5px;\\r\\n    left: 350px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-toolbarmsg-label {\\r\\n    font-size: 12px;\\r\\n    line-height: 16px;\\r\\n    padding: 4px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-editor-toolbarmsg-close {\\r\\n    float: right;\\r\\n    width: 20px;\\r\\n    height: 16px;\\r\\n    line-height: 16px;\\r\\n    cursor: pointer;\\r\\n    color: red;\\r\\n}\\n/*可选中菜单按钮*/\\r\\n.edui-default .edui-list .edui-bordereraser {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.edui-default .edui-listitem {\\r\\n    padding: 1px;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.edui-default .edui-list .edui-state-hover {\\r\\n    position: relative;\\r\\n    background-color: #fff5d4;\\r\\n    border: 1px solid #dcac6c;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-fontfamily .edui-listitem-label {\\r\\n    min-width: 130px;\\r\\n    _width: 120px;\\r\\n    font-size: 12px;\\r\\n    height: 22px;\\r\\n    line-height: 22px;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n.edui-default .edui-for-insertcode .edui-listitem-label {\\r\\n    min-width: 120px;\\r\\n    _width: 120px;\\r\\n    font-size: 12px;\\r\\n    height: 22px;\\r\\n    line-height: 22px;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n.edui-default .edui-for-underline .edui-listitem-label {\\r\\n    min-width: 120px;\\r\\n    _width: 120px;\\r\\n    padding: 3px 5px;\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-fontsize .edui-listitem-label {\\r\\n    min-width: 120px;\\r\\n    _width: 120px;\\r\\n    padding: 3px 5px;\\r\\n\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-paragraph .edui-listitem-label {\\r\\n    min-width: 200px;\\r\\n    _width: 200px;\\r\\n    padding: 2px 5px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-rowspacingtop .edui-listitem-label,\\r\\n.edui-default .edui-for-rowspacingbottom .edui-listitem-label {\\r\\n    min-width: 53px;\\r\\n    _width: 53px;\\r\\n    padding: 2px 5px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-lineheight .edui-listitem-label {\\r\\n    min-width: 53px;\\r\\n    _width: 53px;\\r\\n    padding: 2px 5px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-customstyle .edui-listitem-label {\\r\\n    min-width: 200px;\\r\\n    _width: 200px;\\r\\n    width: 200px !important;\\r\\n    padding: 2px 5px;\\r\\n}\\n/* 可选中按钮弹出菜单*/\\r\\n.edui-default .edui-menu {\\r\\n    z-index: 3000;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menu .edui-popup-content {\\r\\n    padding: 3px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menu-body {\\r\\n    _width: 150px;\\r\\n    min-width: 170px;\\r\\n    background: url(" + escape(__webpack_require__(23)) + ") repeat-y 25px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menuitem-body {\\r\\n}\\r\\n\\r\\n.edui-default .edui-menuitem {\\r\\n    height: 20px;\\r\\n    cursor: default;\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menuitem .edui-icon {\\r\\n    width: 20px !important;\\r\\n    height: 20px !important;\\r\\n    background: url(" + escape(__webpack_require__(1)) + ") 0 -4000px;\\r\\n    background: url(" + escape(__webpack_require__(2)) + ") 0 -4000px\\\\9;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menuitem .edui-label {\\r\\n    font-size: 12px;\\r\\n    line-height: 20px;\\r\\n    height: 20px;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-state-checked .edui-menuitem-body {\\r\\n    background: url(" + escape(__webpack_require__(0)) + ") no-repeat 6px -205px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-state-disabled .edui-menuitem-label {\\r\\n    color: gray;\\r\\n}\\r\\n\\r\\n\\n/*不可选中菜单按钮 */\\r\\n.edui-default .edui-toolbar .edui-combox-body .edui-button-body {\\r\\n    width: 60px;\\r\\n    font-size: 12px;\\r\\n    height: 20px;\\r\\n    line-height: 20px;\\r\\n    padding-left: 5px;\\r\\n    white-space: nowrap;\\r\\n    margin: 0 3px 0 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-combox-body .edui-arrow {\\r\\n    background: url(" + escape(__webpack_require__(1)) + ") -741px 0;\\r\\n    _background: url(" + escape(__webpack_require__(2)) + ") -741px 0;\\r\\n    height: 20px;\\r\\n    width: 9px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-combox .edui-combox-body {\\r\\n    border: 1px solid #CCC;\\r\\n    background-color: white;\\r\\n    border-radius: 2px;\\r\\n    -webkit-border-radius: 2px;\\r\\n    -moz-border-radius: 2px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-combox-body .edui-splitborder {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-combox-body .edui-arrow {\\r\\n    border-left: 1px solid #CCC;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-state-hover .edui-combox-body {\\r\\n    background-color: #fff5d4;\\r\\n    border: 1px solid #dcac6c;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-state-hover .edui-combox-body .edui-arrow {\\r\\n    border-left: 1px solid #dcac6c;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-state-checked .edui-combox-body {\\r\\n    background-color: #FFE69F;\\r\\n    border: 1px solid #DCAC6C;\\r\\n}\\r\\n\\r\\n.edui-toolbar .edui-state-checked .edui-combox-body .edui-arrow {\\r\\n    border-left: 1px solid #DCAC6C;\\r\\n}\\r\\n\\r\\n.edui-toolbar .edui-state-disabled .edui-combox-body {\\r\\n    background-color: #F0F0EE;\\r\\n    opacity: 0.3;\\r\\n    filter: alpha(opacity = 30);\\r\\n}\\r\\n\\r\\n.edui-toolbar .edui-state-opened .edui-combox-body {\\r\\n    background-color: white;\\r\\n    border: 1px solid gray;\\r\\n}\\n/*普通按钮样式及状态*/\\r\\n.edui-default .edui-toolbar .edui-button .edui-icon,\\r\\n.edui-default .edui-toolbar .edui-menubutton .edui-icon,\\r\\n.edui-default .edui-toolbar .edui-splitbutton .edui-icon {\\r\\n    height: 20px !important;\\r\\n    width: 20px !important;\\r\\n    background-image: url(" + escape(__webpack_require__(1)) + ");\\r\\n    background-image: url(" + escape(__webpack_require__(2)) + ") \\\\9;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-button .edui-button-wrap {\\r\\n    padding: 1px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-button .edui-state-hover .edui-button-wrap {\\r\\n    background-color: #fff5d4;\\r\\n    padding: 0;\\r\\n    border: 1px solid #dcac6c;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-button .edui-state-checked .edui-button-wrap {\\r\\n    background-color: #ffe69f;\\r\\n    padding: 0;\\r\\n    border: 1px solid #dcac6c;\\r\\n    border-radius: 2px;\\r\\n    -webkit-border-radius: 2px;\\r\\n    -moz-border-radius: 2px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-button .edui-state-active .edui-button-wrap {\\r\\n    background-color: #ffffff;\\r\\n    padding: 0;\\r\\n    border: 1px solid gray;\\r\\n}\\r\\n.edui-default .edui-toolbar .edui-state-disabled .edui-label {\\r\\n    color: #ccc;\\r\\n}\\r\\n.edui-default .edui-toolbar .edui-state-disabled .edui-icon {\\r\\n    opacity: 0.3;\\r\\n    filter: alpha(opacity = 30);\\r\\n}\\r\\n\\n/* toolbar icons */\\r\\n.edui-default .edui-for-undo .edui-icon {\\r\\n    background-position: -160px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-redo .edui-icon {\\r\\n    background-position: -100px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-bold .edui-icon {\\r\\n    background-position: 0 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-italic .edui-icon {\\r\\n    background-position: -60px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-fontborder .edui-icon {\\r\\n    background-position:-160px -40px;\\r\\n}\\r\\n.edui-default  .edui-for-underline .edui-icon {\\r\\n    background-position: -140px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-strikethrough .edui-icon {\\r\\n    background-position: -120px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-subscript .edui-icon {\\r\\n    background-position: -600px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-superscript .edui-icon {\\r\\n    background-position: -620px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-blockquote .edui-icon {\\r\\n    background-position: -220px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-forecolor .edui-icon {\\r\\n    background-position: -720px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-backcolor .edui-icon {\\r\\n    background-position: -760px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-inserttable .edui-icon {\\r\\n    background-position: -580px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-autotypeset .edui-icon {\\r\\n    background-position: -640px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-justifyleft .edui-icon {\\r\\n    background-position: -460px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-justifycenter .edui-icon {\\r\\n    background-position: -420px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-justifyright .edui-icon {\\r\\n    background-position: -480px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-justifyjustify .edui-icon {\\r\\n    background-position: -440px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertorderedlist .edui-icon {\\r\\n    background-position: -80px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertunorderedlist .edui-icon {\\r\\n    background-position: -20px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-lineheight .edui-icon {\\r\\n    background-position: -725px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-rowspacingbottom .edui-icon {\\r\\n    background-position: -745px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-rowspacingtop .edui-icon {\\r\\n    background-position: -765px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-horizontal .edui-icon {\\r\\n    background-position: -360px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-link .edui-icon {\\r\\n    background-position: -500px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-code .edui-icon {\\r\\n    background-position: -440px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertimage .edui-icon {\\r\\n    background-position: -726px -77px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertframe .edui-icon {\\r\\n    background-position: -240px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-emoticon .edui-icon {\\r\\n    background-position: -60px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-spechars .edui-icon {\\r\\n    background-position: -240px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-help .edui-icon {\\r\\n    background-position: -340px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-print .edui-icon {\\r\\n    background-position: -440px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-preview .edui-icon {\\r\\n    background-position: -420px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-selectall .edui-icon {\\r\\n    background-position: -400px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-searchreplace .edui-icon {\\r\\n    background-position: -520px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-map .edui-icon {\\r\\n    background-position: -40px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-gmap .edui-icon {\\r\\n    background-position: -260px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertvideo .edui-icon {\\r\\n    background-position: -320px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-time .edui-icon {\\r\\n    background-position: -160px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-date .edui-icon {\\r\\n    background-position: -140px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-cut .edui-icon {\\r\\n    background-position: -680px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-copy .edui-icon {\\r\\n    background-position: -700px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-paste .edui-icon {\\r\\n    background-position: -560px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-formatmatch .edui-icon {\\r\\n    background-position: -40px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-pasteplain .edui-icon {\\r\\n    background-position: -360px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-directionalityltr .edui-icon {\\r\\n    background-position: -20px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-directionalityrtl .edui-icon {\\r\\n    background-position: -40px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-source .edui-icon {\\r\\n    background-position: -261px -0px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-removeformat .edui-icon {\\r\\n    background-position: -580px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-unlink .edui-icon {\\r\\n    background-position: -640px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-touppercase .edui-icon {\\r\\n    background-position: -786px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-tolowercase .edui-icon {\\r\\n    background-position: -806px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertrow .edui-icon {\\r\\n    background-position: -478px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertrownext .edui-icon {\\r\\n    background-position: -498px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertcol .edui-icon {\\r\\n    background-position: -455px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertcolnext  .edui-icon {\\r\\n    background-position: -429px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-mergeright .edui-icon {\\r\\n    background-position: -60px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-mergedown .edui-icon {\\r\\n    background-position: -80px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-splittorows .edui-icon {\\r\\n    background-position: -100px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-splittocols .edui-icon {\\r\\n    background-position: -120px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertparagraphbeforetable .edui-icon {\\r\\n    background-position: -140px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-deleterow .edui-icon {\\r\\n    background-position: -660px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-deletecol .edui-icon {\\r\\n    background-position: -640px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-splittocells .edui-icon {\\r\\n    background-position: -800px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-mergecells .edui-icon {\\r\\n    background-position: -760px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-deletetable .edui-icon {\\r\\n    background-position: -620px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-cleardoc .edui-icon {\\r\\n    background-position: -520px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-fullscreen .edui-icon {\\r\\n    background-position: -100px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-anchor .edui-icon {\\r\\n    background-position: -200px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-pagebreak .edui-icon {\\r\\n    background-position: -460px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-imagenone .edui-icon {\\r\\n    background-position: -480px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-imageleft .edui-icon {\\r\\n    background-position: -500px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-wordimage .edui-icon {\\r\\n    background-position: -660px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-imageright .edui-icon {\\r\\n    background-position: -520px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-imagecenter .edui-icon {\\r\\n    background-position: -540px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-indent .edui-icon {\\r\\n    background-position: -400px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-outdent .edui-icon {\\r\\n    background-position: -540px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-webapp .edui-icon {\\r\\n    background-position: -601px -40px\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-table .edui-icon {\\r\\n    background-position: -580px -20px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-edittable .edui-icon {\\r\\n    background-position: -420px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-template .edui-icon {\\r\\n    background-position: -339px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-delete .edui-icon {\\r\\n    background-position: -360px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-attachment .edui-icon {\\r\\n    background-position: -620px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-edittd .edui-icon {\\r\\n    background-position: -700px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-snapscreen .edui-icon {\\r\\n    background-position: -581px -40px\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-scrawl .edui-icon {\\r\\n    background-position: -801px -41px\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-background .edui-icon {\\r\\n    background-position: -680px -40px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-music .edui-icon {\\r\\n    background-position: -18px -40px\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-formula .edui-icon {\\r\\n    background-position: -200px -40px\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-aligntd  .edui-icon {\\r\\n    background-position: -236px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertparagraphtrue  .edui-icon {\\r\\n    background-position: -625px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertparagraph  .edui-icon {\\r\\n    background-position: -602px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-insertcaption  .edui-icon {\\r\\n    background-position: -336px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-deletecaption  .edui-icon {\\r\\n    background-position: -362px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-inserttitle  .edui-icon {\\r\\n    background-position: -286px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-deletetitle  .edui-icon {\\r\\n    background-position: -311px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-aligntable  .edui-icon {\\r\\n    background-position: -440px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-tablealignment-left  .edui-icon {\\r\\n    background-position: -460px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-tablealignment-center  .edui-icon {\\r\\n    background-position: -420px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-tablealignment-right  .edui-icon {\\r\\n    background-position: -480px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-drafts  .edui-icon {\\r\\n    background-position: -560px 0;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-charts  .edui-icon {\\r\\n    background: url(" + escape(__webpack_require__(24)) + ") no-repeat 2px 3px!important;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-inserttitlecol  .edui-icon {\\r\\n    background-position: -673px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-deletetitlecol  .edui-icon {\\r\\n    background-position: -698px -76px;\\r\\n}\\r\\n\\r\\n.edui-default  .edui-for-simpleupload  .edui-icon {\\r\\n    background-position: -380px 0px;\\r\\n}\\r\\n\\n/*splitbutton*/\\r\\n.edui-default .edui-toolbar .edui-splitbutton-body .edui-arrow,\\r\\n.edui-default .edui-toolbar .edui-menubutton-body .edui-arrow {\\r\\n    background: url(" + escape(__webpack_require__(1)) + ") -741px 0;\\r\\n    _background: url(" + escape(__webpack_require__(2)) + ") -741px 0;\\r\\n    height: 20px;\\r\\n    width: 9px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-splitbutton .edui-splitbutton-body,\\r\\n.edui-default .edui-toolbar .edui-menubutton .edui-menubutton-body {\\r\\n    padding: 1px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-splitborder {\\r\\n    width: 1px;\\r\\n    height: 20px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-state-hover .edui-splitborder {\\r\\n    width: 1px;\\r\\n    border-left: 0px solid #dcac6c;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-state-active .edui-splitborder {\\r\\n    width: 0;\\r\\n    border-left: 1px solid gray;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-state-opened .edui-splitborder {\\r\\n    width: 1px;\\r\\n    border: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-splitbutton .edui-state-hover .edui-splitbutton-body,\\r\\n.edui-default .edui-toolbar .edui-menubutton .edui-state-hover .edui-menubutton-body {\\r\\n    background-color: #fff5d4;\\r\\n    border: 1px solid #dcac6c;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-splitbutton .edui-state-checked .edui-splitbutton-body,\\r\\n.edui-default .edui-toolbar .edui-menubutton .edui-state-checked .edui-menubutton-body {\\r\\n    background-color: #FFE69F;\\r\\n    border: 1px solid #DCAC6C;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-splitbutton .edui-state-active .edui-splitbutton-body,\\r\\n.edui-default .edui-toolbar .edui-menubutton .edui-state-active .edui-menubutton-body {\\r\\n    background-color: #ffffff;\\r\\n    border: 1px solid gray;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-state-disabled .edui-arrow {\\r\\n    opacity: 0.3;\\r\\n    _filter: alpha(opacity = 30);\\r\\n}\\r\\n\\r\\n.edui-default .edui-toolbar .edui-splitbutton .edui-state-opened .edui-splitbutton-body,\\r\\n.edui-default .edui-toolbar .edui-menubutton .edui-state-opened .edui-menubutton-body {\\r\\n    background-color: white;\\r\\n    border: 1px solid gray;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-insertorderedlist .edui-bordereraser,\\r\\n.edui-default .edui-for-lineheight .edui-bordereraser,\\r\\n.edui-default .edui-for-rowspacingtop .edui-bordereraser,\\r\\n.edui-default .edui-for-rowspacingbottom .edui-bordereraser,\\r\\n.edui-default .edui-for-insertunorderedlist .edui-bordereraser {\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n/* 解决嵌套导致的图标问题 */\\r\\n.edui-default .edui-for-insertorderedlist .edui-popup-body .edui-icon,\\r\\n.edui-default .edui-for-lineheight .edui-popup-body .edui-icon,\\r\\n.edui-default .edui-for-rowspacingtop .edui-popup-body .edui-icon,\\r\\n.edui-default .edui-for-rowspacingbottom .edui-popup-body .edui-icon,\\r\\n.edui-default .edui-for-insertunorderedlist .edui-popup-body .edui-icon {\\r\\n    /*background-position: 0 -40px;*/\\r\\n    background-image: none  ;\\r\\n}\\r\\n\\n/* 弹出菜单 */\\r\\n.edui-default .edui-popup {\\r\\n    z-index: 3000;\\r\\n    background-color: #ffffff;\\r\\n    width:auto;\\r\\n    height:auto;\\r\\n    -webkit-border-radius: 6px;\\r\\n    -moz-border-radius: 6px;\\r\\n    border-radius: 6px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-popup .edui-shadow {\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.edui-default .edui-popup-content {\\r\\n    border:1px solid #ccc;\\r\\n    border: 1px solid rgba(0, 0, 0, 0.2);\\r\\n    *border-right-width: 2px;\\r\\n    *border-bottom-width: 2px;\\r\\n    -webkit-border-radius: 6px;\\r\\n    -moz-border-radius: 6px;\\r\\n    border-radius: 6px;\\r\\n    -webkit-box-shadow: 0 3px 4px rgba(0, 0, 0, 0.2);\\r\\n    -moz-box-shadow: 0 3px 4px rgba(0, 0, 0, 0.2);\\r\\n    box-shadow: 0 3px 4px rgba(0, 0, 0, 0.2);\\r\\n    -webkit-background-clip: padding-box;\\r\\n    -moz-background-clip: padding;\\r\\n    background-clip: padding-box;\\r\\n    padding: 5px;\\r\\n    background:#ffffff;\\r\\n}\\r\\n\\r\\n.edui-default .edui-popup .edui-bordereraser {\\r\\n    background-color: white;\\r\\n    height: 3px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menu .edui-bordereraser {\\r\\n    height: 3px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-anchor-topleft .edui-bordereraser {\\r\\n    left: 1px;\\r\\n    top: -2px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-anchor-topright .edui-bordereraser {\\r\\n    right: 1px;\\r\\n    top: -2px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-anchor-bottomleft .edui-bordereraser {\\r\\n    left: 0;\\r\\n    bottom: -6px;\\r\\n    height: 7px;\\r\\n    border-left: 1px solid gray;\\r\\n    border-right: 1px solid gray;\\r\\n}\\r\\n\\r\\n.edui-default .edui-anchor-bottomright .edui-bordereraser {\\r\\n    right: 0;\\r\\n    bottom: -6px;\\r\\n    height: 7px;\\r\\n    border-left: 1px solid gray;\\r\\n    border-right: 1px solid gray;\\r\\n}\\r\\n\\r\\n.edui-popup div{\\r\\n    width:auto;\\r\\n    height:auto;\\r\\n}\\n.edui-default .edui-editor-messageholder {\\n    display: block;\\n    width: 150px;\\n    height: auto;\\n    border: 0;\\n    margin: 0;\\n    padding: 0;\\n    position: absolute;\\n    top: 28px;\\n    right: 3px;\\n}\\n\\n.edui-default .edui-message{\\n    min-height: 10px;\\n    text-shadow: 0 1px 0 rgba(255,255,255,0.5);\\n    padding: 0;\\n    margin-bottom: 3px;\\n    position: relative;\\n}\\n.edui-default .edui-message-body{\\n    border-radius: 3px;\\n    padding: 8px 15px 8px 8px;\\n    color: #c09853;\\n    background-color: #fcf8e3;\\n    border: 1px solid #fbeed5;\\n}\\n.edui-default .edui-message-type-info{\\n    color: #3a87ad;\\n    background-color: #d9edf7;\\n    border-color: #bce8f1\\n}\\n.edui-default .edui-message-type-success{\\n    color: #468847;\\n    background-color: #dff0d8;\\n    border-color: #d6e9c6\\n}\\n.edui-default .edui-message-type-danger,\\n.edui-default .edui-message-type-error{\\n    color: #b94a48;\\n    background-color: #f2dede;\\n    border-color: #eed3d7\\n}\\n.edui-default .edui-message .edui-message-closer {\\n    display: block;\\n    width: 16px;\\n    height: 16px;\\n    line-height: 16px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 0;\\n    cursor: pointer;\\n    background: transparent;\\n    border: 0;\\n    float: right;\\n    font-size: 20px;\\n    font-weight: bold;\\n    color: #999;\\n    text-shadow: 0 1px 0 #fff;\\n    font-family: \\"Helvetica Neue\\",Helvetica,Arial,sans-serif;\\n}\\n.edui-default .edui-message .edui-message-content {\\n    font-size: 10pt;\\n    word-wrap: break-word;\\n    word-break: normal;\\n}\\n/* 弹出对话框按钮和对话框大小 */\\r\\n.edui-default .edui-dialog {\\r\\n    z-index: 2000;\\r\\n    position: absolute;\\r\\n\\r\\n}\\r\\n\\r\\n.edui-dialog div{\\r\\n    width:auto;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-wrap {\\r\\n    margin-right: 6px;\\r\\n    margin-bottom: 6px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-fullscreen-flag {\\r\\n    margin-right: 0;\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-body {\\r\\n    position: relative;\\r\\n    padding:2px 0 0 2px;\\r\\n    _zoom: 1;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-fullscreen-flag .edui-dialog-body {\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-shadow {\\r\\n    position: absolute;\\r\\n    z-index: -1;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color: #ffffff;\\r\\n    border: 1px solid #ccc;\\r\\n    border: 1px solid rgba(0, 0, 0, 0.2);\\r\\n    *border-right-width: 2px;\\r\\n    *border-bottom-width: 2px;\\r\\n    -webkit-border-radius: 6px;\\r\\n    -moz-border-radius: 6px;\\r\\n    border-radius: 6px;\\r\\n    -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\\r\\n    -moz-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\\r\\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\\r\\n    -webkit-background-clip: padding-box;\\r\\n    -moz-background-clip: padding;\\r\\n    background-clip: padding-box;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-foot {\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-titlebar {\\r\\n    height: 26px;\\r\\n    border-bottom: 1px solid #c6c6c6;\\r\\n    background: url(" + escape(__webpack_require__(25)) + ") repeat-x bottom;\\r\\n    position: relative;\\r\\n    cursor: move;\\r\\n}\\r\\n.edui-default .edui-dialog-caption {\\r\\n    font-weight: bold;\\r\\n    font-size: 12px;\\r\\n    line-height: 26px;\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-draghandle {\\r\\n    height: 26px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-closebutton {\\r\\n    position: absolute !important;\\r\\n    right: 5px;\\r\\n    top: 3px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-closebutton .edui-button-body {\\r\\n    height: 20px;\\r\\n    width: 20px;\\r\\n    cursor: pointer;\\r\\n    background: url(" + escape(__webpack_require__(0)) + ") no-repeat 0 -59px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-closebutton .edui-state-hover .edui-button-body {\\r\\n    background: url(" + escape(__webpack_require__(0)) + ") no-repeat 0 -89px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-foot {\\r\\n    height: 40px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-buttons {\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-buttons .edui-button {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-buttons .edui-button .edui-button-body {\\r\\n    background: url(" + escape(__webpack_require__(0)) + ") no-repeat;\\r\\n    height: 24px;\\r\\n    width: 96px;\\r\\n    font-size: 12px;\\r\\n    line-height: 24px;\\r\\n    text-align: center;\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-buttons .edui-button .edui-state-hover .edui-button-body {\\r\\n    background: url(" + escape(__webpack_require__(0)) + ") no-repeat 0 -30px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog iframe {\\r\\n    border: 0;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-modalmask {\\r\\n    opacity: 0.3;\\r\\n    filter: alpha(opacity = 30);\\r\\n    background-color: #ccc;\\r\\n    position: absolute;\\r\\n    /*z-index: 1999;*/\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-dragmask {\\r\\n    position: absolute;\\r\\n    /*z-index: 2001;*/\\r\\n    background-color: transparent;\\r\\n    cursor: move;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-content {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.edui-default .dialogcontmask {\\r\\n    cursor: move;\\r\\n    visibility: hidden;\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    opacity: 0;\\r\\n    filter: alpha(opacity = 0);\\r\\n}\\r\\n\\r\\n/*link-dialog*/\\r\\n.edui-default .edui-for-link .edui-dialog-content {\\r\\n    width: 420px;\\r\\n    height: 200px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n/*background-dialog*/\\r\\n.edui-default .edui-for-background .edui-dialog-content {\\r\\n    width: 440px;\\r\\n    height: 280px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n/*template-dialog*/\\r\\n.edui-default .edui-for-template .edui-dialog-content {\\r\\n    width: 630px;\\r\\n    height: 390px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n/*scrawl-dialog*/\\r\\n.edui-default .edui-for-scrawl .edui-dialog-content {\\r\\n    width: 515px;\\r\\n    *width: 506px;\\r\\n    height: 360px;\\r\\n}\\r\\n\\r\\n/*spechars-dialog*/\\r\\n.edui-default .edui-for-spechars .edui-dialog-content {\\r\\n    width: 620px;\\r\\n    height: 500px;\\r\\n    *width: 630px;\\r\\n    *height: 570px;\\r\\n}\\r\\n\\r\\n/*image-dialog*/\\r\\n.edui-default .edui-for-insertimage .edui-dialog-content {\\r\\n    width: 650px;\\r\\n    height: 400px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n/*webapp-dialog*/\\r\\n.edui-default .edui-for-webapp .edui-dialog-content {\\r\\n    width: 560px;\\r\\n    _width: 565px;\\r\\n    height: 450px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n/*image-insertframe*/\\r\\n.edui-default .edui-for-insertframe .edui-dialog-content {\\r\\n    width: 350px;\\r\\n    height: 200px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n/*wordImage-dialog*/\\r\\n.edui-default .edui-for-wordimage .edui-dialog-content {\\r\\n    width: 620px;\\r\\n    height: 380px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n/*attachment-dialog*/\\r\\n.edui-default .edui-for-attachment .edui-dialog-content {\\r\\n    width: 650px;\\r\\n    height: 400px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n\\r\\n/*map-dialog*/\\r\\n.edui-default .edui-for-map .edui-dialog-content {\\r\\n    width: 550px;\\r\\n    height: 400px;\\r\\n}\\r\\n\\r\\n/*gmap-dialog*/\\r\\n.edui-default .edui-for-gmap .edui-dialog-content {\\r\\n    width: 550px;\\r\\n    height: 400px;\\r\\n}\\r\\n\\r\\n/*video-dialog*/\\r\\n.edui-default .edui-for-insertvideo .edui-dialog-content {\\r\\n    width: 590px;\\r\\n    height: 390px;\\r\\n}\\r\\n\\r\\n/*anchor-dialog*/\\r\\n.edui-default .edui-for-anchor .edui-dialog-content {\\r\\n    width: 320px;\\r\\n    height: 60px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n/*searchreplace-dialog*/\\r\\n.edui-default .edui-for-searchreplace .edui-dialog-content {\\r\\n    width: 400px;\\r\\n    height: 220px;\\r\\n}\\r\\n\\r\\n/*help-dialog*/\\r\\n.edui-default .edui-for-help .edui-dialog-content {\\r\\n    width: 400px;\\r\\n    height: 420px;\\r\\n}\\r\\n\\r\\n/*edittable-dialog*/\\r\\n.edui-default .edui-for-edittable .edui-dialog-content {\\r\\n    width: 540px;\\r\\n    _width:590px;\\r\\n    height: 335px;\\r\\n}\\r\\n\\r\\n/*edittip-dialog*/\\r\\n.edui-default .edui-for-edittip .edui-dialog-content {\\r\\n    width: 225px;\\r\\n    height: 60px;\\r\\n}\\r\\n\\r\\n/*edittd-dialog*/\\r\\n.edui-default .edui-for-edittd .edui-dialog-content {\\r\\n    width: 240px;\\r\\n    height: 50px;\\r\\n}\\r\\n/*snapscreen-dialog*/\\r\\n.edui-default .edui-for-snapscreen .edui-dialog-content {\\r\\n    width: 400px;\\r\\n    height: 220px;\\r\\n}\\r\\n\\r\\n/*music-dialog*/\\r\\n.edui-default .edui-for-music .edui-dialog-content {\\r\\n    width: 515px;\\r\\n    height: 360px;\\r\\n}\\r\\n\\n/*段落弹出菜单*/\\r\\n.edui-default .edui-for-paragraph .edui-listitem-label {\\r\\n    font-family: Tahoma, Verdana, Arial, Helvetica;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-paragraph .edui-listitem-label .edui-for-p {\\r\\n    font-size: 22px;\\r\\n    line-height: 27px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-paragraph .edui-listitem-label .edui-for-h1 {\\r\\n    font-weight: bolder;\\r\\n    font-size: 32px;\\r\\n    line-height: 36px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-paragraph .edui-listitem-label .edui-for-h2 {\\r\\n    font-weight: bolder;\\r\\n    font-size: 27px;\\r\\n    line-height: 29px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-paragraph .edui-listitem-label .edui-for-h3 {\\r\\n    font-weight: bolder;\\r\\n    font-size: 19px;\\r\\n    line-height: 23px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-paragraph .edui-listitem-label .edui-for-h4 {\\r\\n    font-weight: bolder;\\r\\n    font-size: 16px;\\r\\n    line-height: 19px\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-paragraph .edui-listitem-label .edui-for-h5 {\\r\\n    font-weight: bolder;\\r\\n    font-size: 13px;\\r\\n    line-height: 16px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-paragraph .edui-listitem-label .edui-for-h6 {\\r\\n    font-weight: bolder;\\r\\n    font-size: 12px;\\r\\n    line-height: 14px;\\r\\n}\\n/* 表格弹出菜单 */\\r\\n.edui-default .edui-for-inserttable .edui-splitborder {\\r\\n    display: none\\r\\n}\\r\\n.edui-default .edui-for-inserttable  .edui-splitbutton-body .edui-arrow {\\r\\n    width: 0\\r\\n}\\r\\n.edui-default .edui-toolbar .edui-for-inserttable  .edui-state-active .edui-splitborder{\\r\\n    border-left: 1px solid transparent;\\r\\n}\\r\\n.edui-default .edui-tablepicker .edui-infoarea {\\r\\n    height: 14px;\\r\\n    line-height: 14px;\\r\\n    font-size: 12px;\\r\\n    width: 220px;\\r\\n    margin-bottom: 3px;\\r\\n    clear: both;\\r\\n}\\r\\n\\r\\n.edui-default .edui-tablepicker .edui-infoarea .edui-label {\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.edui-default .edui-dialog-buttons .edui-label {\\r\\n    line-height: 24px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-tablepicker .edui-infoarea .edui-clickable {\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.edui-default .edui-tablepicker .edui-pickarea {\\r\\n    background: url(" + escape(__webpack_require__(26)) + ") repeat;\\r\\n    height: 220px;\\r\\n    width: 220px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-tablepicker .edui-pickarea .edui-overlay {\\r\\n    background: url(" + escape(__webpack_require__(27)) + ") repeat;\\r\\n}\\r\\n\\n/* 颜色弹出菜单 */\\r\\n.edui-default .edui-colorpicker-topbar {\\r\\n    height: 27px;\\r\\n    width: 200px;\\r\\n    /*border-bottom: 1px gray dashed;*/\\r\\n}\\r\\n\\r\\n.edui-default .edui-colorpicker-preview {\\r\\n    height: 20px;\\r\\n    border: 1px inset black;\\r\\n    margin-left: 1px;\\r\\n    width: 128px;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.edui-default .edui-colorpicker-nocolor {\\r\\n    float: right;\\r\\n    margin-right: 1px;\\r\\n    font-size: 12px;\\r\\n    line-height: 14px;\\r\\n    height: 14px;\\r\\n    border: 1px solid #333;\\r\\n    padding: 3px 5px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.edui-default .edui-colorpicker-tablefirstrow {\\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-colorpicker-colorcell {\\r\\n    width: 14px;\\r\\n    height: 14px;\\r\\n    display: block;\\r\\n    margin: 0;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.edui-default .edui-colorpicker-colorcell:hover {\\r\\n    width: 14px;\\r\\n    height: 14px;\\r\\n    margin: 0;\\r\\n}\\r\\n.edui-default .edui-colorpicker-advbtn{\\r\\n    display: block;\\r\\n    text-align: center;\\r\\n    cursor: pointer;\\r\\n    height:20px;\\r\\n}\\r\\n.arrow_down{\\r\\n    background: white url(" + escape(__webpack_require__(28)) + ") no-repeat center;\\r\\n}\\r\\n.arrow_up{\\r\\n    background: white url(" + escape(__webpack_require__(29)) + ") no-repeat center;\\r\\n}\\r\\n/*高级的样式*/\\r\\n.edui-colorpicker-adv{\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    height: 180px;\\r\\n    display: none;\\r\\n}\\r\\n.edui-colorpicker-plant, .edui-colorpicker-hue {\\r\\n    border: solid 1px #666;\\r\\n}\\r\\n.edui-colorpicker-pad {\\r\\n    width: 150px;\\r\\n    height: 150px;\\r\\n    left: 14px;\\r\\n    top: 13px;\\r\\n    position: absolute;\\r\\n    background: red;\\r\\n    overflow: hidden;\\r\\n    cursor: crosshair;\\r\\n}\\r\\n.edui-colorpicker-cover{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 150px;\\r\\n    height: 150px;\\r\\n    background: url(" + escape(__webpack_require__(4)) + ") -160px -200px;\\r\\n}\\r\\n.edui-colorpicker-padDot{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 11px;\\r\\n    height: 11px;\\r\\n    overflow: hidden;\\r\\n    background: url(" + escape(__webpack_require__(4)) + ") 0px -200px repeat-x;\\r\\n    z-index: 1000;\\r\\n\\r\\n}\\r\\n.edui-colorpicker-sliderMain {\\r\\n    position: absolute;\\r\\n    left: 171px;\\r\\n    top: 13px;\\r\\n    width: 19px;\\r\\n    height: 152px;\\r\\n    background: url(" + escape(__webpack_require__(4)) + ") -179px -12px no-repeat;\\r\\n\\r\\n}\\r\\n.edui-colorpicker-slider {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.edui-colorpicker-thumb{\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    cursor: pointer;\\r\\n    height: 3px;\\r\\n    left: -1px;\\r\\n    right: -1px;\\r\\n    border: 1px solid black;\\r\\n    background: white;\\r\\n    opacity: .8;\\r\\n}\\n/*自动排版弹出菜单*/\\r\\n.edui-default .edui-autotypesetpicker .edui-autotypesetpicker-body {\\r\\n    font-size: 12px;\\r\\n    margin-bottom: 3px;\\r\\n    clear: both;\\r\\n}\\r\\n\\r\\n.edui-default .edui-autotypesetpicker-body table {\\r\\n    border-collapse: separate;\\r\\n    border-spacing: 2px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-autotypesetpicker-body td {\\r\\n    font-size: 12px;\\r\\n    word-wrap:break-word;\\r\\n}\\r\\n\\r\\n.edui-default .edui-autotypesetpicker-body td input {\\r\\n    margin: 3px 3px 3px 4px;\\r\\n    *margin: 1px 0 0 0;\\r\\n}\\n/*自动排版弹出菜单*/\\n.edui-default .edui-cellalignpicker .edui-cellalignpicker-body {\\n    width: 70px;\\n    font-size: 12px;\\n    cursor: default;\\n}\\n\\n.edui-default .edui-cellalignpicker-body table {\\n    border-collapse: separate;\\n    border-spacing: 0;\\n}\\n.edui-default .edui-cellalignpicker-body td{\\n    padding: 1px;\\n}\\n.edui-default .edui-cellalignpicker-body .edui-icon{\\n    height: 20px;\\n    width: 20px;\\n    padding: 1px;\\n    background-image: url(" + escape(__webpack_require__(30)) + ");\\n}\\n\\n.edui-default .edui-cellalignpicker-body .edui-left{\\n    background-position: 0 0;\\n}\\n\\n.edui-default .edui-cellalignpicker-body .edui-center{\\n    background-position: -25px 0;\\n}\\n.edui-default .edui-cellalignpicker-body .edui-right{\\n    background-position: -51px 0;\\n}\\n\\n.edui-default .edui-cellalignpicker-body td.edui-state-hover .edui-left{\\n    background-position: -73px 0;\\n}\\n\\n.edui-default .edui-cellalignpicker-body td.edui-state-hover .edui-center{\\n    background-position: -98px 0;\\n}\\n\\n.edui-default .edui-cellalignpicker-body td.edui-state-hover .edui-right{\\n    background-position: -124px 0;\\n}\\n\\n.edui-default .edui-cellalignpicker-body td.edui-cellalign-selected .edui-left {\\n    background-position: -146px 0;\\n    background-color: #f1f4f5;\\n}\\n\\n.edui-default .edui-cellalignpicker-body td.edui-cellalign-selected .edui-center {\\n    background-position: -245px 0;\\n}\\n\\n.edui-default .edui-cellalignpicker-body td.edui-cellalign-selected .edui-right {\\n    background-position: -271px 0;\\n}\\n/*分隔线*/\\r\\n.edui-default .edui-toolbar .edui-separator {\\r\\n    width: 2px;\\r\\n    height: 20px;\\r\\n    margin: 2px 4px 2px 3px;\\r\\n    background: url(" + escape(__webpack_require__(1)) + ") -181px 0;\\r\\n    background: url(" + escape(__webpack_require__(2)) + ") -181px 0 \\\\9;\\r\\n}\\r\\n\\n/*颜色按钮 */\\r\\n.edui-default .edui-toolbar .edui-colorbutton .edui-colorlump {\\r\\n    position: absolute;\\r\\n    overflow: hidden;\\r\\n    bottom: 1px;\\r\\n    left: 1px;\\r\\n    width: 18px;\\r\\n    height: 4px;\\r\\n}\\n/*表情按钮及弹出菜单*/\\r\\n/*去除了表情的下拉箭头*/\\r\\n.edui-default .edui-for-emotion .edui-icon {\\r\\n    background-position: -60px -20px;\\r\\n}\\r\\n.edui-default .edui-for-emotion .edui-popup-content iframe\\r\\n{\\r\\n    width: 514px;\\r\\n    height: 380px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n.edui-default .edui-for-emotion .edui-popup-content\\r\\n{\\r\\n    position: relative;\\r\\n    z-index: 555\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-emotion .edui-splitborder {\\r\\n    display: none\\r\\n}\\r\\n\\r\\n.edui-default .edui-for-emotion .edui-splitbutton-body .edui-arrow\\r\\n{\\r\\n    width: 0\\r\\n}\\r\\n.edui-default .edui-toolbar .edui-for-emotion  .edui-state-active .edui-splitborder\\r\\n{\\r\\n    border-left: 1px solid transparent;\\r\\n}\\n/*contextmenu*/\\r\\n.edui-default .edui-hassubmenu .edui-arrow {\\r\\n    height: 20px;\\r\\n    width: 20px;\\r\\n    float: right;\\r\\n    background: url(" + escape(__webpack_require__(0)) + ") no-repeat 10px -233px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menu-body .edui-menuitem {\\r\\n    padding: 1px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menuseparator {\\r\\n    margin: 2px 0;\\r\\n    height: 1px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menuseparator-inner {\\r\\n    border-bottom: 1px solid #e2e3e3;\\r\\n    margin-left: 29px;\\r\\n    margin-right: 1px;\\r\\n}\\r\\n\\r\\n.edui-default .edui-menu-body .edui-state-hover {\\r\\n    padding: 0 !important;\\r\\n    background-color: #fff5d4;\\r\\n    border: 1px solid #dcac6c;\\r\\n}\\n/*弹出菜单*/\\n.edui-default .edui-shortcutmenu {\\n    padding: 2px;\\n    width: 190px;\\n    height: 50px;\\n    background-color: #fff;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n}\\n\\n/*粘贴弹出菜单*/\\n.edui-default .edui-wordpastepop .edui-popup-content{\\n    border: none;\\n    padding: 0;\\n    width: 54px;\\n    height: 21px;\\n}\\n.edui-default  .edui-pasteicon {\\n    width: 100%;\\n    height: 100%;\\n    background-image: url(" + escape(__webpack_require__(7)) + ");\\n    background-position: 0 0;\\n}\\n\\n.edui-default  .edui-pasteicon.edui-state-opened {\\n    background-position: 0 -34px;\\n}\\n\\n.edui-default  .edui-pastecontainer {\\n    position: relative;\\n    visibility: hidden;\\n    width: 97px;\\n    background: #fff;\\n    border: 1px solid #ccc;\\n}\\n\\n.edui-default  .edui-pastecontainer .edui-title {\\n    font-weight: bold;\\n    background: #F8F8FF;\\n    height: 25px;\\n    line-height: 25px;\\n    font-size: 12px;\\n    padding-left: 5px;\\n}\\n\\n.edui-default  .edui-pastecontainer .edui-button {\\n    overflow: hidden;\\n    margin: 3px 0;\\n}\\n\\n.edui-default  .edui-pastecontainer .edui-button .edui-richtxticon,\\n.edui-default  .edui-pastecontainer .edui-button .edui-tagicon,\\n.edui-default  .edui-pastecontainer .edui-button .edui-plaintxticon{\\n    float: left;\\n    cursor: pointer;\\n    width: 29px;\\n    height: 29px;\\n    margin-left: 5px;\\n    background-image: url(" + escape(__webpack_require__(7)) + ");\\n    background-repeat: no-repeat;\\n}\\n.edui-default  .edui-pastecontainer .edui-button .edui-richtxticon {\\n    margin-left: 0;\\n    background-position: -109px 0;\\n}\\n.edui-default  .edui-pastecontainer .edui-button .edui-tagicon {\\n    background-position: -148px 1px;\\n}\\n\\n.edui-default  .edui-pastecontainer .edui-button .edui-plaintxticon {\\n    background-position: -72px 0;\\n}\\n\\n.edui-default  .edui-pastecontainer .edui-button .edui-state-hover .edui-richtxticon {\\n    background-position: -109px -34px;\\n}\\n.edui-default  .edui-pastecontainer .edui-button .edui-state-hover .edui-tagicon{\\n    background-position: -148px -34px;\\n}\\n.edui-default  .edui-pastecontainer .edui-button  .edui-state-hover .edui-plaintxticon{\\n    background-position: -72px -34px;\\n}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///20\n')},function(module,exports){eval("module.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvdXJsL2VzY2FwZS5qcz9iMDQxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVzY2FwZSh1cmwpIHtcbiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHVybFxuICAgIH1cbiAgICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICAgICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgICB9XG4gICAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAgIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gICAgaWYgKC9bXCInKCkgXFx0XFxuXS8udGVzdCh1cmwpKSB7XG4gICAgICAgIHJldHVybiAnXCInICsgdXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgJ1xcXFxuJykgKyAnXCInXG4gICAgfVxuXG4gICAgcmV0dXJuIHVybFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n")},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "44274c1e95b775c004f110f84db1c058.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9zY2FsZS5wbmc/YjI4YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6IjIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNDQyNzRjMWU5NWI3NzVjMDA0ZjExMGY4NGRiMWMwNTgucG5nXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "9d34b0cc46ae6d88e3c7183933be762f.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9zcGFyYXRvcl92LnBuZz80NWI4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixxQkFBdUIiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI5ZDM0YjBjYzQ2YWU2ZDg4ZTNjNzE4MzkzM2JlNzYyZi5wbmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///23\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "6555bb1e761aba45078f600eee974a66.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9jaGFydHMucG5nPzRkMDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLHFCQUF1QiIsImZpbGUiOiIyNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjY1NTViYjFlNzYxYWJhNDUwNzhmNjAwZWVlOTc0YTY2LnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///24\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "1c4486a78ac7758a7ab3bd84e1a38066.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9kaWFsb2ctdGl0bGUtYmcucG5nPzM2NWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLHFCQUF1QiIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjFjNDQ4NmE3OGFjNzc1OGE3YWIzYmQ4NGUxYTM4MDY2LnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///25\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "ccba56505949f6d112ff6127d9b7eef0.gif";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy91bmhpZ2hsaWdodGVkLmdpZj9kOWYzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixxQkFBdUIiLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjY2JhNTY1MDU5NDlmNmQxMTJmZjYxMjdkOWI3ZWVmMC5naWZcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "940250e1b9b228f11916e9591417235e.gif";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9oaWdobGlnaHRlZC5naWY/OGZlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6IjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiOTQwMjUwZTFiOWIyMjhmMTE5MTZlOTU5MTQxNzIzNWUuZ2lmXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///27\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "06a16826b506f5264e29cc3c84137455.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9hcnJvd19kb3duLnBuZz81ZWYxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixxQkFBdUIiLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIwNmExNjgyNmI1MDZmNTI2NGUyOWNjM2M4NDEzNzQ1NS5wbmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///28\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "888bff7ff3165632455621e1b899287d.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9hcnJvd191cC5wbmc/ODJkMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6IjI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiODg4YmZmN2ZmMzE2NTYzMjQ1NTYyMWUxYjg5OTI4N2QucG5nXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29\n')},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "676456b57740b2a325b23a54902d21a6.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9kZWZhdWx0L2ltYWdlcy90YWJsZS1jZWxsLWFsaWduLnBuZz9hYzc0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixxQkFBdUIiLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI2NzY0NTZiNTc3NDBiMmEzMjViMjNhNTQ5MDJkMjFhNi5wbmdcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///30\n')},function(module,exports){eval('\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function "fixes" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== "undefined" && window.location;\n\n  if (!location) {\n    throw new Error("fixUrls requires window.location");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== "string") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + "//" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, "/");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word "url" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn\'t a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn\'t a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn\'t a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^"(.*)"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^\'(.*)\'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf("//") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf("/") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with \'/\'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, ""); // Strip leading \'./\'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn "url(" + JSON.stringify(newUrl) + ")";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzP2Y2ZDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxXQUFXLEVBQUU7QUFDckQsd0NBQXdDLFdBQVcsRUFBRTs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQ0FBc0M7QUFDdEMsR0FBRztBQUNIO0FBQ0EsOERBQThEO0FBQzlEOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQSIsImZpbGUiOiIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///31\n')},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(33);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(8)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9pZnJhbWUuY3NzP2M4NmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxFQUF1RDs7QUFFN0UsNENBQTRDLFFBQVM7O0FBRXJEO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLENBQW1EOztBQUV4RTs7QUFFQSxHQUFHLEtBQVUsRUFBRSIsImZpbGUiOiIzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL2lmcmFtZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vaWZyYW1lLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vaWZyYW1lLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///32\n")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(6)(false);\n// imports\n\n\n// module\nexports.push([module.i, "/*可以在这里添加你自己的css*/\\r\\n", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91ZWRpdG9yL3RoZW1lcy9pZnJhbWUuY3NzPzY5YzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsQ0FBK0M7QUFDbEY7OztBQUdBO0FBQ0EsY0FBYyxRQUFTOztBQUV2QiIsImZpbGUiOiIzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLyrlj6/ku6XlnKjov5nph4zmt7vliqDkvaDoh6rlt7HnmoRjc3MqL1xcclxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///33\n')}]);